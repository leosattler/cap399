
;; Function set1d.part.0 (set1d.part.0, funcdef_no=719, decl_uid=13168, cgraph_uid=0, symbol_order=750)

Merging blocks 2 and 6
set1d.part.0 (float * arr)
{
  vector(4) float * vectp_arr.176;
  vector(4) float * vectp_arr.175;
  vector(4) float vect__9.174;
  vector(4) float vect__4.173;
  vector(4) int vect__3.172;
  vector(4) int vect__2.171;
  vector(4) int vect_vec_iv_.170;
  int i;
  int i;
  int i;
  float value;
  int stride;
  int _2;
  int _3;
  float _4;
  long unsigned int _5;
  long unsigned int _6;
  float * _8;
  float _9;
  vector(4) int vect_cst__14;
  vector(4) float vect_cst__18;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  vector(4) int vect_cst__26;
  unsigned int ivtmp_27;
  unsigned int ivtmp_28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  vect_cst__26 = { 4, 4, 4, 4 };
  vect_cst__14 = { 1, 1, 1, 1 };
  vect_cst__18 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       5
;;                2
  # i_16 = PHI <_2(5), 0(2)>
  # ivtmp_28 = PHI <ivtmp_27(5), 32000(2)>
  # vect_vec_iv_.170_25 = PHI <vect_vec_iv_.170_15(5), { 0, 1, 2, 3 }(2)>
  # vectp_arr.175_20 = PHI <vectp_arr.175_24(5), arr_7(D)(2)>
  # ivtmp_22 = PHI <ivtmp_23(5), 0(2)>
  vect_vec_iv_.170_15 = vect_vec_iv_.170_25 + vect_cst__26;
  vect__2.171_13 = vect_vec_iv_.170_25 + vect_cst__14;
  _2 = i_16 + 1;
  vect__3.172_10 = vect__2.171_13 * vect__2.171_13;
  _3 = _2 * _2;
  vect__4.173_1 = (vector(4) float) vect__3.172_10;
  _4 = (float) _3;
  _5 = (long unsigned int) i_16;
  _6 = _5 * 4;
  _8 = arr_7(D) + _6;
  vect__9.174_19 = vect_cst__18 / vect__4.173_1;
  _9 = 1.0e+0 / _4;
  MEM[(float *)vectp_arr.175_20] = vect__9.174_19;
  ivtmp_27 = ivtmp_28 - 1;
  vectp_arr.175_24 = vectp_arr.175_20 + 16;
  ivtmp_23 = ivtmp_22 + 1;
  if (ivtmp_23 < 8000)
    goto <bb 5>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       5
;;                4

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  return;
;;    succ:       EXIT

}



;; Function set2d.part.2 (set2d.part.2, funcdef_no=721, decl_uid=13189, cgraph_uid=2, symbol_order=752)

Merging blocks 5 and 9
set2d.part.2 (float[256] * arr)
{
  vector(4) float * vectp.185;
  vector(4) float * vectp.184;
  int i;
  int j;
  int i;
  int j;
  int i;
  int j;
  float value;
  int stride;
  vector(4) float vect_cst__1;
  int _2;
  int _3;
  float _4;
  long unsigned int _5;
  long unsigned int _6;
  float[256] * _8;
  float _9;
  unsigned int ivtmp_10;
  unsigned int ivtmp_12;
  unsigned int ivtmp_17;
  unsigned int ivtmp_18;
  unsigned int ivtmp_19;
  long unsigned int _20;
  unsigned int ivtmp_21;
  long unsigned int _22;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # j_24 = PHI <j_11(8), 0(5)>
  # ivtmp_21 = PHI <ivtmp_19(8), 256(5)>
  # vectp.184_14 = PHI <vectp.184_27(8), vectp.185_28(5)>
  # ivtmp_17 = PHI <ivtmp_18(8), 0(5)>
  MEM[(float *)vectp.184_14] = vect_cst__1;
  j_11 = j_24 + 1;
  ivtmp_19 = ivtmp_21 - 1;
  vectp.184_27 = vectp.184_14 + 16;
  ivtmp_18 = ivtmp_17 + 1;
  if (ivtmp_18 < 64)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  ivtmp_10 = ivtmp_12 - 1;
  if (ivtmp_10 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # i_23 = PHI <0(2), _2(7)>
  # ivtmp_12 = PHI <256(2), ivtmp_10(7)>
  _2 = i_23 + 1;
  _3 = _2 * _2;
  _4 = (float) _3;
  _5 = (long unsigned int) i_23;
  _6 = _5 * 1024;
  _8 = arr_7(D) + _6;
  _9 = 1.0e+0 / _4;
  vect_cst__1 = {_9, _9, _9, _9};
  _22 = (long unsigned int) i_23;
  _20 = _22 * 1024;
  vectp.185_28 = arr_7(D) + _20;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  return;
;;    succ:       EXIT

}



;; Function set2d.constprop (set2d.constprop.5, funcdef_no=727, decl_uid=13944, cgraph_uid=10, symbol_order=779)

Merging blocks 5 and 9
set2d.constprop (float[256] * arr, float value)
{
  vector(4) float * vectp.202;
  vector(4) float * vectp.201;
  int i;
  int j;
  int i;
  int i;
  int j;
  int stride;
  unsigned int ivtmp_1;
  unsigned int ivtmp_7;
  unsigned int ivtmp_8;
  long unsigned int _11;
  unsigned int ivtmp_12;
  long unsigned int _13;
  long unsigned int _14;
  float[256] * _15;
  vector(4) float vect_cst__17;
  unsigned int ivtmp_21;
  long unsigned int _24;
  unsigned int ivtmp_25;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # j_3 = PHI <j_18(8), 0(5)>
  # ivtmp_12 = PHI <ivtmp_1(8), 256(5)>
  # vectp.201_23 = PHI <vectp.201_20(8), vectp.202_9(5)>
  # ivtmp_7 = PHI <ivtmp_8(8), 0(5)>
  MEM[(float *)vectp.201_23] = vect_cst__17;
  j_18 = j_3 + 1;
  ivtmp_1 = ivtmp_12 - 1;
  vectp.201_20 = vectp.201_23 + 16;
  ivtmp_8 = ivtmp_7 + 1;
  if (ivtmp_8 < 64)
    goto <bb 8>; [83.33%]
  else
    goto <bb 4>; [16.67%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_19 = i_2 + 1;
  ivtmp_21 = ivtmp_25 - 1;
  if (ivtmp_21 != 0)
    goto <bb 7>; [98.98%]
  else
    goto <bb 6>; [1.02%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # i_2 = PHI <0(2), i_19(7)>
  # ivtmp_25 = PHI <256(2), ivtmp_21(7)>
  _13 = (long unsigned int) i_2;
  _14 = _13 * 1024;
  _15 = arr_6(D) + _14;
  vect_cst__17 = {value_16(D), value_16(D), value_16(D), value_16(D)};
  _11 = (long unsigned int) i_2;
  _24 = _11 * 1024;
  vectp.202_9 = arr_6(D) + _24;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  return 0;
;;    succ:       EXIT

}



;; Function set2d.constprop (set2d.constprop.7, funcdef_no=725, decl_uid=13946, cgraph_uid=557, symbol_order=782)

Merging blocks 5 and 9
set2d.constprop (float[256] * arr)
{
  vector(4) float * vectp.219;
  vector(4) float * vectp.218;
  int i;
  int j;
  int i;
  int i;
  int j;
  float value;
  int stride;
  unsigned int ivtmp_1;
  int _2;
  float _3;
  long unsigned int _4;
  long unsigned int _5;
  float[256] * _7;
  float _8;
  unsigned int ivtmp_9;
  unsigned int ivtmp_11;
  unsigned int ivtmp_12;
  long unsigned int _16;
  unsigned int ivtmp_17;
  long unsigned int _21;
  vector(4) float vect_cst__22;
  unsigned int ivtmp_23;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # j_14 = PHI <j_10(8), 0(5)>
  # ivtmp_12 = PHI <ivtmp_11(8), 256(5)>
  # vectp.218_18 = PHI <vectp.218_20(8), vectp.219_24(5)>
  # ivtmp_23 = PHI <ivtmp_17(8), 0(5)>
  MEM[(float *)vectp.218_18] = vect_cst__22;
  j_10 = j_14 + 1;
  ivtmp_11 = ivtmp_12 - 1;
  vectp.218_20 = vectp.218_18 + 16;
  ivtmp_17 = ivtmp_23 + 1;
  if (ivtmp_17 < 64)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  ivtmp_1 = ivtmp_9 - 1;
  if (ivtmp_1 != 0)
    goto <bb 7>; [98.97%]
  else
    goto <bb 6>; [1.03%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # i_13 = PHI <0(2), _2(7)>
  # ivtmp_9 = PHI <256(2), ivtmp_1(7)>
  _2 = i_13 + 1;
  _3 = (float) _2;
  _4 = (long unsigned int) i_13;
  _5 = _4 * 1024;
  _7 = arr_6(D) + _5;
  _8 = 1.0e+0 / _3;
  vect_cst__22 = {_8, _8, _8, _8};
  _21 = (long unsigned int) i_13;
  _16 = _21 * 1024;
  vectp.219_24 = arr_6(D) + _16;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  return 0;
;;    succ:       EXIT

}



;; Function set1d.constprop (set1d.constprop.9, funcdef_no=723, decl_uid=13948, cgraph_uid=9, symbol_order=784)

Merging blocks 2 and 6
set1d.constprop (float * arr, float value)
{
  vector(4) float * vectp_arr.236;
  vector(4) float * vectp_arr.235;
  int i;
  int i;
  int i;
  int stride;
  vector(4) float vect_cst__4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_9;
  long unsigned int _10;
  long unsigned int _11;
  float * _12;
  unsigned int ivtmp_15;
  unsigned int ivtmp_16;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  vect_cst__4 = {value_13(D), value_13(D), value_13(D), value_13(D)};
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       5
;;                2
  # i_2 = PHI <i_14(5), 0(2)>
  # ivtmp_16 = PHI <ivtmp_9(5), 32000(2)>
  # vectp_arr.235_1 = PHI <vectp_arr.235_18(5), arr_6(D)(2)>
  # ivtmp_15 = PHI <ivtmp_5(5), 0(2)>
  _10 = (long unsigned int) i_2;
  _11 = _10 * 4;
  _12 = arr_6(D) + _11;
  MEM[(float *)vectp_arr.235_1] = vect_cst__4;
  i_14 = i_2 + 1;
  ivtmp_9 = ivtmp_16 - 1;
  vectp_arr.235_18 = vectp_arr.235_1 + 16;
  ivtmp_5 = ivtmp_15 + 1;
  if (ivtmp_5 < 8000)
    goto <bb 5>; [80.00%]
  else
    goto <bb 4>; [20.00%]
;;    succ:       5
;;                4

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  return 0;
;;    succ:       EXIT

}



;; Function set1d (set1d, funcdef_no=553, decl_uid=7095, cgraph_uid=553, symbol_order=574)

Removing basic block 8
Removing basic block 9
set1d (float * arr, float value, int stride)
{
  vector(4) float * vectp_arr.255;
  vector(4) float * vectp_arr.254;
  vector(4) float vect__32.253;
  vector(4) float vect__28.252;
  vector(4) int vect__27.251;
  vector(4) int vect__26.250;
  vector(4) int vect_vec_iv_.249;
  vector(4) float * vectp_arr.248;
  vector(4) float * vectp_arr.247;
  vector(4) float vect__6.246;
  vector(4) float vect__2.245;
  vector(4) int vect__1.244;
  vector(4) int vect_vec_iv_.243;
  int i;
  int i;
  int i;
  int i;
  int _1;
  float _2;
  long unsigned int _3;
  long unsigned int _4;
  float * _5;
  float _6;
  unsigned int ivtmp_7;
  long unsigned int _8;
  long unsigned int _9;
  float * _10;
  vector(4) int vect_cst__13;
  unsigned int ivtmp_25;
  int _26;
  int _27;
  float _28;
  long unsigned int _29;
  long unsigned int _30;
  float * _31;
  float _32;
  unsigned int ivtmp_33;
  unsigned int ivtmp_36;
  vector(4) float vect_cst__41;
  vector(4) int vect_cst__50;
  unsigned int ivtmp_54;
  vector(4) int vect_cst__57;
  vector(4) int vect_cst__59;
  vector(4) float vect_cst__62;
  unsigned int ivtmp_66;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (stride_17(D) == -1)
    goto <bb 17>; [34.00%]
  else
    goto <bb 4>; [66.00%]
;;    succ:       17
;;                4

;;   basic block 17, loop depth 0
;;    pred:       2
  vect_cst__57 = { 4, 4, 4, 4 };
  vect_cst__50 = { 1, 1, 1, 1 };
  vect_cst__41 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       11
;;                17
  # i_43 = PHI <_1(11), 0(17)>
  # ivtmp_7 = PHI <ivtmp_68(11), 32000(17)>
  # vect_vec_iv_.243_56 = PHI <vect_vec_iv_.243_51(11), { 0, 1, 2, 3 }(17)>
  # vectp_arr.247_39 = PHI <vectp_arr.247_38(11), arr_19(D)(17)>
  # ivtmp_33 = PHI <ivtmp_25(11), 0(17)>
  vect_vec_iv_.243_51 = vect_vec_iv_.243_56 + vect_cst__57;
  vect__1.244_49 = vect_vec_iv_.243_56 + vect_cst__50;
  _1 = i_43 + 1;
  vect__2.245_42 = (vector(4) float) vect__1.244_49;
  _2 = (float) _1;
  _3 = (long unsigned int) i_43;
  _4 = _3 * 4;
  _5 = arr_19(D) + _4;
  vect__6.246_40 = vect_cst__41 / vect__2.245_42;
  _6 = 1.0e+0 / _2;
  MEM[(float *)vectp_arr.247_39] = vect__6.246_40;
  ivtmp_68 = ivtmp_7 - 1;
  vectp_arr.247_38 = vectp_arr.247_39 + 16;
  ivtmp_25 = ivtmp_33 + 1;
  if (ivtmp_25 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 16>; [4.00%]
;;    succ:       11
;;                16

;;   basic block 11, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       2
  if (stride_17(D) == -2)
    goto <bb 19>; [34.00%]
  else
    goto <bb 10>; [66.00%]
;;    succ:       19
;;                10

;;   basic block 19, loop depth 0
;;    pred:       4
  vect_cst__13 = { 4, 4, 4, 4 };
  vect_cst__59 = { 1, 1, 1, 1 };
  vect_cst__62 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       12
;;                19
  # i_47 = PHI <_26(12), 0(19)>
  # ivtmp_67 = PHI <ivtmp_66(12), 32000(19)>
  # vect_vec_iv_.249_11 = PHI <vect_vec_iv_.249_58(12), { 0, 1, 2, 3 }(19)>
  # vectp_arr.254_55 = PHI <vectp_arr.254_52(12), arr_19(D)(19)>
  # ivtmp_54 = PHI <ivtmp_36(12), 0(19)>
  vect_vec_iv_.249_58 = vect_vec_iv_.249_11 + vect_cst__13;
  vect__26.250_60 = vect_vec_iv_.249_11 + vect_cst__59;
  _26 = i_47 + 1;
  vect__27.251_64 = vect__26.250_60 * vect__26.250_60;
  _27 = _26 * _26;
  vect__28.252_61 = (vector(4) float) vect__27.251_64;
  _28 = (float) _27;
  _29 = (long unsigned int) i_47;
  _30 = _29 * 4;
  _31 = arr_19(D) + _30;
  vect__32.253_63 = vect_cst__62 / vect__28.252_61;
  _32 = 1.0e+0 / _28;
  MEM[(float *)vectp_arr.254_55] = vect__32.253_63;
  ivtmp_66 = ivtmp_67 - 1;
  vectp_arr.254_52 = vectp_arr.254_55 + 16;
  ivtmp_36 = ivtmp_54 + 1;
  if (ivtmp_36 < 8000)
    goto <bb 12>; [96.00%]
  else
    goto <bb 18>; [4.00%]
;;    succ:       12
;;                18

;;   basic block 18, loop depth 0
;;    pred:       5
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 12, loop depth 1
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 10, loop depth 0
;;    pred:       4
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       10
;;                13
  # i_44 = PHI <0(10), i_24(13)>
  _8 = (long unsigned int) i_44;
  _9 = _8 * 4;
  _10 = arr_19(D) + _9;
  *_10 = value_22(D);
  i_24 = stride_17(D) + i_44;
  if (i_24 <= 31999)
    goto <bb 13>; [87.64%]
  else
    goto <bb 7>; [12.36%]
;;    succ:       13
;;                7

;;   basic block 13, loop depth 1
;;    pred:       6
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 16, loop depth 0
;;    pred:       3
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       16
;;                6
;;                18
  return 0;
;;    succ:       EXIT

}



;; Function init.part.3 (init.part.3, funcdef_no=722, decl_uid=13220, cgraph_uid=5, symbol_order=756)

Merging blocks 18 and 463
Merging blocks 40 and 465
Removing basic block 302
Removing basic block 303
Removing basic block 304
Removing basic block 305
Removing basic block 306
Removing basic block 307
Removing basic block 308
Removing basic block 309
Removing basic block 310
Removing basic block 311
Removing basic block 313
init.part.3 (char * name)
{
  vector(4) float * vectp_array.334;
  vector(4) float * vectp_array.333;
  vector(4) float * vectp_array.332;
  vector(4) float * vectp_array.331;
  vector(4) float vect__832.330;
  vector(4) float vect__828.329;
  vector(4) int vect__827.328;
  vector(4) int vect_vec_iv_.327;
  vector(4) float * vectp_a.326;
  vector(4) float * vectp_a.325;
  vector(4) float * vectp.324;
  vector(4) float * vectp.323;
  vector(4) float * vectp_a.322;
  vector(4) float * vectp_a.321;
  vector(4) float * vectp_b.320;
  vector(4) float * vectp_b.319;
  vector(4) float vect__726.318;
  vector(4) float vect__722.317;
  vector(4) int vect__721.316;
  vector(4) int vect__720.315;
  vector(4) int vect_vec_iv_.314;
  vector(4) float * vectp_a.313;
  vector(4) float * vectp_a.312;
  vector(4) float * vectp_b.311;
  vector(4) float * vectp_b.310;
  vector(4) float vect__692.309;
  vector(4) float vect__688.308;
  vector(4) int vect__687.307;
  vector(4) int vect__686.306;
  vector(4) int vect_vec_iv_.305;
  vector(4) float * vectp_a.304;
  vector(4) float * vectp_a.303;
  vector(4) float * vectp_b.302;
  vector(4) float * vectp_b.301;
  vector(4) float vect__634.300;
  vector(4) float vect__630.299;
  vector(4) int vect__629.298;
  vector(4) int vect__628.297;
  vector(4) int vect_vec_iv_.296;
  vector(4) float * vectp_c.295;
  vector(4) float * vectp_c.294;
  vector(4) float vect__642.293;
  vector(4) float vect__638.292;
  vector(4) int vect__637.291;
  vector(4) int vect__636.290;
  vector(4) int vect_vec_iv_.289;
  vector(4) float * vectp_d.288;
  vector(4) float * vectp_d.287;
  vector(4) float vect__650.286;
  vector(4) float vect__646.285;
  vector(4) int vect__645.284;
  vector(4) int vect__644.283;
  vector(4) int vect_vec_iv_.282;
  vector(4) float * vectp_e.281;
  vector(4) float * vectp_e.280;
  vector(4) float vect__658.279;
  vector(4) float vect__654.278;
  vector(4) int vect__653.277;
  vector(4) int vect__652.276;
  vector(4) int vect_vec_iv_.275;
  int i;
  int D.14685;
  int D.14678;
  int D.14671;
  int D.14664;
  int D.14657;
  int D.14650;
  int D.14643;
  int D.14636;
  int D.14629;
  int i;
  int D.14604;
  int i;
  int D.14596;
  int i;
  int D.14588;
  int D.14580;
  int D.14573;
  int D.14566;
  int D.14559;
  int D.14552;
  int i;
  int D.14545;
  int i;
  int D.14538;
  int i;
  int D.14531;
  int i;
  int D.14512;
  int i;
  int D.14504;
  int i;
  int D.14484;
  int i;
  int D.14476;
  int i;
  int D.14456;
  int i;
  int D.14448;
  int D.14440;
  int D.14433;
  int D.14426;
  int D.14417;
  int D.14408;
  int D.14401;
  int D.14394;
  int D.14387;
  int D.14380;
  int D.14373;
  int i;
  int D.14360;
  int D.14352;
  int D.14343;
  int i;
  int D.14330;
  int i;
  int D.14322;
  int D.14314;
  int D.14307;
  int D.14300;
  int i;
  int D.14291;
  int i;
  int j;
  int D.14275;
  int i;
  int i;
  int D.14260;
  int D.14253;
  int i;
  int i;
  int D.14240;
  int D.14233;
  int i;
  int i;
  int i;
  int i;
  int i;
  int D.14202;
  int D.14195;
  int D.14188;
  int D.14181;
  int D.14174;
  register int __result;
  int i;
  int i;
  int iftmp.3_2;
  int iftmp.4_3;
  int iftmp.5_4;
  int iftmp.6_5;
  int iftmp.7_6;
  int iftmp.8_7;
  int iftmp.9_8;
  int iftmp.10_9;
  int iftmp.11_10;
  int iftmp.12_11;
  int iftmp.13_12;
  int iftmp.14_13;
  int iftmp.15_14;
  int iftmp.16_15;
  int iftmp.17_16;
  int iftmp.18_17;
  int iftmp.19_18;
  int iftmp.20_19;
  int iftmp.21_20;
  int iftmp.22_21;
  int iftmp.23_22;
  int iftmp.24_23;
  long unsigned int _25;
  long unsigned int _26;
  float * _27;
  long unsigned int _30;
  long unsigned int _31;
  float * _32;
  int iftmp.25_34;
  int iftmp.26_35;
  int iftmp.27_36;
  int iftmp.28_37;
  int iftmp.29_38;
  int iftmp.30_39;
  int iftmp.31_40;
  int iftmp.32_41;
  int iftmp.33_42;
  int iftmp.34_43;
  int iftmp.35_44;
  int iftmp.36_45;
  int iftmp.37_46;
  int iftmp.38_47;
  int iftmp.39_48;
  int iftmp.40_49;
  int iftmp.41_50;
  int iftmp.42_51;
  int iftmp.43_52;
  int iftmp.44_53;
  int iftmp.45_54;
  int iftmp.46_55;
  int iftmp.47_56;
  int iftmp.48_57;
  int iftmp.49_58;
  int iftmp.50_59;
  int iftmp.51_60;
  int iftmp.52_61;
  int iftmp.53_62;
  int iftmp.54_63;
  int iftmp.55_64;
  int iftmp.56_65;
  int iftmp.57_66;
  int iftmp.58_67;
  int iftmp.59_68;
  int iftmp.60_69;
  int iftmp.61_70;
  int iftmp.62_71;
  int iftmp.63_72;
  int iftmp.64_73;
  int iftmp.65_74;
  int iftmp.66_75;
  int iftmp.67_76;
  int iftmp.68_77;
  int iftmp.69_78;
  int iftmp.70_79;
  int iftmp.71_80;
  int iftmp.72_81;
  int iftmp.73_82;
  int iftmp.74_83;
  int iftmp.75_84;
  int iftmp.76_85;
  int iftmp.77_86;
  int iftmp.78_87;
  int iftmp.79_88;
  int iftmp.80_89;
  int iftmp.81_90;
  int iftmp.82_91;
  int iftmp.83_92;
  int iftmp.84_93;
  int iftmp.85_94;
  int iftmp.86_95;
  int iftmp.87_96;
  int iftmp.88_97;
  int iftmp.89_98;
  int iftmp.90_99;
  int iftmp.91_100;
  int iftmp.92_101;
  int iftmp.93_102;
  int iftmp.94_103;
  int iftmp.95_104;
  int iftmp.96_105;
  int iftmp.97_106;
  int iftmp.98_107;
  int iftmp.99_108;
  int iftmp.100_109;
  int iftmp.101_110;
  int iftmp.102_111;
  int iftmp.103_112;
  int iftmp.104_113;
  int iftmp.105_114;
  int iftmp.106_115;
  int iftmp.107_116;
  int iftmp.108_117;
  int iftmp.109_118;
  int iftmp.110_119;
  int iftmp.111_120;
  int iftmp.112_121;
  int iftmp.113_122;
  int iftmp.114_123;
  int iftmp.115_124;
  int iftmp.116_125;
  int iftmp.117_126;
  int iftmp.118_127;
  int iftmp.119_128;
  int iftmp.120_129;
  int iftmp.121_130;
  int iftmp.122_131;
  int iftmp.123_132;
  int iftmp.124_133;
  unsigned char _134;
  unsigned int ivtmp_135;
  unsigned int ivtmp_136;
  unsigned char _137;
  unsigned int ivtmp_138;
  unsigned int ivtmp_139;
  unsigned char _140;
  unsigned int ivtmp_141;
  unsigned int ivtmp_142;
  unsigned char _143;
  unsigned int ivtmp_144;
  int iftmp.126_146;
  int iftmp.127_147;
  int iftmp.128_148;
  int iftmp.129_149;
  int iftmp.130_150;
  int iftmp.131_151;
  int iftmp.132_152;
  int iftmp.133_153;
  int iftmp.134_154;
  int iftmp.135_155;
  int iftmp.136_156;
  int iftmp.137_157;
  unsigned int ivtmp_184;
  vector(4) float vect_cst__193;
  long unsigned int _219;
  unsigned int ivtmp_237;
  unsigned int ivtmp_243;
  unsigned int ivtmp_341;
  vector(4) int vect_cst__342;
  vector(4) int vect_cst__345;
  vector(4) float vect_cst__450;
  unsigned int ivtmp_454;
  unsigned int ivtmp_484;
  unsigned int ivtmp_505;
  unsigned int ivtmp_527;
  vector(4) float vect_cst__528;
  unsigned int ivtmp_544;
  vector(4) float vect_cst__545;
  vector(4) int vect_cst__574;
  vector(4) int vect_cst__621;
  long unsigned int _622;
  long unsigned int _623;
  float * _624;
  int _628;
  int _629;
  float _630;
  long unsigned int _631;
  long unsigned int _632;
  float * _633;
  float _634;
  unsigned int ivtmp_635;
  int _636;
  int _637;
  float _638;
  long unsigned int _639;
  long unsigned int _640;
  float * _641;
  float _642;
  unsigned int ivtmp_643;
  int _644;
  int _645;
  float _646;
  long unsigned int _647;
  long unsigned int _648;
  float * _649;
  float _650;
  int _652;
  int _653;
  float _654;
  long unsigned int _655;
  long unsigned int _656;
  float * _657;
  float _658;
  long unsigned int _680;
  long unsigned int _681;
  float * _682;
  int _686;
  int _687;
  float _688;
  long unsigned int _689;
  long unsigned int _690;
  float * _691;
  float _692;
  vector(4) float vect_cst__713;
  long unsigned int _714;
  long unsigned int _715;
  float * _716;
  unsigned int ivtmp_719;
  int _720;
  int _721;
  float _722;
  long unsigned int _723;
  long unsigned int _724;
  float * _725;
  float _726;
  unsigned int ivtmp_745;
  int _746;
  int _747;
  float _748;
  long unsigned int _749;
  long unsigned int _750;
  float[256] * _751;
  float _752;
  long unsigned int _764;
  long unsigned int _765;
  float * _766;
  vector(4) float vect_cst__820;
  vector(4) int vect_cst__822;
  int _827;
  float _828;
  long unsigned int _829;
  long unsigned int _830;
  float * _831;
  float _832;
  long unsigned int _886;
  long unsigned int _887;
  float * _888;
  vector(4) int vect_cst__911;
  vector(4) int vect_cst__950;
  unsigned int ivtmp_976;
  unsigned int ivtmp_994;
  vector(4) float vect_cst__1046;
  long unsigned int _1047;
  long unsigned int _1048;
  float * _1049;
  unsigned int ivtmp_1059;
  long unsigned int _1060;
  long unsigned int _1061;
  float * _1062;
  unsigned int ivtmp_1088;
  long unsigned int _1089;
  long unsigned int _1090;
  float * _1091;
  long unsigned int _1102;
  long unsigned int _1103;
  float * _1104;
  long unsigned int _1131;
  long unsigned int _1132;
  float * _1133;
  long unsigned int _1144;
  long unsigned int _1145;
  float * _1146;
  vector(4) float vect_cst__1229;
  vector(4) int vect_cst__1276;
  long unsigned int _1277;
  long unsigned int _1278;
  float * _1279;
  long unsigned int _1290;
  long unsigned int _1291;
  float * _1292;
  long unsigned int _1303;
  long unsigned int _1304;
  float * _1305;
  vector(4) int vect_cst__1341;
  unsigned int ivtmp_1342;
  unsigned int ivtmp_1343;
  vector(4) float vect_cst__1352;
  vector(4) int vect_cst__1356;
  vector(4) int vect_cst__1359;
  unsigned int ivtmp_1360;
  unsigned int ivtmp_1361;
  vector(4) float vect_cst__1366;
  vector(4) int vect_cst__1370;
  vector(4) int vect_cst__1375;
  unsigned int ivtmp_1376;
  unsigned int ivtmp_1377;
  unsigned int ivtmp_1388;
  unsigned int ivtmp_1396;
  unsigned int ivtmp_1402;
  unsigned int ivtmp_1409;
  vector(4) int vect_cst__1414;
  unsigned int ivtmp_1422;
  unsigned int ivtmp_1435;
  unsigned int ivtmp_1456;
  unsigned int ivtmp_1457;
  unsigned int ivtmp_1458;
  unsigned int ivtmp_1459;
  unsigned int ivtmp_1465;
  unsigned int ivtmp_1466;
  unsigned int ivtmp_1467;
  unsigned int ivtmp_1468;
  unsigned int ivtmp_1474;
  unsigned int ivtmp_1476;
  unsigned int ivtmp_1479;
  unsigned int ivtmp_1480;
  unsigned int ivtmp_1482;
  unsigned int ivtmp_1486;
  long unsigned int _1487;
  vector(4) float vect_cst__1489;
  unsigned int ivtmp_1490;
  unsigned int ivtmp_1491;
  unsigned int ivtmp_1494;
  vector(4) float vect_cst__1495;
  unsigned int ivtmp_1502;
  unsigned int ivtmp_1506;
  unsigned int ivtmp_1514;
  unsigned int ivtmp_1515;
  unsigned int ivtmp_1516;
  unsigned int ivtmp_1518;
  vector(4) float vect_cst__1524;
  unsigned int ivtmp_1528;
  unsigned int ivtmp_1530;
  unsigned int ivtmp_1532;
  unsigned int ivtmp_1548;
  unsigned int ivtmp_1552;
  unsigned int ivtmp_1556;
  unsigned int ivtmp_1558;
  unsigned int ivtmp_1560;
  unsigned int ivtmp_1566;
  unsigned int ivtmp_1568;
  unsigned int ivtmp_1570;
  unsigned int ivtmp_1572;
  unsigned int ivtmp_1574;
  unsigned int ivtmp_1576;
  unsigned int ivtmp_1578;
  unsigned int ivtmp_1580;
  unsigned int ivtmp_1582;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  iftmp.3_2 = __builtin_strcmp (name_1(D), "s111 ");
  if (iftmp.3_2 == 0)
    goto <bb 456>; [33.00%]
  else
    goto <bb 8>; [67.00%]
;;    succ:       456
;;                8

;;   basic block 456, loop depth 0
;;    pred:       2
  vect_cst__1046 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       326
;;                456
  # i_705 = PHI <i_625(326), 0(456)>
  # ivtmp_1580 = PHI <ivtmp_1578(326), 32000(456)>
  # vectp_a.303_1038 = PHI <vectp_a.303_1025(326), &a(456)>
  # ivtmp_994 = PHI <ivtmp_976(326), 0(456)>
  _622 = (long unsigned int) i_705;
  _623 = _622 * 4;
  _624 = &a + _623;
  MEM[(float *)vectp_a.303_1038] = vect_cst__1046;
  i_625 = i_705 + 1;
  ivtmp_1578 = ivtmp_1580 - 1;
  vectp_a.303_1025 = vectp_a.303_1038 + 16;
  ivtmp_976 = ivtmp_994 + 1;
  if (ivtmp_976 < 8000)
    goto <bb 326>; [83.33%]
  else
    goto <bb 455>; [16.67%]
;;    succ:       326
;;                455

;;   basic block 326, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 455, loop depth 0
;;    pred:       3
  vect_cst__1341 = { 4, 4, 4, 4 };
  vect_cst__1276 = { 1, 1, 1, 1 };
  vect_cst__1229 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       325
;;                455
  # i_671 = PHI <_628(325), 0(455)>
  # ivtmp_144 = PHI <ivtmp_1582(325), 32000(455)>
  # vect_vec_iv_.296_1302 = PHI <vect_vec_iv_.296_1289(325), { 0, 1, 2, 3 }(455)>
  # vectp_b.301_1143 = PHI <vectp_b.301_1130(325), &b(455)>
  # ivtmp_1088 = PHI <ivtmp_1059(325), 0(455)>
  vect_vec_iv_.296_1289 = vect_vec_iv_.296_1302 + vect_cst__1341;
  vect__628.297_1268 = vect_vec_iv_.296_1302 + vect_cst__1276;
  _628 = i_671 + 1;
  vect__629.298_1255 = vect__628.297_1268 * vect__628.297_1268;
  _629 = _628 * _628;
  vect__630.299_1242 = (vector(4) float) vect__629.298_1255;
  _630 = (float) _629;
  _631 = (long unsigned int) i_671;
  _632 = _631 * 4;
  _633 = &b + _632;
  vect__634.300_1216 = vect_cst__1229 / vect__630.299_1242;
  _634 = 1.0e+0 / _630;
  MEM[(float *)vectp_b.301_1143] = vect__634.300_1216;
  ivtmp_1582 = ivtmp_144 - 1;
  vectp_b.301_1130 = vectp_b.301_1143 + 16;
  ivtmp_1059 = ivtmp_1088 + 1;
  if (ivtmp_1059 < 8000)
    goto <bb 325>; [96.00%]
  else
    goto <bb 454>; [4.00%]
;;    succ:       325
;;                454

;;   basic block 325, loop depth 1
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 454, loop depth 0
;;    pred:       4
  vect_cst__1359 = { 4, 4, 4, 4 };
  vect_cst__1356 = { 1, 1, 1, 1 };
  vect_cst__1352 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       324
;;                454
  # i_613 = PHI <_636(324), 0(454)>
  # ivtmp_141 = PHI <ivtmp_142(324), 32000(454)>
  # vect_vec_iv_.289_1358 = PHI <vect_vec_iv_.289_1357(324), { 0, 1, 2, 3 }(454)>
  # vectp_c.294_1346 = PHI <vectp_c.294_1345(324), &c(454)>
  # ivtmp_1343 = PHI <ivtmp_1342(324), 0(454)>
  vect_vec_iv_.289_1357 = vect_vec_iv_.289_1358 + vect_cst__1359;
  vect__636.290_1355 = vect_vec_iv_.289_1358 + vect_cst__1356;
  _636 = i_613 + 1;
  vect__637.291_1354 = vect__636.290_1355 * vect__636.290_1355;
  _637 = _636 * _636;
  vect__638.292_1353 = (vector(4) float) vect__637.291_1354;
  _638 = (float) _637;
  _639 = (long unsigned int) i_613;
  _640 = _639 * 4;
  _641 = &c + _640;
  vect__642.293_1347 = vect_cst__1352 / vect__638.292_1353;
  _642 = 1.0e+0 / _638;
  MEM[(float *)vectp_c.294_1346] = vect__642.293_1347;
  ivtmp_142 = ivtmp_141 - 1;
  vectp_c.294_1345 = vectp_c.294_1346 + 16;
  ivtmp_1342 = ivtmp_1343 + 1;
  if (ivtmp_1342 < 8000)
    goto <bb 324>; [96.00%]
  else
    goto <bb 453>; [4.00%]
;;    succ:       324
;;                453

;;   basic block 324, loop depth 1
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 453, loop depth 0
;;    pred:       5
  vect_cst__1375 = { 4, 4, 4, 4 };
  vect_cst__1370 = { 1, 1, 1, 1 };
  vect_cst__1366 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       323
;;                453
  # i_1443 = PHI <_644(323), 0(453)>
  # ivtmp_138 = PHI <ivtmp_139(323), 32000(453)>
  # vect_vec_iv_.282_1374 = PHI <vect_vec_iv_.282_1373(323), { 0, 1, 2, 3 }(453)>
  # vectp_d.287_1364 = PHI <vectp_d.287_1363(323), &d(453)>
  # ivtmp_1361 = PHI <ivtmp_1360(323), 0(453)>
  vect_vec_iv_.282_1373 = vect_vec_iv_.282_1374 + vect_cst__1375;
  vect__644.283_1369 = vect_vec_iv_.282_1374 + vect_cst__1370;
  _644 = i_1443 + 1;
  vect__645.284_1368 = vect__644.283_1369 * vect__644.283_1369;
  _645 = _644 * _644;
  vect__646.285_1367 = (vector(4) float) vect__645.284_1368;
  _646 = (float) _645;
  _647 = (long unsigned int) i_1443;
  _648 = _647 * 4;
  _649 = &d + _648;
  vect__650.286_1365 = vect_cst__1366 / vect__646.285_1367;
  _650 = 1.0e+0 / _646;
  MEM[(float *)vectp_d.287_1364] = vect__650.286_1365;
  ivtmp_139 = ivtmp_138 - 1;
  vectp_d.287_1363 = vectp_d.287_1364 + 16;
  ivtmp_1360 = ivtmp_1361 + 1;
  if (ivtmp_1360 < 8000)
    goto <bb 323>; [96.00%]
  else
    goto <bb 452>; [4.00%]
;;    succ:       323
;;                452

;;   basic block 323, loop depth 1
;;    pred:       6
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 452, loop depth 0
;;    pred:       6
  vect_cst__1414 = { 4, 4, 4, 4 };
  vect_cst__822 = { 1, 1, 1, 1 };
  vect_cst__1524 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       322
;;                452
  # i_1444 = PHI <_652(322), 0(452)>
  # ivtmp_135 = PHI <ivtmp_136(322), 32000(452)>
  # vect_vec_iv_.275_1440 = PHI <vect_vec_iv_.275_821(322), { 0, 1, 2, 3 }(452)>
  # vectp_e.280_1385 = PHI <vectp_e.280_1383(322), &e(452)>
  # ivtmp_1377 = PHI <ivtmp_1376(322), 0(452)>
  vect_vec_iv_.275_821 = vect_vec_iv_.275_1440 + vect_cst__1414;
  vect__652.276_823 = vect_vec_iv_.275_1440 + vect_cst__822;
  _652 = i_1444 + 1;
  vect__653.277_1561 = vect__652.276_823 * vect__652.276_823;
  _653 = _652 * _652;
  vect__654.278_824 = (vector(4) float) vect__653.277_1561;
  _654 = (float) _653;
  _655 = (long unsigned int) i_1444;
  _656 = _655 * 4;
  _657 = &e + _656;
  vect__658.279_1386 = vect_cst__1524 / vect__654.278_824;
  _658 = 1.0e+0 / _654;
  MEM[(float *)vectp_e.280_1385] = vect__658.279_1386;
  ivtmp_136 = ivtmp_135 - 1;
  vectp_e.280_1383 = vectp_e.280_1385 + 16;
  ivtmp_1376 = ivtmp_1377 + 1;
  if (ivtmp_1376 < 8000)
    goto <bb 322>; [96.00%]
  else
    goto <bb 451>; [4.00%]
;;    succ:       322
;;                451

;;   basic block 451, loop depth 0
;;    pred:       7
;;    succ:       348

;;   basic block 348, loop depth 0
;;    pred:       239
;;                299
;;                451
;;                457
;;                17
;;                178
;;                460
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 322, loop depth 1
;;    pred:       7
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 8, loop depth 0
;;    pred:       2
  iftmp.4_3 = __builtin_strcmp (name_1(D), "s112 ");
  if (iftmp.4_3 == 0)
    goto <bb 459>; [33.00%]
  else
    goto <bb 11>; [67.00%]
;;    succ:       459
;;                11

;;   basic block 459, loop depth 0
;;    pred:       8
  vect_cst__713 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       328
;;                459
  # i_1445 = PHI <i_683(328), 0(459)>
  # ivtmp_1572 = PHI <ivtmp_1570(328), 32000(459)>
  # vectp_a.312_685 = PHI <vectp_a.312_679(328), &a(459)>
  # ivtmp_643 = PHI <ivtmp_635(328), 0(459)>
  _680 = (long unsigned int) i_1445;
  _681 = _680 * 4;
  _682 = &a + _681;
  MEM[(float *)vectp_a.312_685] = vect_cst__713;
  i_683 = i_1445 + 1;
  ivtmp_1570 = ivtmp_1572 - 1;
  vectp_a.312_679 = vectp_a.312_685 + 16;
  ivtmp_635 = ivtmp_643 + 1;
  if (ivtmp_635 < 8000)
    goto <bb 328>; [83.33%]
  else
    goto <bb 458>; [16.67%]
;;    succ:       328
;;                458

;;   basic block 328, loop depth 1
;;    pred:       9
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 458, loop depth 0
;;    pred:       9
  vect_cst__950 = { 4, 4, 4, 4 };
  vect_cst__911 = { 1, 1, 1, 1 };
  vect_cst__820 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       327
;;                458
  # i_1446 = PHI <_686(327), 0(458)>
  # ivtmp_1576 = PHI <ivtmp_1574(327), 32000(458)>
  # vect_vec_iv_.305_937 = PHI <vect_vec_iv_.305_924(327), { 0, 1, 2, 3 }(458)>
  # vectp_b.310_763 = PHI <vectp_b.310_755(327), &b(458)>
  # ivtmp_745 = PHI <ivtmp_719(327), 0(458)>
  vect_vec_iv_.305_924 = vect_vec_iv_.305_937 + vect_cst__950;
  vect__686.306_885 = vect_vec_iv_.305_937 + vect_cst__911;
  _686 = i_1446 + 1;
  vect__687.307_859 = vect__686.306_885 * vect__686.306_885;
  _687 = _686 * _686;
  vect__688.308_826 = (vector(4) float) vect__687.307_859;
  _688 = (float) _687;
  _689 = (long unsigned int) i_1446;
  _690 = _689 * 4;
  _691 = &b + _690;
  vect__692.309_812 = vect_cst__820 / vect__688.308_826;
  _692 = 1.0e+0 / _688;
  MEM[(float *)vectp_b.310_763] = vect__692.309_812;
  ivtmp_1574 = ivtmp_1576 - 1;
  vectp_b.310_755 = vectp_b.310_763 + 16;
  ivtmp_719 = ivtmp_745 + 1;
  if (ivtmp_719 < 8000)
    goto <bb 327>; [96.00%]
  else
    goto <bb 457>; [4.00%]
;;    succ:       327
;;                457

;;   basic block 457, loop depth 0
;;    pred:       10
  goto <bb 348>; [100.00%]
;;    succ:       348

;;   basic block 327, loop depth 1
;;    pred:       10
  goto <bb 10>; [100.00%]
;;    succ:       10

;;   basic block 11, loop depth 0
;;    pred:       8
  iftmp.5_4 = __builtin_strcmp (name_1(D), "s113 ");
  if (iftmp.5_4 == 0)
    goto <bb 462>; [33.00%]
  else
    goto <bb 14>; [67.00%]
;;    succ:       462
;;                14

;;   basic block 462, loop depth 0
;;    pred:       11
  vect_cst__1495 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       330
;;                462
  # i_1447 = PHI <i_717(330), 0(462)>
  # ivtmp_1560 = PHI <ivtmp_1558(330), 32000(462)>
  # vectp_a.321_241 = PHI <vectp_a.321_1493(330), &a(462)>
  # ivtmp_1491 = PHI <ivtmp_237(330), 0(462)>
  _714 = (long unsigned int) i_1447;
  _715 = _714 * 4;
  _716 = &a + _715;
  MEM[(float *)vectp_a.321_241] = vect_cst__1495;
  i_717 = i_1447 + 1;
  ivtmp_1558 = ivtmp_1560 - 1;
  vectp_a.321_1493 = vectp_a.321_241 + 16;
  ivtmp_237 = ivtmp_1491 + 1;
  if (ivtmp_237 < 8000)
    goto <bb 330>; [83.33%]
  else
    goto <bb 461>; [16.67%]
;;    succ:       330
;;                461

;;   basic block 330, loop depth 1
;;    pred:       12
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 461, loop depth 0
;;    pred:       12
  vect_cst__621 = { 4, 4, 4, 4 };
  vect_cst__574 = { 1, 1, 1, 1 };
  vect_cst__545 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       13

;;   basic block 13, loop depth 1
;;    pred:       329
;;                461
  # i_1436 = PHI <_720(329), 0(461)>
  # ivtmp_1568 = PHI <ivtmp_1566(329), 32000(461)>
  # vect_vec_iv_.314_600 = PHI <vect_vec_iv_.314_587(329), { 0, 1, 2, 3 }(461)>
  # vectp_b.319_471 = PHI <vectp_b.319_1517(329), &b(461)>
  # ivtmp_1515 = PHI <ivtmp_243(329), 0(461)>
  vect_vec_iv_.314_587 = vect_vec_iv_.314_600 + vect_cst__621;
  vect__720.315_145 = vect_vec_iv_.314_600 + vect_cst__574;
  _720 = i_1436 + 1;
  vect__721.316_29 = vect__720.315_145 * vect__720.315_145;
  _721 = _720 * _720;
  vect__722.317_24 = (vector(4) float) vect__721.316_29;
  _722 = (float) _721;
  _723 = (long unsigned int) i_1436;
  _724 = _723 * 4;
  _725 = &b + _724;
  vect__726.318_1539 = vect_cst__545 / vect__722.317_24;
  _726 = 1.0e+0 / _722;
  MEM[(float *)vectp_b.319_471] = vect__726.318_1539;
  ivtmp_1566 = ivtmp_1568 - 1;
  vectp_b.319_1517 = vectp_b.319_471 + 16;
  ivtmp_243 = ivtmp_1515 + 1;
  if (ivtmp_243 < 8000)
    goto <bb 329>; [96.00%]
  else
    goto <bb 460>; [4.00%]
;;    succ:       329
;;                460

;;   basic block 460, loop depth 0
;;    pred:       13
  goto <bb 348>; [100.00%]
;;    succ:       348

;;   basic block 329, loop depth 1
;;    pred:       13
  goto <bb 13>; [100.00%]
;;    succ:       13

;;   basic block 14, loop depth 0
;;    pred:       11
  iftmp.6_5 = __builtin_strcmp (name_1(D), "s114 ");
  if (iftmp.6_5 == 0)
    goto <bb 15>; [33.00%]
  else
    goto <bb 19>; [67.00%]
;;    succ:       15
;;                19

;;   basic block 15, loop depth 0
;;    pred:       14
  set2d.constprop (&aa);
  goto <bb 18>; [100.00%]
;;    succ:       18

;;   basic block 332, loop depth 2
;;    pred:       16
;;    succ:       16

;;   basic block 16, loop depth 2
;;    pred:       332
;;                18
  # j_1438 = PHI <j_754(332), 0(18)>
  # ivtmp_1556 = PHI <ivtmp_1552(332), 256(18)>
  # vectp.323_1485 = PHI <vectp.323_212(332), vectp.324_235(18)>
  # ivtmp_184 = PHI <ivtmp_1479(332), 0(18)>
  MEM[(float *)vectp.323_1485] = vect_cst__1489;
  j_754 = j_1438 + 1;
  ivtmp_1552 = ivtmp_1556 - 1;
  vectp.323_212 = vectp.323_1485 + 16;
  ivtmp_1479 = ivtmp_184 + 1;
  if (ivtmp_1479 < 64)
    goto <bb 332>; [83.33%]
  else
    goto <bb 17>; [16.67%]
;;    succ:       332
;;                17

;;   basic block 17, loop depth 1
;;    pred:       16
  ivtmp_1532 = ivtmp_1548 - 1;
  if (ivtmp_1532 != 0)
    goto <bb 331>; [98.99%]
  else
    goto <bb 348>; [1.01%]
;;    succ:       331
;;                348

;;   basic block 331, loop depth 1
;;    pred:       17
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       15
;;                331
  # i_1437 = PHI <0(15), _746(331)>
  # ivtmp_1548 = PHI <256(15), ivtmp_1532(331)>
  _746 = i_1437 + 1;
  _747 = _746 * _746;
  _748 = (float) _747;
  _749 = (long unsigned int) i_1437;
  _750 = _749 * 1024;
  _751 = &bb + _750;
  _752 = 1.0e+0 / _748;
  vect_cst__1489 = {_752, _752, _752, _752};
  _1487 = (long unsigned int) i_1437;
  _219 = _1487 * 1024;
  vectp.324_235 = &bb + _219;
  goto <bb 16>; [100.00%]
;;    succ:       16

;;   basic block 19, loop depth 0
;;    pred:       14
  iftmp.7_6 = __builtin_strcmp (name_1(D), "s115 ");
  if (iftmp.7_6 == 0)
    goto <bb 464>; [33.00%]
  else
    goto <bb 22>; [67.00%]
;;    succ:       464
;;                22

;;   basic block 464, loop depth 0
;;    pred:       19
  vect_cst__450 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       20

;;   basic block 20, loop depth 1
;;    pred:       333
;;                464
  # i_1439 = PHI <i_767(333), 0(464)>
  # ivtmp_1530 = PHI <ivtmp_1528(333), 32000(464)>
  # vectp_a.325_451 = PHI <vectp_a.325_452(333), &a(464)>
  # ivtmp_454 = PHI <ivtmp_341(333), 0(464)>
  _764 = (long unsigned int) i_1439;
  _765 = _764 * 4;
  _766 = &a + _765;
  MEM[(float *)vectp_a.325_451] = vect_cst__450;
  i_767 = i_1439 + 1;
  ivtmp_1528 = ivtmp_1530 - 1;
  vectp_a.325_452 = vectp_a.325_451 + 16;
  ivtmp_341 = ivtmp_454 + 1;
  if (ivtmp_341 < 8000)
    goto <bb 333>; [83.33%]
  else
    goto <bb 21>; [16.67%]
;;    succ:       333
;;                21

;;   basic block 333, loop depth 1
;;    pred:       20
  goto <bb 20>; [100.00%]
;;    succ:       20

;;   basic block 21, loop depth 0
;;    pred:       20
  set2d.constprop (&aa, 9.999999974752427078783512115478515625e-7);
  set2d.constprop (&bb, 9.999999974752427078783512115478515625e-7);
  set2d.constprop (&cc, 9.999999974752427078783512115478515625e-7);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 22, loop depth 0
;;    pred:       19
  iftmp.8_7 = __builtin_strcmp (name_1(D), "s116 ");
  if (iftmp.8_7 == 0)
    goto <bb 23>; [33.00%]
  else
    goto <bb 24>; [67.00%]
;;    succ:       23
;;                24

;;   basic block 23, loop depth 0
;;    pred:       22
  set1d.constprop (&a, 1.0e+0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 24, loop depth 0
;;    pred:       22
  iftmp.9_8 = __builtin_strcmp (name_1(D), "s118 ");
  if (iftmp.9_8 == 0)
    goto <bb 25>; [33.00%]
  else
    goto <bb 26>; [67.00%]
;;    succ:       25
;;                26

;;   basic block 25, loop depth 0
;;    pred:       24
  set1d.constprop (&a, 1.0e+0);
  set2d.constprop (&bb, 9.999999974752427078783512115478515625e-7);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 26, loop depth 0
;;    pred:       24
  iftmp.10_9 = __builtin_strcmp (name_1(D), "s119 ");
  if (iftmp.10_9 == 0)
    goto <bb 27>; [33.00%]
  else
    goto <bb 28>; [67.00%]
;;    succ:       27
;;                28

;;   basic block 27, loop depth 0
;;    pred:       26
;;                85
  set2d.constprop (&aa, 1.0e+0);
  set2d.part.2 (&bb);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 28, loop depth 0
;;    pred:       26
  iftmp.11_10 = __builtin_strcmp (name_1(D), "s121 ");
  if (iftmp.11_10 == 0)
    goto <bb 29>; [33.00%]
  else
    goto <bb 30>; [67.00%]
;;    succ:       29
;;                30

;;   basic block 29, loop depth 0
;;    pred:       233
;;                28
;;                30
;;                47
;;                54
;;                65
;;                67
;;                69
;;                71
;;                73
;;                231
;;                289
  set1d.constprop (&a, 1.0e+0);
  set1d.part.0 (&b);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 30, loop depth 0
;;    pred:       28
  iftmp.12_11 = __builtin_strcmp (name_1(D), "s122 ");
  if (iftmp.12_11 == 0)
    goto <bb 29>; [33.00%]
  else
    goto <bb 32>; [67.00%]
;;    succ:       29
;;                32

;;   basic block 32, loop depth 0
;;    pred:       30
  iftmp.13_12 = __builtin_strcmp (name_1(D), "s123 ");
  if (iftmp.13_12 == 0)
    goto <bb 33>; [33.00%]
  else
    goto <bb 34>; [67.00%]
;;    succ:       33
;;                34

;;   basic block 33, loop depth 0
;;    pred:       127
;;                32
;;                34
;;                217
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 1.0e+0);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 34, loop depth 0
;;    pred:       32
  iftmp.14_13 = __builtin_strcmp (name_1(D), "s124 ");
  if (iftmp.14_13 == 0)
    goto <bb 33>; [33.00%]
  else
    goto <bb 36>; [67.00%]
;;    succ:       33
;;                36

;;   basic block 36, loop depth 0
;;    pred:       34
  iftmp.15_14 = __builtin_strcmp (name_1(D), "s125 ");
  if (iftmp.15_14 == 0)
    goto <bb 312>; [33.00%]
  else
    goto <bb 39>; [67.00%]
;;    succ:       312
;;                39

;;   basic block 312, loop depth 0
;;    pred:       36
  __builtin_memset (&array, 0, 128000);
  set2d.constprop (&aa, 1.0e+0);
  set2d.constprop (&bb, 5.0e-1);
  set2d.constprop (&cc, 2.0e+0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 39, loop depth 0
;;    pred:       36
  iftmp.16_15 = __builtin_strcmp (name_1(D), "s126 ");
  if (iftmp.16_15 == 0)
    goto <bb 40>; [33.00%]
  else
    goto <bb 43>; [67.00%]
;;    succ:       40
;;                43

;;   basic block 40, loop depth 0
;;    pred:       39
  set2d.constprop (&bb, 1.0e+0);
  vect_cst__342 = { 4, 4, 4, 4 };
  vect_cst__345 = { 1, 1, 1, 1 };
  vect_cst__193 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       41

;;   basic block 41, loop depth 1
;;    pred:       335
;;                40
  # i_1441 = PHI <_827(335), 0(40)>
  # ivtmp_1518 = PHI <ivtmp_1516(335), 32000(40)>
  # vect_vec_iv_.327_343 = PHI <vect_vec_iv_.327_344(335), { 0, 1, 2, 3 }(40)>
  # vectp_array.331_195 = PHI <vectp_array.331_542(335), &array(40)>
  # ivtmp_544 = PHI <ivtmp_527(335), 0(40)>
  vect_vec_iv_.327_344 = vect_vec_iv_.327_343 + vect_cst__342;
  vect__827.328_191 = vect_vec_iv_.327_343 + vect_cst__345;
  _827 = i_1441 + 1;
  vect__828.329_192 = (vector(4) float) vect__827.328_191;
  _828 = (float) _827;
  _829 = (long unsigned int) i_1441;
  _830 = _829 * 4;
  _831 = &array + _830;
  vect__832.330_194 = vect_cst__193 / vect__828.329_192;
  _832 = 1.0e+0 / _828;
  MEM[(float *)vectp_array.331_195] = vect__832.330_194;
  ivtmp_1516 = ivtmp_1518 - 1;
  vectp_array.331_542 = vectp_array.331_195 + 16;
  ivtmp_527 = ivtmp_544 + 1;
  if (ivtmp_527 < 8000)
    goto <bb 335>; [96.00%]
  else
    goto <bb 42>; [4.00%]
;;    succ:       335
;;                42

;;   basic block 335, loop depth 1
;;    pred:       41
  goto <bb 41>; [100.00%]
;;    succ:       41

;;   basic block 42, loop depth 0
;;    pred:       41
  set2d.constprop (&cc);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 43, loop depth 0
;;    pred:       39
  iftmp.17_16 = __builtin_strcmp (name_1(D), "s127 ");
  if (iftmp.17_16 == 0)
    goto <bb 44>; [33.00%]
  else
    goto <bb 45>; [67.00%]
;;    succ:       44
;;                45

;;   basic block 44, loop depth 0
;;    pred:       99
;;                43
;;                77
;;                103
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 45, loop depth 0
;;    pred:       43
  iftmp.18_17 = __builtin_strcmp (name_1(D), "s128 ");
  if (iftmp.18_17 == 0)
    goto <bb 46>; [33.00%]
  else
    goto <bb 47>; [67.00%]
;;    succ:       46
;;                47

;;   basic block 46, loop depth 0
;;    pred:       45
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 2.0e+0);
  set1d.constprop (&c, 1.0e+0);
  set1d.constprop (&d, 1.0e+0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 47, loop depth 0
;;    pred:       45
  iftmp.19_18 = __builtin_strcmp (name_1(D), "s131 ");
  if (iftmp.19_18 == 0)
    goto <bb 29>; [33.00%]
  else
    goto <bb 49>; [67.00%]
;;    succ:       29
;;                49

;;   basic block 49, loop depth 0
;;    pred:       47
  iftmp.20_19 = __builtin_strcmp (name_1(D), "s132 ");
  if (iftmp.20_19 == 0)
    goto <bb 50>; [33.00%]
  else
    goto <bb 51>; [67.00%]
;;    succ:       50
;;                51

;;   basic block 50, loop depth 0
;;    pred:       49
  set2d.constprop (&aa, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 51, loop depth 0
;;    pred:       49
  iftmp.21_20 = __builtin_strcmp (name_1(D), "s141 ");
  if (iftmp.21_20 == 0)
    goto <bb 466>; [33.00%]
  else
    goto <bb 54>; [67.00%]
;;    succ:       466
;;                54

;;   basic block 466, loop depth 0
;;    pred:       51
  vect_cst__528 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       52

;;   basic block 52, loop depth 1
;;    pred:       336
;;                466
  # i_1442 = PHI <i_889(336), 0(466)>
  # ivtmp_1514 = PHI <ivtmp_1506(336), 32000(466)>
  # vectp_array.333_529 = PHI <vectp_array.333_503(336), &array(466)>
  # ivtmp_505 = PHI <ivtmp_484(336), 0(466)>
  _886 = (long unsigned int) i_1442;
  _887 = _886 * 4;
  _888 = &array + _887;
  MEM[(float *)vectp_array.333_529] = vect_cst__528;
  i_889 = i_1442 + 1;
  ivtmp_1506 = ivtmp_1514 - 1;
  vectp_array.333_503 = vectp_array.333_529 + 16;
  ivtmp_484 = ivtmp_505 + 1;
  if (ivtmp_484 < 8000)
    goto <bb 336>; [83.33%]
  else
    goto <bb 53>; [16.67%]
;;    succ:       336
;;                53

;;   basic block 336, loop depth 1
;;    pred:       52
  goto <bb 52>; [100.00%]
;;    succ:       52

;;   basic block 53, loop depth 0
;;    pred:       52
  set2d.part.2 (&bb);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 54, loop depth 0
;;    pred:       51
  iftmp.22_21 = __builtin_strcmp (name_1(D), "s151 ");
  if (iftmp.22_21 == 0)
    goto <bb 29>; [33.00%]
  else
    goto <bb 56>; [67.00%]
;;    succ:       29
;;                56

;;   basic block 56, loop depth 0
;;    pred:       54
  iftmp.23_22 = __builtin_strcmp (name_1(D), "s152 ");
  if (iftmp.23_22 == 0)
    goto <bb 57>; [33.00%]
  else
    goto <bb 58>; [67.00%]
;;    succ:       57
;;                58

;;   basic block 57, loop depth 0
;;    pred:       56
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 0.0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 58, loop depth 0
;;    pred:       56
  iftmp.24_23 = __builtin_strcmp (name_1(D), "s161 ");
  if (iftmp.24_23 == 0)
    goto <bb 59>; [33.00%]
  else
    goto <bb 63>; [67.00%]
;;    succ:       59
;;                63

;;   basic block 59, loop depth 0
;;    pred:       58
  set1d.constprop (&a, 1.0e+0);
;;    succ:       60

;;   basic block 60, loop depth 1
;;    pred:       59
;;                338
  # i_799 = PHI <0(59), i_28(338)>
  # ivtmp_1490 = PHI <16000(59), ivtmp_1486(338)>
  _25 = (long unsigned int) i_799;
  _26 = _25 * 4;
  _27 = &b[0] + _26;
  *_27 = 1.0e+0;
  i_28 = i_799 + 2;
  ivtmp_1486 = ivtmp_1490 - 1;
  if (ivtmp_1486 != 0)
    goto <bb 338>; [87.65%]
  else
    goto <bb 314>; [12.35%]
;;    succ:       338
;;                314

;;   basic block 338, loop depth 1
;;    pred:       60
  goto <bb 60>; [100.00%]
;;    succ:       60

;;   basic block 314, loop depth 0
;;    pred:       60
;;    succ:       61

;;   basic block 61, loop depth 1
;;    pred:       314
;;                337
  # i_786 = PHI <0(314), i_33(337)>
  # ivtmp_1502 = PHI <16000(314), ivtmp_1494(337)>
  _30 = (long unsigned int) i_786;
  _31 = _30 * 4;
  _32 = &b[1] + _31;
  *_32 = -1.0e+0;
  i_33 = i_786 + 2;
  ivtmp_1494 = ivtmp_1502 - 1;
  if (ivtmp_1494 != 0)
    goto <bb 337>; [87.64%]
  else
    goto <bb 62>; [12.36%]
;;    succ:       337
;;                62

;;   basic block 337, loop depth 1
;;    pred:       61
  goto <bb 61>; [100.00%]
;;    succ:       61

;;   basic block 62, loop depth 0
;;    pred:       61
  set1d.constprop (&c, 1.0e+0);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 63, loop depth 0
;;    pred:       58
  iftmp.25_34 = __builtin_strcmp (name_1(D), "s162 ");
  if (iftmp.25_34 == 0)
    goto <bb 64>; [33.00%]
  else
    goto <bb 65>; [67.00%]
;;    succ:       64
;;                65

;;   basic block 64, loop depth 0
;;    pred:       270
;;                63
;;                75
;;                121
;;                148
;;                150
;;                213
;;                215
;;                242
;;                254
;;                287
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 65, loop depth 0
;;    pred:       63
  iftmp.26_35 = __builtin_strcmp (name_1(D), "s171 ");
  if (iftmp.26_35 == 0)
    goto <bb 29>; [33.00%]
  else
    goto <bb 67>; [67.00%]
;;    succ:       29
;;                67

;;   basic block 67, loop depth 0
;;    pred:       65
  iftmp.27_36 = __builtin_strcmp (name_1(D), "s172 ");
  if (iftmp.27_36 == 0)
    goto <bb 29>; [33.00%]
  else
    goto <bb 69>; [67.00%]
;;    succ:       29
;;                69

;;   basic block 69, loop depth 0
;;    pred:       67
  iftmp.28_37 = __builtin_strcmp (name_1(D), "s173 ");
  if (iftmp.28_37 == 0)
    goto <bb 29>; [33.00%]
  else
    goto <bb 71>; [67.00%]
;;    succ:       29
;;                71

;;   basic block 71, loop depth 0
;;    pred:       69
  iftmp.29_38 = __builtin_strcmp (name_1(D), "s174 ");
  if (iftmp.29_38 == 0)
    goto <bb 29>; [33.00%]
  else
    goto <bb 73>; [67.00%]
;;    succ:       29
;;                73

;;   basic block 73, loop depth 0
;;    pred:       71
  iftmp.30_39 = __builtin_strcmp (name_1(D), "s175 ");
  if (iftmp.30_39 == 0)
    goto <bb 29>; [33.00%]
  else
    goto <bb 75>; [67.00%]
;;    succ:       29
;;                75

;;   basic block 75, loop depth 0
;;    pred:       73
  iftmp.31_40 = __builtin_strcmp (name_1(D), "s176 ");
  if (iftmp.31_40 == 0)
    goto <bb 64>; [33.00%]
  else
    goto <bb 77>; [67.00%]
;;    succ:       64
;;                77

;;   basic block 77, loop depth 0
;;    pred:       75
  iftmp.32_41 = __builtin_strcmp (name_1(D), "s211 ");
  if (iftmp.32_41 == 0)
    goto <bb 44>; [33.00%]
  else
    goto <bb 79>; [67.00%]
;;    succ:       44
;;                79

;;   basic block 79, loop depth 0
;;    pred:       77
  iftmp.33_42 = __builtin_strcmp (name_1(D), "s212 ");
  if (iftmp.33_42 == 0)
    goto <bb 80>; [33.00%]
  else
    goto <bb 81>; [67.00%]
;;    succ:       80
;;                81

;;   basic block 80, loop depth 0
;;    pred:       79
  set1d (&a, 0.0, -1);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 1.0e+0);
  set1d (&d, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 81, loop depth 0
;;    pred:       79
  iftmp.34_43 = __builtin_strcmp (name_1(D), "s221 ");
  if (iftmp.34_43 == 0)
    goto <bb 82>; [33.00%]
  else
    goto <bb 83>; [67.00%]
;;    succ:       82
;;                83

;;   basic block 82, loop depth 0
;;    pred:       131
;;                81
;;                252
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 83, loop depth 0
;;    pred:       81
  iftmp.35_44 = __builtin_strcmp (name_1(D), "s222 ");
  if (iftmp.35_44 == 0)
    goto <bb 84>; [33.00%]
  else
    goto <bb 85>; [67.00%]
;;    succ:       84
;;                85

;;   basic block 84, loop depth 0
;;    pred:       105
;;                83
;;                152
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 1.0e+0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 85, loop depth 0
;;    pred:       83
  iftmp.36_45 = __builtin_strcmp (name_1(D), "s231 ");
  if (iftmp.36_45 == 0)
    goto <bb 27>; [33.00%]
  else
    goto <bb 87>; [67.00%]
;;    succ:       27
;;                87

;;   basic block 87, loop depth 0
;;    pred:       85
  iftmp.37_46 = __builtin_strcmp (name_1(D), "s232 ");
  if (iftmp.37_46 == 0)
    goto <bb 88>; [33.00%]
  else
    goto <bb 89>; [67.00%]
;;    succ:       88
;;                89

;;   basic block 88, loop depth 0
;;    pred:       87
  set2d.constprop (&aa, 1.0e+0);
  set2d.constprop (&bb, 0.0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 89, loop depth 0
;;    pred:       87
  iftmp.38_47 = __builtin_strcmp (name_1(D), "s233 ");
  if (iftmp.38_47 == 0)
    goto <bb 90>; [33.00%]
  else
    goto <bb 91>; [67.00%]
;;    succ:       90
;;                91

;;   basic block 90, loop depth 0
;;    pred:       89
  set2d.constprop (&aa);
  set2d.constprop (&bb);
  set2d.constprop (&cc);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 91, loop depth 0
;;    pred:       89
  iftmp.39_48 = __builtin_strcmp (name_1(D), "s234 ");
  if (iftmp.39_48 == 0)
    goto <bb 92>; [33.00%]
  else
    goto <bb 93>; [67.00%]
;;    succ:       92
;;                93

;;   basic block 92, loop depth 0
;;    pred:       160
;;                91
;;                219
  set2d.constprop (&aa, 1.0e+0);
  set2d.constprop (&bb);
  set2d.constprop (&cc);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 93, loop depth 0
;;    pred:       91
  iftmp.40_49 = __builtin_strcmp (name_1(D), "s235 ");
  if (iftmp.40_49 == 0)
    goto <bb 94>; [33.00%]
  else
    goto <bb 95>; [67.00%]
;;    succ:       94
;;                95

;;   basic block 94, loop depth 0
;;    pred:       93
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  set2d.constprop (&aa, 1.0e+0);
  set2d.part.2 (&bb);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 95, loop depth 0
;;    pred:       93
  iftmp.41_50 = __builtin_strcmp (name_1(D), "s241 ");
  if (iftmp.41_50 == 0)
    goto <bb 96>; [33.00%]
  else
    goto <bb 97>; [67.00%]
;;    succ:       96
;;                97

;;   basic block 96, loop depth 0
;;    pred:       95
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 1.0e+0);
  set1d.constprop (&d, 1.0e+0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 97, loop depth 0
;;    pred:       95
  iftmp.42_51 = __builtin_strcmp (name_1(D), "s242 ");
  if (iftmp.42_51 == 0)
    goto <bb 98>; [33.00%]
  else
    goto <bb 99>; [67.00%]
;;    succ:       98
;;                99

;;   basic block 98, loop depth 0
;;    pred:       97
  set1d.constprop (&a, 9.999999974752427078783512115478515625e-7);
  set1d.constprop (&b, 9.999999974752427078783512115478515625e-7);
  set1d.constprop (&c, 9.999999974752427078783512115478515625e-7);
  set1d.constprop (&d, 9.999999974752427078783512115478515625e-7);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 99, loop depth 0
;;    pred:       97
  iftmp.43_52 = __builtin_strcmp (name_1(D), "s243 ");
  if (iftmp.43_52 == 0)
    goto <bb 44>; [33.00%]
  else
    goto <bb 101>; [67.00%]
;;    succ:       44
;;                101

;;   basic block 101, loop depth 0
;;    pred:       99
  iftmp.44_53 = __builtin_strcmp (name_1(D), "s244 ");
  if (iftmp.44_53 == 0)
    goto <bb 102>; [33.00%]
  else
    goto <bb 103>; [67.00%]
;;    succ:       102
;;                103

;;   basic block 102, loop depth 0
;;    pred:       101
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 9.999999974752427078783512115478515625e-7);
  set1d.constprop (&d, 9.999999974752427078783512115478515625e-7);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 103, loop depth 0
;;    pred:       101
  iftmp.45_54 = __builtin_strcmp (name_1(D), "s251 ");
  if (iftmp.45_54 == 0)
    goto <bb 44>; [33.00%]
  else
    goto <bb 105>; [67.00%]
;;    succ:       44
;;                105

;;   basic block 105, loop depth 0
;;    pred:       103
  iftmp.46_55 = __builtin_strcmp (name_1(D), "s252 ");
  if (iftmp.46_55 == 0)
    goto <bb 84>; [33.00%]
  else
    goto <bb 107>; [67.00%]
;;    succ:       84
;;                107

;;   basic block 107, loop depth 0
;;    pred:       105
  iftmp.47_56 = __builtin_strcmp (name_1(D), "s253 ");
  if (iftmp.47_56 == 0)
    goto <bb 108>; [33.00%]
  else
    goto <bb 109>; [67.00%]
;;    succ:       108
;;                109

;;   basic block 108, loop depth 0
;;    pred:       107
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 9.999999974752427078783512115478515625e-7);
  set1d.constprop (&c, 1.0e+0);
  set1d (&d, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 109, loop depth 0
;;    pred:       107
  iftmp.48_57 = __builtin_strcmp (name_1(D), "s254 ");
  if (iftmp.48_57 == 0)
    goto <bb 110>; [33.00%]
  else
    goto <bb 111>; [67.00%]
;;    succ:       110
;;                111

;;   basic block 110, loop depth 0
;;    pred:       154
;;                109
;;                111
;;                156
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 111, loop depth 0
;;    pred:       109
  iftmp.49_58 = __builtin_strcmp (name_1(D), "s255 ");
  if (iftmp.49_58 == 0)
    goto <bb 110>; [33.00%]
  else
    goto <bb 113>; [67.00%]
;;    succ:       110
;;                113

;;   basic block 113, loop depth 0
;;    pred:       111
  iftmp.50_59 = __builtin_strcmp (name_1(D), "s256 ");
  if (iftmp.50_59 == 0)
    goto <bb 114>; [33.00%]
  else
    goto <bb 115>; [67.00%]
;;    succ:       114
;;                115

;;   basic block 114, loop depth 0
;;    pred:       113
;;                115
  set1d.constprop (&a, 1.0e+0);
  set2d.constprop (&aa, 2.0e+0);
  set2d.constprop (&bb, 1.0e+0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 115, loop depth 0
;;    pred:       113
  iftmp.51_60 = __builtin_strcmp (name_1(D), "s257 ");
  if (iftmp.51_60 == 0)
    goto <bb 114>; [33.00%]
  else
    goto <bb 117>; [67.00%]
;;    succ:       114
;;                117

;;   basic block 117, loop depth 0
;;    pred:       115
  iftmp.52_61 = __builtin_strcmp (name_1(D), "s258 ");
  if (iftmp.52_61 == 0)
    goto <bb 118>; [33.00%]
  else
    goto <bb 119>; [67.00%]
;;    succ:       118
;;                119

;;   basic block 118, loop depth 0
;;    pred:       117
  set1d (&a, 0.0, -1);
  set1d.constprop (&b, 0.0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d.constprop (&e, 0.0);
  set2d.constprop (&aa);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 119, loop depth 0
;;    pred:       117
  iftmp.53_62 = __builtin_strcmp (name_1(D), "s261 ");
  if (iftmp.53_62 == 0)
    goto <bb 120>; [33.00%]
  else
    goto <bb 121>; [67.00%]
;;    succ:       120
;;                121

;;   basic block 120, loop depth 0
;;    pred:       119
  set1d.constprop (&a, 1.0e+0);
  set1d.part.0 (&b);
  set1d.part.0 (&c);
  set1d.constprop (&d, 1.0e+0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 121, loop depth 0
;;    pred:       119
  iftmp.54_63 = __builtin_strcmp (name_1(D), "s271 ");
  if (iftmp.54_63 == 0)
    goto <bb 64>; [33.00%]
  else
    goto <bb 123>; [67.00%]
;;    succ:       64
;;                123

;;   basic block 123, loop depth 0
;;    pred:       121
  iftmp.55_64 = __builtin_strcmp (name_1(D), "s272 ");
  if (iftmp.55_64 == 0)
    goto <bb 124>; [33.00%]
  else
    goto <bb 125>; [67.00%]
;;    succ:       124
;;                125

;;   basic block 124, loop depth 0
;;    pred:       123
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d.constprop (&e, 2.0e+0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 125, loop depth 0
;;    pred:       123
  iftmp.56_65 = __builtin_strcmp (name_1(D), "s273 ");
  if (iftmp.56_65 == 0)
    goto <bb 126>; [33.00%]
  else
    goto <bb 127>; [67.00%]
;;    succ:       126
;;                127

;;   basic block 126, loop depth 0
;;    pred:       125
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 1.0e+0);
  set1d.constprop (&d, 9.999999974752427078783512115478515625e-7);
  set1d (&e, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 127, loop depth 0
;;    pred:       125
  iftmp.57_66 = __builtin_strcmp (name_1(D), "s274 ");
  if (iftmp.57_66 == 0)
    goto <bb 33>; [33.00%]
  else
    goto <bb 129>; [67.00%]
;;    succ:       33
;;                129

;;   basic block 129, loop depth 0
;;    pred:       127
  iftmp.58_67 = __builtin_strcmp (name_1(D), "s275 ");
  if (iftmp.58_67 == 0)
    goto <bb 130>; [33.00%]
  else
    goto <bb 131>; [67.00%]
;;    succ:       130
;;                131

;;   basic block 130, loop depth 0
;;    pred:       129
  set2d.constprop (&aa, 1.0e+0);
  set2d.constprop (&bb, 9.999999974752427078783512115478515625e-7);
  set2d.constprop (&cc, 9.999999974752427078783512115478515625e-7);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 131, loop depth 0
;;    pred:       129
  iftmp.59_68 = __builtin_strcmp (name_1(D), "s276 ");
  if (iftmp.59_68 == 0)
    goto <bb 82>; [33.00%]
  else
    goto <bb 133>; [67.00%]
;;    succ:       82
;;                133

;;   basic block 133, loop depth 0
;;    pred:       131
  iftmp.60_69 = __builtin_strcmp (name_1(D), "s277 ");
  if (iftmp.60_69 == 0)
    goto <bb 134>; [33.00%]
  else
    goto <bb 138>; [67.00%]
;;    succ:       134
;;                138

;;   basic block 134, loop depth 0
;;    pred:       133
  set1d.constprop (&a, 1.0e+0);
;;    succ:       135

;;   basic block 135, loop depth 1
;;    pred:       134
;;                340
  # i_1431 = PHI <0(134), i_1063(340)>
  # ivtmp_1476 = PHI <32000(134), ivtmp_1474(340)>
  _1060 = (long unsigned int) i_1431;
  _1061 = _1060 * 4;
  _1062 = &b + _1061;
  *_1062 = 1.0e+0;
  i_1063 = i_1431 + 1;
  ivtmp_1474 = ivtmp_1476 - 1;
  if (ivtmp_1474 != 0)
    goto <bb 340>; [89.00%]
  else
    goto <bb 315>; [11.00%]
;;    succ:       340
;;                315

;;   basic block 340, loop depth 1
;;    pred:       135
  goto <bb 135>; [100.00%]
;;    succ:       135

;;   basic block 315, loop depth 0
;;    pred:       135
;;    succ:       136

;;   basic block 136, loop depth 1
;;    pred:       315
;;                339
  # i_1430 = PHI <0(315), i_1050(339)>
  # ivtmp_1482 = PHI <32000(315), ivtmp_1480(339)>
  _1047 = (long unsigned int) i_1430;
  _1048 = _1047 * 4;
  _1049 = &b[16000] + _1048;
  *_1049 = -1.0e+0;
  i_1050 = i_1430 + 1;
  ivtmp_1480 = ivtmp_1482 - 1;
  if (ivtmp_1480 != 0)
    goto <bb 339>; [89.00%]
  else
    goto <bb 137>; [11.00%]
;;    succ:       339
;;                137

;;   basic block 339, loop depth 1
;;    pred:       136
  goto <bb 136>; [100.00%]
;;    succ:       136

;;   basic block 137, loop depth 0
;;    pred:       136
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 138, loop depth 0
;;    pred:       133
  iftmp.61_70 = __builtin_strcmp (name_1(D), "s278 ");
  if (iftmp.61_70 == 0)
    goto <bb 317>; [33.00%]
  else
    goto <bb 142>; [67.00%]
;;    succ:       317
;;                142

;;   basic block 317, loop depth 0
;;    pred:       138
;;    succ:       139

;;   basic block 139, loop depth 1
;;    pred:       317
;;                342
  # i_1433 = PHI <0(317), i_1105(342)>
  # ivtmp_1466 = PHI <32000(317), ivtmp_1465(342)>
  _1102 = (long unsigned int) i_1433;
  _1103 = _1102 * 4;
  _1104 = &a + _1103;
  *_1104 = -1.0e+0;
  i_1105 = i_1433 + 1;
  ivtmp_1465 = ivtmp_1466 - 1;
  if (ivtmp_1465 != 0)
    goto <bb 342>; [89.00%]
  else
    goto <bb 316>; [11.00%]
;;    succ:       342
;;                316

;;   basic block 342, loop depth 1
;;    pred:       139
  goto <bb 139>; [100.00%]
;;    succ:       139

;;   basic block 316, loop depth 0
;;    pred:       139
;;    succ:       140

;;   basic block 140, loop depth 1
;;    pred:       316
;;                341
  # i_1432 = PHI <0(316), i_1092(341)>
  # ivtmp_1468 = PHI <32000(316), ivtmp_1467(341)>
  _1089 = (long unsigned int) i_1432;
  _1090 = _1089 * 4;
  _1091 = &a[16000] + _1090;
  *_1091 = 1.0e+0;
  i_1092 = i_1432 + 1;
  ivtmp_1467 = ivtmp_1468 - 1;
  if (ivtmp_1467 != 0)
    goto <bb 341>; [89.00%]
  else
    goto <bb 141>; [11.00%]
;;    succ:       341
;;                141

;;   basic block 341, loop depth 1
;;    pred:       140
  goto <bb 140>; [100.00%]
;;    succ:       140

;;   basic block 141, loop depth 0
;;    pred:       140
;;                144
  set1d.constprop (&b, 1.0e+0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 142, loop depth 0
;;    pred:       138
  iftmp.62_71 = __builtin_strcmp (name_1(D), "s279 ");
  if (iftmp.62_71 == 0)
    goto <bb 319>; [33.00%]
  else
    goto <bb 146>; [67.00%]
;;    succ:       319
;;                146

;;   basic block 319, loop depth 0
;;    pred:       142
;;    succ:       143

;;   basic block 143, loop depth 1
;;    pred:       319
;;                344
  # i_1423 = PHI <0(319), i_1147(344)>
  # ivtmp_1457 = PHI <32000(319), ivtmp_1456(344)>
  _1144 = (long unsigned int) i_1423;
  _1145 = _1144 * 4;
  _1146 = &a + _1145;
  *_1146 = -1.0e+0;
  i_1147 = i_1423 + 1;
  ivtmp_1456 = ivtmp_1457 - 1;
  if (ivtmp_1456 != 0)
    goto <bb 344>; [89.00%]
  else
    goto <bb 318>; [11.00%]
;;    succ:       344
;;                318

;;   basic block 344, loop depth 1
;;    pred:       143
  goto <bb 143>; [100.00%]
;;    succ:       143

;;   basic block 318, loop depth 0
;;    pred:       143
;;    succ:       144

;;   basic block 144, loop depth 1
;;    pred:       318
;;                343
  # i_1434 = PHI <0(318), i_1134(343)>
  # ivtmp_1459 = PHI <32000(318), ivtmp_1458(343)>
  _1131 = (long unsigned int) i_1434;
  _1132 = _1131 * 4;
  _1133 = &a[16000] + _1132;
  *_1133 = 1.0e+0;
  i_1134 = i_1434 + 1;
  ivtmp_1458 = ivtmp_1459 - 1;
  if (ivtmp_1458 != 0)
    goto <bb 343>; [89.00%]
  else
    goto <bb 141>; [11.00%]
;;    succ:       343
;;                141

;;   basic block 343, loop depth 1
;;    pred:       144
  goto <bb 144>; [100.00%]
;;    succ:       144

;;   basic block 146, loop depth 0
;;    pred:       142
  iftmp.63_72 = __builtin_strcmp (name_1(D), "s2710");
  if (iftmp.63_72 == 0)
    goto <bb 147>; [33.00%]
  else
    goto <bb 148>; [67.00%]
;;    succ:       147
;;                148

;;   basic block 147, loop depth 0
;;    pred:       146
;;                195
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 148, loop depth 0
;;    pred:       146
  iftmp.64_73 = __builtin_strcmp (name_1(D), "s2711");
  if (iftmp.64_73 == 0)
    goto <bb 64>; [33.00%]
  else
    goto <bb 150>; [67.00%]
;;    succ:       64
;;                150

;;   basic block 150, loop depth 0
;;    pred:       148
  iftmp.65_74 = __builtin_strcmp (name_1(D), "s2712");
  if (iftmp.65_74 == 0)
    goto <bb 64>; [33.00%]
  else
    goto <bb 152>; [67.00%]
;;    succ:       64
;;                152

;;   basic block 152, loop depth 0
;;    pred:       150
  iftmp.66_75 = __builtin_strcmp (name_1(D), "s281 ");
  if (iftmp.66_75 == 0)
    goto <bb 84>; [33.00%]
  else
    goto <bb 154>; [67.00%]
;;    succ:       84
;;                154

;;   basic block 154, loop depth 0
;;    pred:       152
  iftmp.67_76 = __builtin_strcmp (name_1(D), "s291 ");
  if (iftmp.67_76 == 0)
    goto <bb 110>; [33.00%]
  else
    goto <bb 156>; [67.00%]
;;    succ:       110
;;                156

;;   basic block 156, loop depth 0
;;    pred:       154
  iftmp.68_77 = __builtin_strcmp (name_1(D), "s292 ");
  if (iftmp.68_77 == 0)
    goto <bb 110>; [33.00%]
  else
    goto <bb 158>; [67.00%]
;;    succ:       110
;;                158

;;   basic block 158, loop depth 0
;;    pred:       156
  iftmp.69_78 = __builtin_strcmp (name_1(D), "s293 ");
  if (iftmp.69_78 == 0)
    goto <bb 159>; [33.00%]
  else
    goto <bb 160>; [67.00%]
;;    succ:       159
;;                160

;;   basic block 159, loop depth 0
;;    pred:       185
;;                158
;;                166
;;                172
;;                174
;;                176
;;                295
  set1d (&a, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 160, loop depth 0
;;    pred:       158
  iftmp.70_79 = __builtin_strcmp (name_1(D), "s2101");
  if (iftmp.70_79 == 0)
    goto <bb 92>; [33.00%]
  else
    goto <bb 162>; [67.00%]
;;    succ:       92
;;                162

;;   basic block 162, loop depth 0
;;    pred:       160
  iftmp.71_80 = __builtin_strcmp (name_1(D), "s2102");
  if (iftmp.71_80 == 0)
    goto <bb 163>; [33.00%]
  else
    goto <bb 164>; [67.00%]
;;    succ:       163
;;                164

;;   basic block 163, loop depth 0
;;    pred:       162
;;                164
  set2d.constprop (&aa, 0.0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 164, loop depth 0
;;    pred:       162
  iftmp.72_81 = __builtin_strcmp (name_1(D), "s2111");
  if (iftmp.72_81 == 0)
    goto <bb 163>; [33.00%]
  else
    goto <bb 166>; [67.00%]
;;    succ:       163
;;                166

;;   basic block 166, loop depth 0
;;    pred:       164
  iftmp.73_82 = __builtin_strcmp (name_1(D), "s311 ");
  if (iftmp.73_82 == 0)
    goto <bb 159>; [33.00%]
  else
    goto <bb 168>; [67.00%]
;;    succ:       159
;;                168

;;   basic block 168, loop depth 0
;;    pred:       166
  iftmp.74_83 = __builtin_strcmp (name_1(D), "s312 ");
  if (iftmp.74_83 == 0)
    goto <bb 169>; [33.00%]
  else
    goto <bb 170>; [67.00%]
;;    succ:       169
;;                170

;;   basic block 169, loop depth 0
;;    pred:       168
  set1d.constprop (&a, 1.00000095367431640625e+0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 170, loop depth 0
;;    pred:       168
  iftmp.75_84 = __builtin_strcmp (name_1(D), "s313 ");
  if (iftmp.75_84 == 0)
    goto <bb 171>; [33.00%]
  else
    goto <bb 172>; [67.00%]
;;    succ:       171
;;                172

;;   basic block 171, loop depth 0
;;    pred:       264
;;                170
;;                203
;;                209
;;                297
  set1d (&a, 0.0, -1);
  set1d (&b, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 172, loop depth 0
;;    pred:       170
  iftmp.76_85 = __builtin_strcmp (name_1(D), "s314 ");
  if (iftmp.76_85 == 0)
    goto <bb 159>; [33.00%]
  else
    goto <bb 174>; [67.00%]
;;    succ:       159
;;                174

;;   basic block 174, loop depth 0
;;    pred:       172
  iftmp.77_86 = __builtin_strcmp (name_1(D), "s315 ");
  if (iftmp.77_86 == 0)
    goto <bb 159>; [33.00%]
  else
    goto <bb 176>; [67.00%]
;;    succ:       159
;;                176

;;   basic block 176, loop depth 0
;;    pred:       174
  iftmp.78_87 = __builtin_strcmp (name_1(D), "s316 ");
  if (iftmp.78_87 == 0)
    goto <bb 159>; [33.00%]
  else
    goto <bb 178>; [67.00%]
;;    succ:       159
;;                178

;;   basic block 178, loop depth 0
;;    pred:       176
  iftmp.79_88 = __builtin_strcmp (name_1(D), "s317 ");
  if (iftmp.79_88 == 0)
    goto <bb 348>; [50.00%]
  else
    goto <bb 179>; [50.00%]
;;    succ:       348
;;                179

;;   basic block 179, loop depth 0
;;    pred:       178
  iftmp.80_89 = __builtin_strcmp (name_1(D), "s318 ");
  if (iftmp.80_89 == 0)
    goto <bb 180>; [33.00%]
  else
    goto <bb 181>; [67.00%]
;;    succ:       180
;;                181

;;   basic block 180, loop depth 0
;;    pred:       179
;;                189
  set1d (&a, 0.0, -1);
  a[31999] = -2.0e+0;
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 181, loop depth 0
;;    pred:       179
  iftmp.81_90 = __builtin_strcmp (name_1(D), "s319 ");
  if (iftmp.81_90 == 0)
    goto <bb 182>; [33.00%]
  else
    goto <bb 183>; [67.00%]
;;    succ:       182
;;                183

;;   basic block 182, loop depth 0
;;    pred:       181
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 0.0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 183, loop depth 0
;;    pred:       181
  iftmp.82_91 = __builtin_strcmp (name_1(D), "s3110");
  if (iftmp.82_91 == 0)
    goto <bb 184>; [33.00%]
  else
    goto <bb 185>; [67.00%]
;;    succ:       184
;;                185

;;   basic block 184, loop depth 0
;;    pred:       183
  set2d.constprop (&aa);
  aa[255][255] = 2.0e+0;
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 185, loop depth 0
;;    pred:       183
  iftmp.83_92 = __builtin_strcmp (name_1(D), "s3111");
  if (iftmp.83_92 == 0)
    goto <bb 159>; [33.00%]
  else
    goto <bb 187>; [67.00%]
;;    succ:       159
;;                187

;;   basic block 187, loop depth 0
;;    pred:       185
  iftmp.84_93 = __builtin_strcmp (name_1(D), "s3112");
  if (iftmp.84_93 == 0)
    goto <bb 188>; [33.00%]
  else
    goto <bb 189>; [67.00%]
;;    succ:       188
;;                189

;;   basic block 188, loop depth 0
;;    pred:       187
  set1d.part.0 (&a);
  set1d.constprop (&b, 0.0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 189, loop depth 0
;;    pred:       187
  iftmp.85_94 = __builtin_strcmp (name_1(D), "s3113");
  if (iftmp.85_94 == 0)
    goto <bb 180>; [33.00%]
  else
    goto <bb 191>; [67.00%]
;;    succ:       180
;;                191

;;   basic block 191, loop depth 0
;;    pred:       189
  iftmp.86_95 = __builtin_strcmp (name_1(D), "s321 ");
  if (iftmp.86_95 == 0)
    goto <bb 192>; [33.00%]
  else
    goto <bb 193>; [67.00%]
;;    succ:       192
;;                193

;;   basic block 192, loop depth 0
;;    pred:       191
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 0.0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 193, loop depth 0
;;    pred:       191
  iftmp.87_96 = __builtin_strcmp (name_1(D), "s322 ");
  if (iftmp.87_96 == 0)
    goto <bb 194>; [33.00%]
  else
    goto <bb 195>; [67.00%]
;;    succ:       194
;;                195

;;   basic block 194, loop depth 0
;;    pred:       193
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 0.0);
  set1d.constprop (&c, 0.0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 195, loop depth 0
;;    pred:       193
  iftmp.88_97 = __builtin_strcmp (name_1(D), "s323 ");
  if (iftmp.88_97 == 0)
    goto <bb 147>; [33.00%]
  else
    goto <bb 197>; [67.00%]
;;    succ:       147
;;                197

;;   basic block 197, loop depth 0
;;    pred:       195
  iftmp.89_98 = __builtin_strcmp (name_1(D), "s331 ");
  if (iftmp.89_98 == 0)
    goto <bb 198>; [33.00%]
  else
    goto <bb 199>; [67.00%]
;;    succ:       198
;;                199

;;   basic block 198, loop depth 0
;;    pred:       197
  set1d (&a, 0.0, -1);
  a[31999] = -1.0e+0;
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 199, loop depth 0
;;    pred:       197
  iftmp.90_99 = __builtin_strcmp (name_1(D), "s332 ");
  if (iftmp.90_99 == 0)
    goto <bb 200>; [33.00%]
  else
    goto <bb 201>; [67.00%]
;;    succ:       200
;;                201

;;   basic block 200, loop depth 0
;;    pred:       199
  set1d.part.0 (&a);
  a[31999] = 2.0e+0;
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 201, loop depth 0
;;    pred:       199
  iftmp.91_100 = __builtin_strcmp (name_1(D), "s341 ");
  if (iftmp.91_100 == 0)
    goto <bb 202>; [33.00%]
  else
    goto <bb 203>; [67.00%]
;;    succ:       202
;;                203

;;   basic block 202, loop depth 0
;;    pred:       201
  set1d.constprop (&a, 0.0);
  set1d (&b, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 203, loop depth 0
;;    pred:       201
  iftmp.92_101 = __builtin_strcmp (name_1(D), "s342 ");
  if (iftmp.92_101 == 0)
    goto <bb 171>; [33.00%]
  else
    goto <bb 205>; [67.00%]
;;    succ:       171
;;                205

;;   basic block 205, loop depth 0
;;    pred:       203
  iftmp.93_102 = __builtin_strcmp (name_1(D), "s343 ");
  if (iftmp.93_102 == 0)
    goto <bb 206>; [33.00%]
  else
    goto <bb 207>; [67.00%]
;;    succ:       206
;;                207

;;   basic block 206, loop depth 0
;;    pred:       205
  set2d.constprop (&aa);
  set2d.constprop (&bb, 1.0e+0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 207, loop depth 0
;;    pred:       205
  iftmp.94_103 = __builtin_strcmp (name_1(D), "s351 ");
  if (iftmp.94_103 == 0)
    goto <bb 208>; [33.00%]
  else
    goto <bb 209>; [67.00%]
;;    succ:       208
;;                209

;;   basic block 208, loop depth 0
;;    pred:       207
;;                211
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  c[0] = 1.0e+0;
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 209, loop depth 0
;;    pred:       207
  iftmp.95_104 = __builtin_strcmp (name_1(D), "s352 ");
  if (iftmp.95_104 == 0)
    goto <bb 171>; [33.00%]
  else
    goto <bb 211>; [67.00%]
;;    succ:       171
;;                211

;;   basic block 211, loop depth 0
;;    pred:       209
  iftmp.96_105 = __builtin_strcmp (name_1(D), "s353 ");
  if (iftmp.96_105 == 0)
    goto <bb 208>; [33.00%]
  else
    goto <bb 213>; [67.00%]
;;    succ:       208
;;                213

;;   basic block 213, loop depth 0
;;    pred:       211
  iftmp.97_106 = __builtin_strcmp (name_1(D), "s411 ");
  if (iftmp.97_106 == 0)
    goto <bb 64>; [33.00%]
  else
    goto <bb 215>; [67.00%]
;;    succ:       64
;;                215

;;   basic block 215, loop depth 0
;;    pred:       213
  iftmp.98_107 = __builtin_strcmp (name_1(D), "s412 ");
  if (iftmp.98_107 == 0)
    goto <bb 64>; [33.00%]
  else
    goto <bb 217>; [67.00%]
;;    succ:       64
;;                217

;;   basic block 217, loop depth 0
;;    pred:       215
  iftmp.99_108 = __builtin_strcmp (name_1(D), "s413 ");
  if (iftmp.99_108 == 0)
    goto <bb 33>; [33.00%]
  else
    goto <bb 219>; [67.00%]
;;    succ:       33
;;                219

;;   basic block 219, loop depth 0
;;    pred:       217
  iftmp.100_109 = __builtin_strcmp (name_1(D), "s414 ");
  if (iftmp.100_109 == 0)
    goto <bb 92>; [33.00%]
  else
    goto <bb 221>; [67.00%]
;;    succ:       92
;;                221

;;   basic block 221, loop depth 0
;;    pred:       219
  iftmp.101_110 = __builtin_strcmp (name_1(D), "s415 ");
  if (iftmp.101_110 == 0)
    goto <bb 222>; [33.00%]
  else
    goto <bb 223>; [67.00%]
;;    succ:       222
;;                223

;;   basic block 222, loop depth 0
;;    pred:       221
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  a[31999] = -1.0e+0;
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 223, loop depth 0
;;    pred:       221
  iftmp.102_111 = __builtin_strcmp (name_1(D), "s421 ");
  if (iftmp.102_111 == 0)
    goto <bb 224>; [33.00%]
  else
    goto <bb 225>; [67.00%]
;;    succ:       224
;;                225

;;   basic block 224, loop depth 0
;;    pred:       223
  set1d.part.0 (&a);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 225, loop depth 0
;;    pred:       223
  iftmp.103_112 = __builtin_strcmp (name_1(D), "s422 ");
  if (iftmp.103_112 == 0)
    goto <bb 226>; [33.00%]
  else
    goto <bb 227>; [67.00%]
;;    succ:       226
;;                227

;;   basic block 226, loop depth 0
;;    pred:       225
;;                229
  set1d.constprop (&array, 1.0e+0);
  set1d.part.0 (&a);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 227, loop depth 0
;;    pred:       225
  iftmp.104_113 = __builtin_strcmp (name_1(D), "s423 ");
  if (iftmp.104_113 == 0)
    goto <bb 228>; [33.00%]
  else
    goto <bb 229>; [67.00%]
;;    succ:       228
;;                229

;;   basic block 228, loop depth 0
;;    pred:       227
  set1d.constprop (&array, 0.0);
  set1d.part.0 (&a);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 229, loop depth 0
;;    pred:       227
  iftmp.105_114 = __builtin_strcmp (name_1(D), "s424 ");
  if (iftmp.105_114 == 0)
    goto <bb 226>; [33.00%]
  else
    goto <bb 231>; [67.00%]
;;    succ:       226
;;                231

;;   basic block 231, loop depth 0
;;    pred:       229
  iftmp.106_115 = __builtin_strcmp (name_1(D), "s431 ");
  if (iftmp.106_115 == 0)
    goto <bb 29>; [33.00%]
  else
    goto <bb 233>; [67.00%]
;;    succ:       29
;;                233

;;   basic block 233, loop depth 0
;;    pred:       231
  iftmp.107_116 = __builtin_strcmp (name_1(D), "s432 ");
  if (iftmp.107_116 == 0)
    goto <bb 29>; [33.00%]
  else
    goto <bb 235>; [67.00%]
;;    succ:       29
;;                235

;;   basic block 235, loop depth 0
;;    pred:       233
  iftmp.108_117 = __builtin_strcmp (name_1(D), "s441 ");
  if (iftmp.108_117 == 0)
    goto <bb 236>; [33.00%]
  else
    goto <bb 240>; [67.00%]
;;    succ:       236
;;                240

;;   basic block 236, loop depth 0
;;    pred:       235
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
;;    succ:       237

;;   basic block 237, loop depth 1
;;    pred:       236
;;                347
  # i_1426 = PHI <0(236), i_1306(347)>
  # ivtmp_1396 = PHI <32000(236), ivtmp_1388(347)>
  _1303 = (long unsigned int) i_1426;
  _1304 = _1303 * 4;
  _1305 = &d[0] + _1304;
  *_1305 = -1.0e+0;
  i_1306 = i_1426 + 1;
  ivtmp_1388 = ivtmp_1396 - 1;
  if (ivtmp_1388 != 0)
    goto <bb 347>; [89.00%]
  else
    goto <bb 321>; [11.00%]
;;    succ:       347
;;                321

;;   basic block 347, loop depth 1
;;    pred:       237
  goto <bb 237>; [100.00%]
;;    succ:       237

;;   basic block 321, loop depth 0
;;    pred:       237
;;    succ:       238

;;   basic block 238, loop depth 1
;;    pred:       321
;;                346
  # i_1425 = PHI <0(321), i_1293(346)>
  # ivtmp_1409 = PHI <32000(321), ivtmp_1402(346)>
  _1290 = (long unsigned int) i_1425;
  _1291 = _1290 * 4;
  _1292 = &d[10666] + _1291;
  *_1292 = 0.0;
  i_1293 = i_1425 + 1;
  ivtmp_1402 = ivtmp_1409 - 1;
  if (ivtmp_1402 != 0)
    goto <bb 346>; [89.00%]
  else
    goto <bb 320>; [11.00%]
;;    succ:       346
;;                320

;;   basic block 346, loop depth 1
;;    pred:       238
  goto <bb 238>; [100.00%]
;;    succ:       238

;;   basic block 320, loop depth 0
;;    pred:       238
;;    succ:       239

;;   basic block 239, loop depth 1
;;    pred:       320
;;                345
  # i_1424 = PHI <0(320), i_1280(345)>
  # ivtmp_1435 = PHI <32000(320), ivtmp_1422(345)>
  _1277 = (long unsigned int) i_1424;
  _1278 = _1277 * 4;
  _1279 = &d[21333] + _1278;
  *_1279 = 1.0e+0;
  i_1280 = i_1424 + 1;
  ivtmp_1422 = ivtmp_1435 - 1;
  if (ivtmp_1422 != 0)
    goto <bb 345>; [89.00%]
  else
    goto <bb 348>; [11.00%]
;;    succ:       345
;;                348

;;   basic block 345, loop depth 1
;;    pred:       239
  goto <bb 239>; [100.00%]
;;    succ:       239

;;   basic block 240, loop depth 0
;;    pred:       235
  iftmp.109_118 = __builtin_strcmp (name_1(D), "s442 ");
  if (iftmp.109_118 == 0)
    goto <bb 241>; [33.00%]
  else
    goto <bb 242>; [67.00%]
;;    succ:       241
;;                242

;;   basic block 241, loop depth 0
;;    pred:       240
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 242, loop depth 0
;;    pred:       240
  iftmp.110_119 = __builtin_strcmp (name_1(D), "s443 ");
  if (iftmp.110_119 == 0)
    goto <bb 64>; [33.00%]
  else
    goto <bb 244>; [67.00%]
;;    succ:       64
;;                244

;;   basic block 244, loop depth 0
;;    pred:       242
  iftmp.111_120 = __builtin_strcmp (name_1(D), "s451 ");
  if (iftmp.111_120 == 0)
    goto <bb 245>; [33.00%]
  else
    goto <bb 246>; [67.00%]
;;    succ:       245
;;                246

;;   basic block 245, loop depth 0
;;    pred:       244
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 246, loop depth 0
;;    pred:       244
  iftmp.112_121 = __builtin_strcmp (name_1(D), "s452 ");
  if (iftmp.112_121 == 0)
    goto <bb 247>; [33.00%]
  else
    goto <bb 248>; [67.00%]
;;    succ:       247
;;                248

;;   basic block 247, loop depth 0
;;    pred:       246
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 9.999999974752427078783512115478515625e-7);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 248, loop depth 0
;;    pred:       246
  iftmp.113_122 = __builtin_strcmp (name_1(D), "s453 ");
  if (iftmp.113_122 == 0)
    goto <bb 249>; [33.00%]
  else
    goto <bb 250>; [67.00%]
;;    succ:       249
;;                250

;;   basic block 249, loop depth 0
;;    pred:       281
;;                248
;;                275
;;                277
;;                279
;;                283
  set1d.constprop (&a, 0.0);
  set1d.part.0 (&b);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 250, loop depth 0
;;    pred:       248
  iftmp.114_123 = __builtin_strcmp (name_1(D), "s471 ");
  if (iftmp.114_123 == 0)
    goto <bb 251>; [33.00%]
  else
    goto <bb 252>; [67.00%]
;;    succ:       251
;;                252

;;   basic block 251, loop depth 0
;;    pred:       250
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 1.0e+0);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 252, loop depth 0
;;    pred:       250
  iftmp.115_124 = __builtin_strcmp (name_1(D), "s481 ");
  if (iftmp.115_124 == 0)
    goto <bb 82>; [33.00%]
  else
    goto <bb 254>; [67.00%]
;;    succ:       82
;;                254

;;   basic block 254, loop depth 0
;;    pred:       252
  iftmp.116_125 = __builtin_strcmp (name_1(D), "s482 ");
  if (iftmp.116_125 == 0)
    goto <bb 64>; [33.00%]
  else
    goto <bb 256>; [67.00%]
;;    succ:       64
;;                256

;;   basic block 256, loop depth 0
;;    pred:       254
  iftmp.117_126 = __builtin_strcmp (name_1(D), "s491 ");
  if (iftmp.117_126 == 0)
    goto <bb 257>; [33.00%]
  else
    goto <bb 258>; [67.00%]
;;    succ:       257
;;                258

;;   basic block 257, loop depth 0
;;    pred:       262
;;                256
;;                268
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 258, loop depth 0
;;    pred:       256
  iftmp.118_127 = __builtin_strcmp (name_1(D), "s4112");
  if (iftmp.118_127 == 0)
    goto <bb 259>; [33.00%]
  else
    goto <bb 260>; [67.00%]
;;    succ:       259
;;                260

;;   basic block 259, loop depth 0
;;    pred:       258
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 260, loop depth 0
;;    pred:       258
  iftmp.119_128 = __builtin_strcmp (name_1(D), "s4113");
  if (iftmp.119_128 == 0)
    goto <bb 261>; [33.00%]
  else
    goto <bb 262>; [67.00%]
;;    succ:       261
;;                262

;;   basic block 261, loop depth 0
;;    pred:       260
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d.part.0 (&c);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 262, loop depth 0
;;    pred:       260
  iftmp.120_129 = __builtin_strcmp (name_1(D), "s4114");
  if (iftmp.120_129 == 0)
    goto <bb 257>; [33.00%]
  else
    goto <bb 264>; [67.00%]
;;    succ:       257
;;                264

;;   basic block 264, loop depth 0
;;    pred:       262
  iftmp.121_130 = __builtin_strcmp (name_1(D), "s4115");
  if (iftmp.121_130 == 0)
    goto <bb 171>; [33.00%]
  else
    goto <bb 266>; [67.00%]
;;    succ:       171
;;                266

;;   basic block 266, loop depth 0
;;    pred:       264
  iftmp.122_131 = __builtin_strcmp (name_1(D), "s4116");
  if (iftmp.122_131 == 0)
    goto <bb 267>; [33.00%]
  else
    goto <bb 268>; [67.00%]
;;    succ:       267
;;                268

;;   basic block 267, loop depth 0
;;    pred:       266
  set1d (&a, 0.0, -1);
  set2d.constprop (&aa);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 268, loop depth 0
;;    pred:       266
  iftmp.123_132 = __builtin_strcmp (name_1(D), "s4117");
  if (iftmp.123_132 == 0)
    goto <bb 257>; [33.00%]
  else
    goto <bb 270>; [67.00%]
;;    succ:       257
;;                270

;;   basic block 270, loop depth 0
;;    pred:       268
  iftmp.124_133 = __builtin_strcmp (name_1(D), "s4121");
  if (iftmp.124_133 == 0)
    goto <bb 64>; [33.00%]
  else
    goto <bb 272>; [67.00%]
;;    succ:       64
;;                272

;;   basic block 272, loop depth 0
;;    pred:       270
  _134 = MEM[(const unsigned char *)name_1(D)];
  if (_134 == 118)
    goto <bb 273>; [50.00%]
  else
    goto <bb 277>; [50.00%]
;;    succ:       273
;;                277

;;   basic block 273, loop depth 0
;;    pred:       272
  _137 = MEM[(const unsigned char *)name_1(D) + 1B];
  if (_137 == 97)
    goto <bb 274>; [50.00%]
  else
    goto <bb 277>; [50.00%]
;;    succ:       274
;;                277

;;   basic block 274, loop depth 0
;;    pred:       273
  _140 = MEM[(const unsigned char *)name_1(D) + 2B];
  if (_140 == 9)
    goto <bb 275>; [50.00%]
  else
    goto <bb 277>; [50.00%]
;;    succ:       275
;;                277

;;   basic block 275, loop depth 0
;;    pred:       274
  _143 = MEM[(const unsigned char *)name_1(D) + 3B];
  if (_143 == 0)
    goto <bb 249>; [33.00%]
  else
    goto <bb 277>; [67.00%]
;;    succ:       249
;;                277

;;   basic block 277, loop depth 0
;;    pred:       272
;;                274
;;                275
;;                273
  iftmp.126_146 = __builtin_strcmp (name_1(D), "vag  ");
  if (iftmp.126_146 == 0)
    goto <bb 249>; [33.00%]
  else
    goto <bb 279>; [67.00%]
;;    succ:       249
;;                279

;;   basic block 279, loop depth 0
;;    pred:       277
  iftmp.127_147 = __builtin_strcmp (name_1(D), "vas  ");
  if (iftmp.127_147 == 0)
    goto <bb 249>; [33.00%]
  else
    goto <bb 281>; [67.00%]
;;    succ:       249
;;                281

;;   basic block 281, loop depth 0
;;    pred:       279
  iftmp.128_148 = __builtin_strcmp (name_1(D), "vif  ");
  if (iftmp.128_148 == 0)
    goto <bb 249>; [33.00%]
  else
    goto <bb 283>; [67.00%]
;;    succ:       249
;;                283

;;   basic block 283, loop depth 0
;;    pred:       281
  iftmp.129_149 = __builtin_strcmp (name_1(D), "vpv  ");
  if (iftmp.129_149 == 0)
    goto <bb 249>; [33.00%]
  else
    goto <bb 285>; [67.00%]
;;    succ:       249
;;                285

;;   basic block 285, loop depth 0
;;    pred:       283
  iftmp.130_150 = __builtin_strcmp (name_1(D), "vtv  ");
  if (iftmp.130_150 == 0)
    goto <bb 286>; [33.00%]
  else
    goto <bb 287>; [67.00%]
;;    succ:       286
;;                287

;;   basic block 286, loop depth 0
;;    pred:       285
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 287, loop depth 0
;;    pred:       285
  iftmp.131_151 = __builtin_strcmp (name_1(D), "vpvtv");
  if (iftmp.131_151 == 0)
    goto <bb 64>; [33.00%]
  else
    goto <bb 289>; [67.00%]
;;    succ:       64
;;                289

;;   basic block 289, loop depth 0
;;    pred:       287
  iftmp.132_152 = __builtin_strcmp (name_1(D), "vpvts");
  if (iftmp.132_152 == 0)
    goto <bb 29>; [33.00%]
  else
    goto <bb 291>; [67.00%]
;;    succ:       29
;;                291

;;   basic block 291, loop depth 0
;;    pred:       289
  iftmp.133_153 = __builtin_strcmp (name_1(D), "vpvpv");
  if (iftmp.133_153 == 0)
    goto <bb 292>; [33.00%]
  else
    goto <bb 293>; [67.00%]
;;    succ:       292
;;                293

;;   basic block 292, loop depth 0
;;    pred:       291
  set1d.part.0 (&a);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, -1.0e+0);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 293, loop depth 0
;;    pred:       291
  iftmp.134_154 = __builtin_strcmp (name_1(D), "vtvtv");
  if (iftmp.134_154 == 0)
    goto <bb 294>; [33.00%]
  else
    goto <bb 295>; [67.00%]
;;    succ:       294
;;                295

;;   basic block 294, loop depth 0
;;    pred:       293
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 2.0e+0);
  set1d.constprop (&c, 5.0e-1);
  goto <bb 301>; [100.00%]
;;    succ:       301

;;   basic block 295, loop depth 0
;;    pred:       293
  iftmp.135_155 = __builtin_strcmp (name_1(D), "vsumr");
  if (iftmp.135_155 == 0)
    goto <bb 159>; [33.00%]
  else
    goto <bb 297>; [67.00%]
;;    succ:       159
;;                297

;;   basic block 297, loop depth 0
;;    pred:       295
  iftmp.136_156 = __builtin_strcmp (name_1(D), "vdotr");
  if (iftmp.136_156 == 0)
    goto <bb 171>; [33.00%]
  else
    goto <bb 299>; [67.00%]
;;    succ:       171
;;                299

;;   basic block 299, loop depth 0
;;    pred:       297
  iftmp.137_157 = __builtin_strcmp (name_1(D), "vbor ");
  if (iftmp.137_157 == 0)
    goto <bb 300>; [33.00%]
  else
    goto <bb 348>; [67.00%]
;;    succ:       300
;;                348

;;   basic block 300, loop depth 0
;;    pred:       299
  set1d (&a, 0.0, -1);
  set1d (&b, 0.0, -1);
  set1d (&c, 1.0e+0, -1);
  set1d (&d, 2.0e+0, -1);
  set1d (&e, 5.0e-1, -1);
  set2d.constprop (&aa);
;;    succ:       301

;;   basic block 301, loop depth 0
;;    pred:       300
;;                348
;;                292
;;                267
;;                21
;;                23
;;                25
;;                27
;;                29
;;                257
;;                33
;;                202
;;                312
;;                42
;;                44
;;                46
;;                194
;;                50
;;                53
;;                192
;;                57
;;                62
;;                64
;;                206
;;                188
;;                261
;;                184
;;                182
;;                222
;;                228
;;                80
;;                82
;;                84
;;                294
;;                88
;;                90
;;                92
;;                94
;;                96
;;                98
;;                226
;;                102
;;                224
;;                171
;;                108
;;                110
;;                259
;;                114
;;                245
;;                118
;;                120
;;                247
;;                124
;;                126
;;                200
;;                130
;;                249
;;                137
;;                141
;;                251
;;                147
;;                198
;;                286
;;                180
;;                241
;;                169
;;                159
;;                208
;;                163
  return;
;;    succ:       EXIT

}



;; Function set1ds (set1ds, funcdef_no=554, decl_uid=7113, cgraph_uid=554, symbol_order=575)

Removing basic block 8
Removing basic block 9
set1ds (int _n, float * arr, float value, int stride)
{
  vector(4) float * vectp_arr.527;
  vector(4) float * vectp_arr.526;
  vector(4) float vect__33.525;
  vector(4) float vect__29.524;
  vector(4) int vect__28.523;
  vector(4) int vect__27.522;
  vector(4) int vect_vec_iv_.521;
  vector(4) float * vectp_arr.520;
  vector(4) float * vectp_arr.519;
  vector(4) float vect__6.518;
  vector(4) float vect__2.517;
  vector(4) int vect__1.516;
  vector(4) int vect_vec_iv_.515;
  int i;
  int i;
  int i;
  int i;
  int _1;
  float _2;
  long unsigned int _3;
  long unsigned int _4;
  float * _5;
  float _6;
  long unsigned int _8;
  long unsigned int _9;
  float * _10;
  vector(4) int vect_cst__13;
  unsigned int ivtmp_22;
  unsigned int ivtmp_26;
  int _27;
  int _28;
  float _29;
  long unsigned int _30;
  long unsigned int _31;
  float * _32;
  float _33;
  unsigned int ivtmp_34;
  unsigned int ivtmp_37;
  vector(4) float vect_cst__42;
  vector(4) int vect_cst__51;
  unsigned int ivtmp_55;
  vector(4) int vect_cst__58;
  vector(4) int vect_cst__60;
  vector(4) float vect_cst__63;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;
  unsigned int ivtmp_69;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (stride_17(D) == -1)
    goto <bb 17>; [34.00%]
  else
    goto <bb 4>; [66.00%]
;;    succ:       17
;;                4

;;   basic block 17, loop depth 0
;;    pred:       2
  vect_cst__58 = { 4, 4, 4, 4 };
  vect_cst__51 = { 1, 1, 1, 1 };
  vect_cst__42 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       11
;;                17
  # i_44 = PHI <_1(11), 0(17)>
  # ivtmp_22 = PHI <ivtmp_69(11), 32000(17)>
  # vect_vec_iv_.515_57 = PHI <vect_vec_iv_.515_52(11), { 0, 1, 2, 3 }(17)>
  # vectp_arr.519_40 = PHI <vectp_arr.519_39(11), arr_19(D)(17)>
  # ivtmp_34 = PHI <ivtmp_26(11), 0(17)>
  vect_vec_iv_.515_52 = vect_vec_iv_.515_57 + vect_cst__58;
  vect__1.516_50 = vect_vec_iv_.515_57 + vect_cst__51;
  _1 = i_44 + 1;
  vect__2.517_43 = (vector(4) float) vect__1.516_50;
  _2 = (float) _1;
  _3 = (long unsigned int) i_44;
  _4 = _3 * 4;
  _5 = arr_19(D) + _4;
  vect__6.518_41 = vect_cst__42 / vect__2.517_43;
  _6 = 1.0e+0 / _2;
  MEM[(float *)vectp_arr.519_40] = vect__6.518_41;
  ivtmp_69 = ivtmp_22 - 1;
  vectp_arr.519_39 = vectp_arr.519_40 + 16;
  ivtmp_26 = ivtmp_34 + 1;
  if (ivtmp_26 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 16>; [4.00%]
;;    succ:       11
;;                16

;;   basic block 11, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       2
  if (stride_17(D) == -2)
    goto <bb 19>; [34.00%]
  else
    goto <bb 10>; [66.00%]
;;    succ:       19
;;                10

;;   basic block 19, loop depth 0
;;    pred:       4
  vect_cst__13 = { 4, 4, 4, 4 };
  vect_cst__60 = { 1, 1, 1, 1 };
  vect_cst__63 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       12
;;                19
  # i_48 = PHI <_27(12), 0(19)>
  # ivtmp_68 = PHI <ivtmp_67(12), 32000(19)>
  # vect_vec_iv_.521_11 = PHI <vect_vec_iv_.521_59(12), { 0, 1, 2, 3 }(19)>
  # vectp_arr.526_56 = PHI <vectp_arr.526_53(12), arr_19(D)(19)>
  # ivtmp_55 = PHI <ivtmp_37(12), 0(19)>
  vect_vec_iv_.521_59 = vect_vec_iv_.521_11 + vect_cst__13;
  vect__27.522_61 = vect_vec_iv_.521_11 + vect_cst__60;
  _27 = i_48 + 1;
  vect__28.523_65 = vect__27.522_61 * vect__27.522_61;
  _28 = _27 * _27;
  vect__29.524_62 = (vector(4) float) vect__28.523_65;
  _29 = (float) _28;
  _30 = (long unsigned int) i_48;
  _31 = _30 * 4;
  _32 = arr_19(D) + _31;
  vect__33.525_64 = vect_cst__63 / vect__29.524_62;
  _33 = 1.0e+0 / _29;
  MEM[(float *)vectp_arr.526_56] = vect__33.525_64;
  ivtmp_67 = ivtmp_68 - 1;
  vectp_arr.526_53 = vectp_arr.526_56 + 16;
  ivtmp_37 = ivtmp_55 + 1;
  if (ivtmp_37 < 8000)
    goto <bb 12>; [96.00%]
  else
    goto <bb 18>; [4.00%]
;;    succ:       12
;;                18

;;   basic block 18, loop depth 0
;;    pred:       5
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 12, loop depth 1
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 10, loop depth 0
;;    pred:       4
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       10
;;                13
  # i_45 = PHI <0(10), i_25(13)>
  _8 = (long unsigned int) i_45;
  _9 = _8 * 4;
  _10 = arr_19(D) + _9;
  *_10 = value_23(D);
  i_25 = stride_17(D) + i_45;
  if (i_25 <= 31999)
    goto <bb 13>; [87.64%]
  else
    goto <bb 7>; [12.36%]
;;    succ:       13
;;                7

;;   basic block 13, loop depth 1
;;    pred:       6
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 16, loop depth 0
;;    pred:       3
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       16
;;                6
;;                18
  return 0;
;;    succ:       EXIT

}



;; Function set2d (set2d, funcdef_no=555, decl_uid=7130, cgraph_uid=555, symbol_order=576)

Merging blocks 5 and 26
Merging blocks 9 and 27
set2d (float[256] * arr, float value, int stride)
{
  vector(4) float * vectp.550;
  vector(4) float * vectp.549;
  vector(4) float * vectp.548;
  vector(4) float * vectp.547;
  int i;
  int j;
  int j;
  int i;
  int i;
  int j;
  int i;
  int _1;
  float _2;
  long unsigned int _3;
  long unsigned int _4;
  float[256] * _5;
  float _6;
  unsigned int ivtmp_7;
  long unsigned int _8;
  long unsigned int _9;
  float[256] * _10;
  long unsigned int _12;
  vector(4) float vect_cst__15;
  long unsigned int _17;
  unsigned int ivtmp_26;
  unsigned int ivtmp_32;
  int _33;
  int _34;
  float _35;
  long unsigned int _36;
  long unsigned int _37;
  float[256] * _38;
  float _39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_42;
  long unsigned int _43;
  unsigned int ivtmp_46;
  unsigned int ivtmp_49;
  unsigned int ivtmp_53;
  vector(4) float vect_cst__54;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  unsigned int ivtmp_59;
  unsigned int ivtmp_61;
  long unsigned int _62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (stride_21(D) == -1)
    goto <bb 14>; [34.00%]
  else
    goto <bb 6>; [66.00%]
;;    succ:       14
;;                6

;;   basic block 14, loop depth 0
;;    pred:       2
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 18, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       18
;;                5
  # j_64 = PHI <j_25(18), 0(5)>
  # ivtmp_7 = PHI <ivtmp_59(18), 256(5)>
  # vectp.547_60 = PHI <vectp.547_51(18), vectp.548_14(5)>
  # ivtmp_58 = PHI <ivtmp_56(18), 0(5)>
  MEM[(float *)vectp.547_60] = vect_cst__15;
  j_25 = j_64 + 1;
  ivtmp_59 = ivtmp_7 - 1;
  vectp.547_51 = vectp.547_60 + 16;
  ivtmp_56 = ivtmp_58 + 1;
  if (ivtmp_56 < 64)
    goto <bb 18>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       18
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  ivtmp_57 = ivtmp_61 - 1;
  if (ivtmp_57 != 0)
    goto <bb 17>; [98.99%]
  else
    goto <bb 13>; [1.01%]
;;    succ:       17
;;                13

;;   basic block 17, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       14
;;                17
  # i_63 = PHI <0(14), _1(17)>
  # ivtmp_61 = PHI <256(14), ivtmp_57(17)>
  _1 = i_63 + 1;
  _2 = (float) _1;
  _3 = (long unsigned int) i_63;
  _4 = _3 * 1024;
  _5 = arr_23(D) + _4;
  _6 = 1.0e+0 / _2;
  vect_cst__15 = {_6, _6, _6, _6};
  _12 = (long unsigned int) i_63;
  _62 = _12 * 1024;
  vectp.548_14 = arr_23(D) + _62;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       2
  if (stride_21(D) == -2)
    goto <bb 15>; [34.00%]
  else
    goto <bb 16>; [66.00%]
;;    succ:       15
;;                16

;;   basic block 16, loop depth 0
;;    pred:       6
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 15, loop depth 0
;;    pred:       6
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 20, loop depth 2
;;    pred:       7
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       20
;;                9
  # j_72 = PHI <j_41(20), 0(9)>
  # ivtmp_55 = PHI <ivtmp_53(20), 256(9)>
  # vectp.549_16 = PHI <vectp.549_50(20), vectp.550_52(9)>
  # ivtmp_46 = PHI <ivtmp_49(20), 0(9)>
  MEM[(float *)vectp.549_16] = vect_cst__54;
  j_41 = j_72 + 1;
  ivtmp_53 = ivtmp_55 - 1;
  vectp.549_50 = vectp.549_16 + 16;
  ivtmp_49 = ivtmp_46 + 1;
  if (ivtmp_49 < 64)
    goto <bb 20>; [96.00%]
  else
    goto <bb 8>; [4.00%]
;;    succ:       20
;;                8

;;   basic block 8, loop depth 1
;;    pred:       7
  ivtmp_40 = ivtmp_42 - 1;
  if (ivtmp_40 != 0)
    goto <bb 19>; [98.99%]
  else
    goto <bb 13>; [1.01%]
;;    succ:       19
;;                13

;;   basic block 19, loop depth 1
;;    pred:       8
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       15
;;                19
  # i_71 = PHI <0(15), _33(19)>
  # ivtmp_42 = PHI <256(15), ivtmp_40(19)>
  _33 = i_71 + 1;
  _34 = _33 * _33;
  _35 = (float) _34;
  _36 = (long unsigned int) i_71;
  _37 = _36 * 1024;
  _38 = arr_23(D) + _37;
  _39 = 1.0e+0 / _35;
  vect_cst__54 = {_39, _39, _39, _39};
  _43 = (long unsigned int) i_71;
  _17 = _43 * 1024;
  vectp.550_52 = arr_23(D) + _17;
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 22, loop depth 2
;;    pred:       10
;;    succ:       10

;;   basic block 10, loop depth 2
;;    pred:       12
;;                22
  # j_66 = PHI <0(12), j_30(22)>
  *_10[j_66] = value_28(D);
  j_30 = stride_21(D) + j_66;
  if (j_30 <= 255)
    goto <bb 22>; [87.64%]
  else
    goto <bb 11>; [12.36%]
;;    succ:       22
;;                11

;;   basic block 11, loop depth 1
;;    pred:       10
  i_31 = i_65 + 1;
  ivtmp_26 = ivtmp_32 - 1;
  if (ivtmp_26 != 0)
    goto <bb 21>; [98.99%]
  else
    goto <bb 13>; [1.01%]
;;    succ:       21
;;                13

;;   basic block 21, loop depth 1
;;    pred:       11
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       16
;;                21
  # i_65 = PHI <0(16), i_31(21)>
  # ivtmp_32 = PHI <256(16), ivtmp_26(21)>
  _8 = (long unsigned int) i_65;
  _9 = _8 * 1024;
  _10 = arr_23(D) + _9;
  goto <bb 10>; [100.00%]
;;    succ:       10

;;   basic block 13, loop depth 0
;;    pred:       4
;;                8
;;                11
  return 0;
;;    succ:       EXIT

}



;; Function sum1d (sum1d, funcdef_no=556, decl_uid=7157, cgraph_uid=556, symbol_order=577)

Merging blocks 2 and 6
sum1d (float * arr)
{
  float stmp_ret_10.598;
  vector(4) float vect__4.597;
  vector(4) float * vectp_arr.596;
  vector(4) float * vectp_arr.595;
  int i;
  float ret;
  long unsigned int _1;
  long unsigned int _2;
  float * _3;
  float _4;
  unsigned int ivtmp_21;
  unsigned int ivtmp_22;
  unsigned int ivtmp_25;
  unsigned int ivtmp_26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       5
;;                2
  # ret_15 = PHI <ret_10(5), 0.0(2)>
  # i_16 = PHI <i_11(5), 0(2)>
  # ivtmp_22 = PHI <ivtmp_21(5), 32000(2)>
  # vectp_arr.595_20 = PHI <vectp_arr.595_14(5), arr_8(D)(2)>
  # ivtmp_25 = PHI <ivtmp_26(5), 0(2)>
  _1 = (long unsigned int) i_16;
  _2 = _1 * 4;
  _3 = arr_8(D) + _2;
  vect__4.597_13 = MEM[(float *)vectp_arr.595_20];
  _4 = *_3;
  stmp_ret_10.598_7 = BIT_FIELD_REF <vect__4.597_13, 32, 0>;
  stmp_ret_10.598_6 = ret_15 + stmp_ret_10.598_7;
  stmp_ret_10.598_5 = BIT_FIELD_REF <vect__4.597_13, 32, 32>;
  stmp_ret_10.598_19 = stmp_ret_10.598_6 + stmp_ret_10.598_5;
  stmp_ret_10.598_12 = BIT_FIELD_REF <vect__4.597_13, 32, 64>;
  stmp_ret_10.598_17 = stmp_ret_10.598_19 + stmp_ret_10.598_12;
  stmp_ret_10.598_18 = BIT_FIELD_REF <vect__4.597_13, 32, 96>;
  ret_10 = stmp_ret_10.598_17 + stmp_ret_10.598_18;
  i_11 = i_16 + 1;
  ivtmp_21 = ivtmp_22 - 1;
  vectp_arr.595_14 = vectp_arr.595_20 + 16;
  ivtmp_26 = ivtmp_25 + 1;
  if (ivtmp_26 < 8000)
    goto <bb 5>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       5
;;                4

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  # ret_23 = PHI <ret_10(3)>
  return ret_23;
;;    succ:       EXIT

}



;; Function check (check, funcdef_no=559, decl_uid=7172, cgraph_uid=559, symbol_order=580)

Merging blocks 2 and 69
Merging blocks 6 and 68
Merging blocks 45 and 67
check (int name)
{
  float stmp_sume_85.640;
  vector(4) float vect__5.639;
  vector(4) float * vectp_e.638;
  vector(4) float * vectp_e.637;
  float stmp_sumd_84.636;
  vector(4) float vect__4.635;
  vector(4) float * vectp_d.634;
  vector(4) float * vectp_d.633;
  float stmp_sumc_83.632;
  vector(4) float vect__3.631;
  vector(4) float * vectp_c.630;
  vector(4) float * vectp_c.629;
  float stmp_sumb_82.628;
  vector(4) float vect__2.627;
  vector(4) float * vectp_b.626;
  vector(4) float * vectp_b.625;
  float stmp_suma_81.624;
  vector(4) float vect__1.623;
  vector(4) float * vectp_a.622;
  vector(4) float * vectp_a.621;
  float stmp_sumcc_93.620;
  vector(4) float vect__8.619;
  vector(4) float * vectp_cc.618;
  vector(4) float * vectp_cc.617;
  float stmp_sumbb_92.616;
  vector(4) float vect__7.615;
  vector(4) float * vectp_bb.614;
  vector(4) float * vectp_bb.613;
  float stmp_sumaa_91.612;
  vector(4) float vect__6.611;
  vector(4) float * vectp_aa.610;
  vector(4) float * vectp_aa.609;
  float stmp_sumarray_98.608;
  vector(4) float vect__9.607;
  vector(4) float * vectp_array.606;
  vector(4) float * vectp_array.605;
  int i;
  int j;
  int i;
  int i;
  float sumarray;
  float sumcc;
  float sumbb;
  float sumaa;
  float sume;
  float sumd;
  float sumc;
  float sumb;
  float suma;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  double _10;
  double _11;
  double _12;
  double _13;
  double _14;
  double _15;
  double _16;
  double _17;
  double _18;
  float _19;
  double _20;
  float _21;
  double _22;
  float _23;
  double _24;
  float _25;
  float _26;
  double _27;
  float _28;
  double _29;
  float _30;
  float _31;
  double _32;
  float _33;
  double _34;
  float temp.0_35;
  double _36;
  float temp.1_37;
  float _38;
  double _39;
  unsigned int ivtmp_123;
  unsigned int ivtmp_124;
  sizetype _137;
  sizetype _138;
  sizetype _151;
  sizetype _152;
  sizetype _165;
  sizetype _166;
  unsigned int ivtmp_168;
  unsigned int ivtmp_169;
  unsigned int ivtmp_181;
  unsigned int ivtmp_182;
  unsigned int ivtmp_183;
  unsigned int ivtmp_184;
  unsigned int ivtmp_185;
  unsigned int ivtmp_186;
  unsigned int ivtmp_187;
  unsigned int ivtmp_188;
  unsigned int ivtmp_237;
  unsigned int ivtmp_238;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       50
;;                2
  # suma_190 = PHI <suma_81(50), 0.0(2)>
  # sumb_191 = PHI <sumb_82(50), 0.0(2)>
  # sumc_192 = PHI <sumc_83(50), 0.0(2)>
  # sumd_193 = PHI <sumd_84(50), 0.0(2)>
  # sume_194 = PHI <sume_85(50), 0.0(2)>
  # i_195 = PHI <i_86(50), 0(2)>
  # ivtmp_182 = PHI <ivtmp_181(50), 32000(2)>
  # vectp_a.621_122 = PHI <vectp_a.621_121(50), &a(2)>
  # vectp_b.625_77 = PHI <vectp_b.625_76(50), &b(2)>
  # vectp_c.629_50 = PHI <vectp_c.629_49(50), &c(2)>
  # vectp_d.633_216 = PHI <vectp_d.633_206(50), &d(2)>
  # vectp_e.637_226 = PHI <vectp_e.637_227(50), &e(2)>
  # ivtmp_237 = PHI <ivtmp_238(50), 0(2)>
  vect__1.623_120 = MEM[(float *)vectp_a.621_122];
  _1 = a[i_195];
  stmp_suma_81.624_97 = BIT_FIELD_REF <vect__1.623_120, 32, 0>;
  stmp_suma_81.624_96 = suma_190 + stmp_suma_81.624_97;
  stmp_suma_81.624_90 = BIT_FIELD_REF <vect__1.623_120, 32, 32>;
  stmp_suma_81.624_89 = stmp_suma_81.624_96 + stmp_suma_81.624_90;
  stmp_suma_81.624_88 = BIT_FIELD_REF <vect__1.623_120, 32, 64>;
  stmp_suma_81.624_87 = stmp_suma_81.624_89 + stmp_suma_81.624_88;
  stmp_suma_81.624_79 = BIT_FIELD_REF <vect__1.623_120, 32, 96>;
  suma_81 = stmp_suma_81.624_87 + stmp_suma_81.624_79;
  vect__2.627_75 = MEM[(float *)vectp_b.625_77];
  _2 = b[i_195];
  stmp_sumb_82.628_74 = BIT_FIELD_REF <vect__2.627_75, 32, 0>;
  stmp_sumb_82.628_57 = sumb_191 + stmp_sumb_82.628_74;
  stmp_sumb_82.628_56 = BIT_FIELD_REF <vect__2.627_75, 32, 32>;
  stmp_sumb_82.628_55 = stmp_sumb_82.628_57 + stmp_sumb_82.628_56;
  stmp_sumb_82.628_54 = BIT_FIELD_REF <vect__2.627_75, 32, 64>;
  stmp_sumb_82.628_53 = stmp_sumb_82.628_55 + stmp_sumb_82.628_54;
  stmp_sumb_82.628_52 = BIT_FIELD_REF <vect__2.627_75, 32, 96>;
  sumb_82 = stmp_sumb_82.628_53 + stmp_sumb_82.628_52;
  vect__3.631_48 = MEM[(float *)vectp_c.629_50];
  _3 = c[i_195];
  stmp_sumc_83.632_47 = BIT_FIELD_REF <vect__3.631_48, 32, 0>;
  stmp_sumc_83.632_46 = sumc_192 + stmp_sumc_83.632_47;
  stmp_sumc_83.632_45 = BIT_FIELD_REF <vect__3.631_48, 32, 32>;
  stmp_sumc_83.632_44 = stmp_sumc_83.632_46 + stmp_sumc_83.632_45;
  stmp_sumc_83.632_43 = BIT_FIELD_REF <vect__3.631_48, 32, 64>;
  stmp_sumc_83.632_42 = stmp_sumc_83.632_44 + stmp_sumc_83.632_43;
  stmp_sumc_83.632_41 = BIT_FIELD_REF <vect__3.631_48, 32, 96>;
  sumc_83 = stmp_sumc_83.632_42 + stmp_sumc_83.632_41;
  vect__4.635_136 = MEM[(float *)vectp_d.633_216];
  _4 = d[i_195];
  stmp_sumd_84.636_119 = BIT_FIELD_REF <vect__4.635_136, 32, 0>;
  stmp_sumd_84.636_219 = sumd_193 + stmp_sumd_84.636_119;
  stmp_sumd_84.636_220 = BIT_FIELD_REF <vect__4.635_136, 32, 32>;
  stmp_sumd_84.636_221 = stmp_sumd_84.636_219 + stmp_sumd_84.636_220;
  stmp_sumd_84.636_222 = BIT_FIELD_REF <vect__4.635_136, 32, 64>;
  stmp_sumd_84.636_223 = stmp_sumd_84.636_221 + stmp_sumd_84.636_222;
  stmp_sumd_84.636_224 = BIT_FIELD_REF <vect__4.635_136, 32, 96>;
  sumd_84 = stmp_sumd_84.636_223 + stmp_sumd_84.636_224;
  vect__5.639_228 = MEM[(float *)vectp_e.637_226];
  _5 = e[i_195];
  stmp_sume_85.640_229 = BIT_FIELD_REF <vect__5.639_228, 32, 0>;
  stmp_sume_85.640_230 = sume_194 + stmp_sume_85.640_229;
  stmp_sume_85.640_231 = BIT_FIELD_REF <vect__5.639_228, 32, 32>;
  stmp_sume_85.640_232 = stmp_sume_85.640_230 + stmp_sume_85.640_231;
  stmp_sume_85.640_233 = BIT_FIELD_REF <vect__5.639_228, 32, 64>;
  stmp_sume_85.640_234 = stmp_sume_85.640_232 + stmp_sume_85.640_233;
  stmp_sume_85.640_235 = BIT_FIELD_REF <vect__5.639_228, 32, 96>;
  sume_85 = stmp_sume_85.640_234 + stmp_sume_85.640_235;
  i_86 = i_195 + 1;
  ivtmp_181 = ivtmp_182 - 1;
  vectp_a.621_121 = vectp_a.621_122 + 16;
  vectp_b.625_76 = vectp_b.625_77 + 16;
  vectp_c.629_49 = vectp_c.629_50 + 16;
  vectp_d.633_206 = vectp_d.633_216 + 16;
  vectp_e.637_227 = vectp_e.637_226 + 16;
  ivtmp_238 = ivtmp_237 + 1;
  if (ivtmp_238 < 8000)
    goto <bb 50>; [96.00%]
  else
    goto <bb 46>; [4.00%]
;;    succ:       50
;;                46

;;   basic block 50, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 46, loop depth 0
;;    pred:       3
  # suma_218 = PHI <suma_81(3)>
  # sumb_217 = PHI <sumb_82(3)>
  # sumc_215 = PHI <sumc_83(3)>
  # sumd_214 = PHI <sumd_84(3)>
  # sume_213 = PHI <sume_85(3)>
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 49, loop depth 2
;;    pred:       4
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       49
;;                6
  # sumaa_196 = PHI <sumaa_91(49), sumaa_197(6)>
  # sumbb_198 = PHI <sumbb_92(49), sumbb_199(6)>
  # sumcc_200 = PHI <sumcc_93(49), sumcc_201(6)>
  # j_203 = PHI <j_94(49), 0(6)>
  # ivtmp_186 = PHI <ivtmp_185(49), 256(6)>
  # vectp_aa.609_164 = PHI <vectp_aa.609_163(49), vectp_aa.610_167(6)>
  # vectp_bb.613_150 = PHI <vectp_bb.613_149(49), vectp_bb.614_153(6)>
  # vectp_cc.617_135 = PHI <vectp_cc.617_134(49), vectp_cc.618_139(6)>
  # ivtmp_124 = PHI <ivtmp_123(49), 0(6)>
  vect__6.611_162 = MEM[(float *)vectp_aa.609_164];
  _6 = aa[i_202][j_203];
  stmp_sumaa_91.612_161 = BIT_FIELD_REF <vect__6.611_162, 32, 0>;
  stmp_sumaa_91.612_160 = sumaa_196 + stmp_sumaa_91.612_161;
  stmp_sumaa_91.612_159 = BIT_FIELD_REF <vect__6.611_162, 32, 32>;
  stmp_sumaa_91.612_158 = stmp_sumaa_91.612_160 + stmp_sumaa_91.612_159;
  stmp_sumaa_91.612_157 = BIT_FIELD_REF <vect__6.611_162, 32, 64>;
  stmp_sumaa_91.612_156 = stmp_sumaa_91.612_158 + stmp_sumaa_91.612_157;
  stmp_sumaa_91.612_155 = BIT_FIELD_REF <vect__6.611_162, 32, 96>;
  sumaa_91 = stmp_sumaa_91.612_156 + stmp_sumaa_91.612_155;
  vect__7.615_148 = MEM[(float *)vectp_bb.613_150];
  _7 = bb[i_202][j_203];
  stmp_sumbb_92.616_147 = BIT_FIELD_REF <vect__7.615_148, 32, 0>;
  stmp_sumbb_92.616_146 = sumbb_198 + stmp_sumbb_92.616_147;
  stmp_sumbb_92.616_145 = BIT_FIELD_REF <vect__7.615_148, 32, 32>;
  stmp_sumbb_92.616_144 = stmp_sumbb_92.616_146 + stmp_sumbb_92.616_145;
  stmp_sumbb_92.616_143 = BIT_FIELD_REF <vect__7.615_148, 32, 64>;
  stmp_sumbb_92.616_142 = stmp_sumbb_92.616_144 + stmp_sumbb_92.616_143;
  stmp_sumbb_92.616_141 = BIT_FIELD_REF <vect__7.615_148, 32, 96>;
  sumbb_92 = stmp_sumbb_92.616_142 + stmp_sumbb_92.616_141;
  vect__8.619_133 = MEM[(float *)vectp_cc.617_135];
  _8 = cc[i_202][j_203];
  stmp_sumcc_93.620_132 = BIT_FIELD_REF <vect__8.619_133, 32, 0>;
  stmp_sumcc_93.620_131 = sumcc_200 + stmp_sumcc_93.620_132;
  stmp_sumcc_93.620_130 = BIT_FIELD_REF <vect__8.619_133, 32, 32>;
  stmp_sumcc_93.620_129 = stmp_sumcc_93.620_131 + stmp_sumcc_93.620_130;
  stmp_sumcc_93.620_128 = BIT_FIELD_REF <vect__8.619_133, 32, 64>;
  stmp_sumcc_93.620_127 = stmp_sumcc_93.620_129 + stmp_sumcc_93.620_128;
  stmp_sumcc_93.620_126 = BIT_FIELD_REF <vect__8.619_133, 32, 96>;
  sumcc_93 = stmp_sumcc_93.620_127 + stmp_sumcc_93.620_126;
  j_94 = j_203 + 1;
  ivtmp_185 = ivtmp_186 - 1;
  vectp_aa.609_163 = vectp_aa.609_164 + 16;
  vectp_bb.613_149 = vectp_bb.613_150 + 16;
  vectp_cc.617_134 = vectp_cc.617_135 + 16;
  ivtmp_123 = ivtmp_124 + 1;
  if (ivtmp_123 < 64)
    goto <bb 49>; [96.00%]
  else
    goto <bb 5>; [4.00%]
;;    succ:       49
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
  # sumaa_212 = PHI <sumaa_91(4)>
  # sumbb_210 = PHI <sumbb_92(4)>
  # sumcc_208 = PHI <sumcc_93(4)>
  i_95 = i_202 + 1;
  ivtmp_183 = ivtmp_184 - 1;
  if (ivtmp_183 != 0)
    goto <bb 48>; [98.99%]
  else
    goto <bb 45>; [1.01%]
;;    succ:       48
;;                45

;;   basic block 48, loop depth 1
;;    pred:       5
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       46
;;                48
  # sumaa_197 = PHI <0.0(46), sumaa_212(48)>
  # sumbb_199 = PHI <0.0(46), sumbb_210(48)>
  # sumcc_201 = PHI <0.0(46), sumcc_208(48)>
  # i_202 = PHI <0(46), i_95(48)>
  # ivtmp_184 = PHI <256(46), ivtmp_183(48)>
  _166 = (sizetype) i_202;
  _165 = _166 * 1024;
  vectp_aa.610_167 = &aa + _165;
  _152 = (sizetype) i_202;
  _151 = _152 * 1024;
  vectp_bb.614_153 = &bb + _151;
  _138 = (sizetype) i_202;
  _137 = _138 * 1024;
  vectp_cc.618_139 = &cc + _137;
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 45, loop depth 0
;;    pred:       5
  # sumaa_211 = PHI <sumaa_212(5)>
  # sumbb_209 = PHI <sumbb_210(5)>
  # sumcc_207 = PHI <sumcc_208(5)>
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       47
;;                45
  # sumarray_204 = PHI <sumarray_98(47), 0.0(45)>
  # i_205 = PHI <i_99(47), 0(45)>
  # ivtmp_188 = PHI <ivtmp_187(47), 65536(45)>
  # vectp_array.605_180 = PHI <vectp_array.605_179(47), &array(45)>
  # ivtmp_169 = PHI <ivtmp_168(47), 0(45)>
  vect__9.607_178 = MEM[(float *)vectp_array.605_180];
  _9 = array[i_205];
  stmp_sumarray_98.608_177 = BIT_FIELD_REF <vect__9.607_178, 32, 0>;
  stmp_sumarray_98.608_176 = sumarray_204 + stmp_sumarray_98.608_177;
  stmp_sumarray_98.608_175 = BIT_FIELD_REF <vect__9.607_178, 32, 32>;
  stmp_sumarray_98.608_174 = stmp_sumarray_98.608_176 + stmp_sumarray_98.608_175;
  stmp_sumarray_98.608_173 = BIT_FIELD_REF <vect__9.607_178, 32, 64>;
  stmp_sumarray_98.608_172 = stmp_sumarray_98.608_174 + stmp_sumarray_98.608_173;
  stmp_sumarray_98.608_171 = BIT_FIELD_REF <vect__9.607_178, 32, 96>;
  sumarray_98 = stmp_sumarray_98.608_172 + stmp_sumarray_98.608_171;
  i_99 = i_205 + 1;
  ivtmp_187 = ivtmp_188 - 1;
  vectp_array.605_179 = vectp_array.605_180 + 16;
  ivtmp_168 = ivtmp_169 + 1;
  if (ivtmp_168 < 16384)
    goto <bb 47>; [96.00%]
  else
    goto <bb 8>; [4.00%]
;;    succ:       47
;;                8

;;   basic block 47, loop depth 1
;;    pred:       7
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 8, loop depth 0
;;    pred:       7
  # sumarray_189 = PHI <sumarray_98(7)>
  if (name_100(D) == 1)
    goto <bb 9>; [20.24%]
  else
    goto <bb 10>; [79.76%]
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  _10 = (double) suma_218;
  printf ("%f \n", _10);
  goto <bb 14>; [100.00%]
;;    succ:       14

;;   basic block 10, loop depth 0
;;    pred:       8
  if (name_100(D) == 2)
    goto <bb 11>; [25.38%]
  else
    goto <bb 12>; [74.62%]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _11 = (double) sumb_217;
  printf ("%f \n", _11);
  goto <bb 16>; [100.00%]
;;    succ:       16

;;   basic block 12, loop depth 0
;;    pred:       10
  if (name_100(D) == 3)
    goto <bb 13>; [34.01%]
  else
    goto <bb 14>; [65.99%]
;;    succ:       13
;;                14

;;   basic block 13, loop depth 0
;;    pred:       12
  _12 = (double) sumc_215;
  printf ("%f \n", _12);
  goto <bb 18>; [100.00%]
;;    succ:       18

;;   basic block 14, loop depth 0
;;    pred:       9
;;                12
  if (name_100(D) == 4)
    goto <bb 15>; [34.01%]
  else
    goto <bb 16>; [65.99%]
;;    succ:       15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
  _13 = (double) sumd_214;
  printf ("%f \n", _13);
  goto <bb 20>; [100.00%]
;;    succ:       20

;;   basic block 16, loop depth 0
;;    pred:       11
;;                14
  if (name_100(D) == 5)
    goto <bb 17>; [34.01%]
  else
    goto <bb 18>; [65.99%]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  _14 = (double) sume_213;
  printf ("%f \n", _14);
  goto <bb 22>; [100.00%]
;;    succ:       22

;;   basic block 18, loop depth 0
;;    pred:       13
;;                16
  if (name_100(D) == 11)
    goto <bb 19>; [34.01%]
  else
    goto <bb 20>; [65.99%]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 0
;;    pred:       18
  _15 = (double) sumaa_211;
  printf ("%f \n", _15);
  goto <bb 24>; [100.00%]
;;    succ:       24

;;   basic block 20, loop depth 0
;;    pred:       15
;;                18
  if (name_100(D) == 22)
    goto <bb 21>; [34.01%]
  else
    goto <bb 22>; [65.99%]
;;    succ:       21
;;                22

;;   basic block 21, loop depth 0
;;    pred:       20
  _16 = (double) sumbb_209;
  printf ("%f \n", _16);
  goto <bb 26>; [100.00%]
;;    succ:       26

;;   basic block 22, loop depth 0
;;    pred:       17
;;                20
  if (name_100(D) == 33)
    goto <bb 23>; [34.01%]
  else
    goto <bb 24>; [65.99%]
;;    succ:       23
;;                24

;;   basic block 23, loop depth 0
;;    pred:       22
  _17 = (double) sumcc_207;
  printf ("%f \n", _17);
  goto <bb 28>; [100.00%]
;;    succ:       28

;;   basic block 24, loop depth 0
;;    pred:       19
;;                22
  if (name_100(D) == 0)
    goto <bb 25>; [55.44%]
  else
    goto <bb 26>; [44.56%]
;;    succ:       25
;;                26

;;   basic block 25, loop depth 0
;;    pred:       24
  _18 = (double) sumarray_189;
  printf ("%f \n", _18);
  goto <bb 30>; [100.00%]
;;    succ:       30

;;   basic block 26, loop depth 0
;;    pred:       21
;;                24
  if (name_100(D) == 12)
    goto <bb 27>; [43.28%]
  else
    goto <bb 28>; [56.72%]
;;    succ:       27
;;                28

;;   basic block 27, loop depth 0
;;    pred:       26
  _19 = suma_218 + sumb_217;
  _20 = (double) _19;
  printf ("%f \n", _20);
  goto <bb 32>; [100.00%]
;;    succ:       32

;;   basic block 28, loop depth 0
;;    pred:       23
;;                26
  if (name_100(D) == 25)
    goto <bb 29>; [43.28%]
  else
    goto <bb 30>; [56.72%]
;;    succ:       29
;;                30

;;   basic block 29, loop depth 0
;;    pred:       28
  _21 = sumb_217 + sume_213;
  _22 = (double) _21;
  printf ("%f \n", _22);
  goto <bb 34>; [100.00%]
;;    succ:       34

;;   basic block 30, loop depth 0
;;    pred:       25
;;                28
  if (name_100(D) == 13)
    goto <bb 31>; [34.01%]
  else
    goto <bb 32>; [65.99%]
;;    succ:       31
;;                32

;;   basic block 31, loop depth 0
;;    pred:       30
  _23 = suma_218 + sumc_215;
  _24 = (double) _23;
  printf ("%f \n", _24);
  goto <bb 36>; [100.00%]
;;    succ:       36

;;   basic block 32, loop depth 0
;;    pred:       27
;;                30
  if (name_100(D) == 123)
    goto <bb 33>; [34.01%]
  else
    goto <bb 34>; [65.99%]
;;    succ:       33
;;                34

;;   basic block 33, loop depth 0
;;    pred:       32
  _25 = suma_218 + sumb_217;
  _26 = _25 + sumc_215;
  _27 = (double) _26;
  printf ("%f \n", _27);
  goto <bb 38>; [100.00%]
;;    succ:       38

;;   basic block 34, loop depth 0
;;    pred:       29
;;                32
  if (name_100(D) == 1122)
    goto <bb 35>; [34.01%]
  else
    goto <bb 36>; [65.99%]
;;    succ:       35
;;                36

;;   basic block 35, loop depth 0
;;    pred:       34
  _28 = sumaa_211 + sumbb_209;
  _29 = (double) _28;
  printf ("%f \n", _29);
  goto <bb 40>; [100.00%]
;;    succ:       40

;;   basic block 36, loop depth 0
;;    pred:       31
;;                34
  if (name_100(D) == 112233)
    goto <bb 37>; [34.01%]
  else
    goto <bb 38>; [65.99%]
;;    succ:       37
;;                38

;;   basic block 37, loop depth 0
;;    pred:       36
  _30 = sumaa_211 + sumbb_209;
  _31 = _30 + sumcc_207;
  _32 = (double) _31;
  printf ("%f \n", _32);
  goto <bb 42>; [100.00%]
;;    succ:       42

;;   basic block 38, loop depth 0
;;    pred:       33
;;                36
  if (name_100(D) == 111)
    goto <bb 39>; [34.01%]
  else
    goto <bb 40>; [65.99%]
;;    succ:       39
;;                40

;;   basic block 39, loop depth 0
;;    pred:       38
  _33 = suma_218 + sumaa_211;
  _34 = (double) _33;
  printf ("%f \n", _34);
  goto <bb 44>; [100.00%]
;;    succ:       44

;;   basic block 40, loop depth 0
;;    pred:       35
;;                38
  if (name_100(D) == -1)
    goto <bb 41>; [34.01%]
  else
    goto <bb 42>; [65.99%]
;;    succ:       41
;;                42

;;   basic block 41, loop depth 0
;;    pred:       40
  temp.0_35 = temp;
  _36 = (double) temp.0_35;
  printf ("%f \n", _36);
  goto <bb 44>; [100.00%]
;;    succ:       44

;;   basic block 42, loop depth 0
;;    pred:       37
;;                40
  if (name_100(D) == -12)
    goto <bb 43>; [34.01%]
  else
    goto <bb 44>; [65.99%]
;;    succ:       43
;;                44

;;   basic block 43, loop depth 0
;;    pred:       42
  temp.1_37 = temp;
  _38 = temp.1_37 + sumb_217;
  _39 = (double) _38;
  printf ("%f \n", _39);
;;    succ:       44

;;   basic block 44, loop depth 0
;;    pred:       39
;;                43
;;                41
;;                42
  return;
;;    succ:       EXIT

}



;; Function init (init, funcdef_no=560, decl_uid=7200, cgraph_uid=560, symbol_order=581)

Removing basic block 6
init (char * name)
{
  vector(4) float * vectp_V.701;
  vector(4) float * vectp_V.700;
  vector(4) float vect__10.699;
  vector(4) int vect__9.698;
  vector(4) float * vectp_U.697;
  vector(4) float * vectp_U.696;
  vector(4) float vect__8.695;
  vector(4) int vect__7.694;
  vector(4) float * vectp_Z.693;
  vector(4) float * vectp_Z.692;
  vector(4) float vect__6.691;
  vector(4) int vect__5.690;
  vector(4) float * vectp_Y.689;
  vector(4) float * vectp_Y.688;
  vector(4) float vect__4.687;
  vector(4) int vect__3.686;
  vector(4) float * vectp_X.685;
  vector(4) float * vectp_X.684;
  vector(4) float vect__2.683;
  vector(4) int vect__1.682;
  vector(4) int vect_vec_iv_.681;
  int i;
  int _1;
  float _2;
  int _3;
  float _4;
  int _5;
  float _6;
  int _7;
  float _8;
  int _9;
  float _10;
  int iftmp.2_15;
  vector(4) int vect_cst__24;
  vector(4) int vect_cst__25;
  vector(4) int vect_cst__34;
  vector(4) int vect_cst__39;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;
  vector(4) int vect_cst__47;
  vector(4) int vect_cst__53;
  unsigned int ivtmp_59;
  unsigned int ivtmp_60;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  iftmp.2_15 = __builtin_strcmp (name_13(D), "s000 ");
  if (iftmp.2_15 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 4>; [50.00%]
;;    succ:       10
;;                4

;;   basic block 10, loop depth 0
;;    pred:       2
  vect_cst__39 = { 4, 4, 4, 4 };
  vect_cst__25 = { 1, 1, 1, 1 };
  vect_cst__34 = { 2, 2, 2, 2 };
  vect_cst__24 = { 3, 3, 3, 3 };
  vect_cst__47 = { 4, 4, 4, 4 };
  vect_cst__53 = { 5, 5, 5, 5 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       7
;;                10
  # i_27 = PHI <_1(7), 0(10)>
  # ivtmp_42 = PHI <ivtmp_41(7), 32000(10)>
  # vect_vec_iv_.681_38 = PHI <vect_vec_iv_.681_26(7), { 0, 1, 2, 3 }(10)>
  # vectp_X.684_11 = PHI <vectp_X.684_36(7), &X(10)>
  # vectp_Y.688_33 = PHI <vectp_Y.688_30(7), &Y(10)>
  # vectp_Z.692_44 = PHI <vectp_Z.692_45(7), &Z(10)>
  # vectp_U.696_50 = PHI <vectp_U.696_51(7), &U(10)>
  # vectp_V.700_56 = PHI <vectp_V.700_57(7), &V(10)>
  # ivtmp_59 = PHI <ivtmp_60(7), 0(10)>
  vect_vec_iv_.681_26 = vect_vec_iv_.681_38 + vect_cst__39;
  vect__1.682_23 = vect_vec_iv_.681_38 + vect_cst__25;
  _1 = i_27 + 1;
  vect__2.683_12 = (vector(4) float) vect__1.682_23;
  _2 = (float) _1;
  MEM[(float *)vectp_X.684_11] = vect__2.683_12;
  vect__3.686_35 = vect_vec_iv_.681_38 + vect_cst__34;
  _3 = i_27 + 2;
  vect__4.687_32 = (vector(4) float) vect__3.686_35;
  _4 = (float) _3;
  MEM[(float *)vectp_Y.688_33] = vect__4.687_32;
  vect__5.690_29 = vect_vec_iv_.681_38 + vect_cst__24;
  _5 = i_27 + 3;
  vect__6.691_43 = (vector(4) float) vect__5.690_29;
  _6 = (float) _5;
  MEM[(float *)vectp_Z.692_44] = vect__6.691_43;
  vect__7.694_48 = vect_vec_iv_.681_38 + vect_cst__47;
  _7 = i_27 + 4;
  vect__8.695_49 = (vector(4) float) vect__7.694_48;
  _8 = (float) _7;
  MEM[(float *)vectp_U.696_50] = vect__8.695_49;
  vect__9.698_54 = vect_vec_iv_.681_38 + vect_cst__53;
  _9 = i_27 + 5;
  vect__10.699_55 = (vector(4) float) vect__9.698_54;
  _10 = (float) _9;
  MEM[(float *)vectp_V.700_56] = vect__10.699_55;
  ivtmp_41 = ivtmp_42 - 1;
  vectp_X.684_36 = vectp_X.684_11 + 16;
  vectp_Y.688_30 = vectp_Y.688_33 + 16;
  vectp_Z.692_45 = vectp_Z.692_44 + 16;
  vectp_U.696_51 = vectp_U.696_50 + 16;
  vectp_V.700_57 = vectp_V.700_56 + 16;
  ivtmp_60 = ivtmp_59 + 1;
  if (ivtmp_60 < 8000)
    goto <bb 7>; [96.00%]
  else
    goto <bb 9>; [4.00%]
;;    succ:       7
;;                9

;;   basic block 9, loop depth 0
;;    pred:       3
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       2
  init.part.3 (name_13(D));
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
;;                9
  return 0;
;;    succ:       EXIT

}



;; Function s000 (s000, funcdef_no=561, decl_uid=8439, cgraph_uid=561, symbol_order=582)

Merging blocks 2 and 13
Merging blocks 7 and 12
s000 ()
{
  vector(4) float * vectp_V.742;
  vector(4) float * vectp_V.741;
  vector(4) float vect__31.740;
  vector(4) int vect__30.739;
  vector(4) float * vectp_U.738;
  vector(4) float * vectp_U.737;
  vector(4) float vect__29.736;
  vector(4) int vect__28.735;
  vector(4) float * vectp_Z.734;
  vector(4) float * vectp_Z.733;
  vector(4) float vect__27.732;
  vector(4) int vect__26.731;
  vector(4) float * vectp_Y.730;
  vector(4) float * vectp_Y.729;
  vector(4) float vect__25.728;
  vector(4) int vect__24.727;
  vector(4) float * vectp_X.726;
  vector(4) float * vectp_X.725;
  vector(4) float vect__23.724;
  vector(4) int vect__22.723;
  vector(4) int vect_vec_iv_.722;
  vector(4) float * vectp_X.721;
  vector(4) float * vectp_X.720;
  vector(4) float vect__2.719;
  vector(4) float vect__1.718;
  vector(4) float * vectp_Y.717;
  vector(4) float * vectp_Y.716;
  int i;
  int D.15299;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  unsigned int ivtmp_3;
  vector(4) int vect_cst__6;
  int _22;
  float _23;
  int _24;
  float _25;
  int _26;
  float _27;
  int _28;
  float _29;
  int _30;
  float _31;
  vector(4) int vect_cst__39;
  vector(4) float vect_cst__42;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  unsigned int ivtmp_59;
  vector(4) int vect_cst__60;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;
  vector(4) int vect_cst__67;
  vector(4) int vect_cst__73;
  vector(4) int vect_cst__79;
  unsigned int ivtmp_85;
  unsigned int ivtmp_86;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  vect_cst__60 = { 4, 4, 4, 4 };
  vect_cst__39 = { 1, 1, 1, 1 };
  vect_cst__6 = { 2, 2, 2, 2 };
  vect_cst__67 = { 3, 3, 3, 3 };
  vect_cst__73 = { 4, 4, 4, 4 };
  vect_cst__79 = { 5, 5, 5, 5 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       11
;;                2
  # i_50 = PHI <_22(11), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(11), 32000(2)>
  # vect_vec_iv_.722_53 = PHI <vect_vec_iv_.722_54(11), { 0, 1, 2, 3 }(2)>
  # vectp_X.725_33 = PHI <vectp_X.725_32(11), &X(2)>
  # vectp_Y.729_64 = PHI <vectp_Y.729_65(11), &Y(2)>
  # vectp_Z.733_70 = PHI <vectp_Z.733_71(11), &Z(2)>
  # vectp_U.737_76 = PHI <vectp_U.737_77(11), &U(2)>
  # vectp_V.741_82 = PHI <vectp_V.741_83(11), &V(2)>
  # ivtmp_85 = PHI <ivtmp_86(11), 0(2)>
  vect_vec_iv_.722_54 = vect_vec_iv_.722_53 + vect_cst__60;
  vect__22.723_52 = vect_vec_iv_.722_53 + vect_cst__39;
  _22 = i_50 + 1;
  vect__23.724_40 = (vector(4) float) vect__22.723_52;
  _23 = (float) _22;
  MEM[(float *)vectp_X.725_33] = vect__23.724_40;
  vect__24.727_5 = vect_vec_iv_.722_53 + vect_cst__6;
  _24 = i_50 + 2;
  vect__25.728_63 = (vector(4) float) vect__24.727_5;
  _25 = (float) _24;
  MEM[(float *)vectp_Y.729_64] = vect__25.728_63;
  vect__26.731_68 = vect_vec_iv_.722_53 + vect_cst__67;
  _26 = i_50 + 3;
  vect__27.732_69 = (vector(4) float) vect__26.731_68;
  _27 = (float) _26;
  MEM[(float *)vectp_Z.733_70] = vect__27.732_69;
  vect__28.735_74 = vect_vec_iv_.722_53 + vect_cst__73;
  _28 = i_50 + 4;
  vect__29.736_75 = (vector(4) float) vect__28.735_74;
  _29 = (float) _28;
  MEM[(float *)vectp_U.737_76] = vect__29.736_75;
  vect__30.739_80 = vect_vec_iv_.722_53 + vect_cst__79;
  _30 = i_50 + 5;
  vect__31.740_81 = (vector(4) float) vect__30.739_80;
  _31 = (float) _30;
  MEM[(float *)vectp_V.741_82] = vect__31.740_81;
  ivtmp_55 = ivtmp_56 - 1;
  vectp_X.725_32 = vectp_X.725_33 + 16;
  vectp_Y.729_65 = vectp_Y.729_64 + 16;
  vectp_Z.733_71 = vectp_Z.733_70 + 16;
  vectp_U.737_77 = vectp_U.737_76 + 16;
  vectp_V.741_83 = vectp_V.741_82 + 16;
  ivtmp_86 = ivtmp_85 + 1;
  if (ivtmp_86 < 8000)
    goto <bb 11>; [92.31%]
  else
    goto <bb 4>; [7.69%]
;;    succ:       11
;;                4

;;   basic block 11, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  start_t_10 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       10
;;                7
  # i_47 = PHI <i_12(10), 0(7)>
  # ivtmp_62 = PHI <ivtmp_59(10), 32000(7)>
  # vectp_Y.716_45 = PHI <vectp_Y.716_44(10), &Y(7)>
  # vectp_X.720_21 = PHI <vectp_X.720_8(10), &X(7)>
  # ivtmp_3 = PHI <ivtmp_61(10), 0(7)>
  vect__1.718_43 = MEM[(float *)vectp_Y.716_45];
  _1 = Y[i_47];
  vect__2.719_41 = vect__1.718_43 + vect_cst__42;
  _2 = _1 + 1.0e+0;
  MEM[(float *)vectp_X.720_21] = vect__2.719_41;
  i_12 = i_47 + 1;
  ivtmp_59 = ivtmp_62 - 1;
  vectp_Y.716_44 = vectp_Y.716_45 + 16;
  vectp_X.720_8 = vectp_X.720_21 + 16;
  ivtmp_61 = ivtmp_3 + 1;
  if (ivtmp_61 < 8000)
    goto <bb 10>; [96.00%]
  else
    goto <bb 6>; [4.00%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&X, &Y, &Z, &U, &V, &aa, &bb, &cc, 0.0);
  nl_14 = nl_46 + 1;
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       4
;;                9
  # nl_46 = PHI <0(4), nl_14(9)>
  # ivtmp_58 = PHI <20000(4), ivtmp_57(9)>
  vect_cst__42 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_16 = mysecond ();
  clock_dif_17 = end_t_16 - start_t_10;
  printf ("S000\t %.3f \t\t", clock_dif_17);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s111 (s111, funcdef_no=562, decl_uid=8452, cgraph_uid=562, symbol_order=583)

Removing basic block 9
Merging blocks 5 and 13
s111 ()
{
  vector(4) float vect__4.780;
  vector(4) float vect__3.779;
  vector(4) float vect__3.778;
  vector(4) float * vectp_b.777;
  vector(4) float * vectp_b.776;
  vector(4) float vect__2.775;
  vector(4) float vect__2.774;
  vector(4) float * vectp_a.773;
  vector(4) float * vectp_a.772;
  unsigned int tmp.771;
  int tmp.770;
  int i;
  int D.15360;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  int _5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_24;
  unsigned int ivtmp_25;
  float _29;
  float _34;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  float _38;
  unsigned int ivtmp_39;
  vector(4) float vect_perm_even_43;
  vector(4) float vect_perm_odd_44;
  vector(4) float vect_perm_even_51;
  vector(4) float vect_perm_odd_52;
  float[32000] * _54;
  float[32000] * ivtmp_55;
  float[32000] * ivtmp_56;
  float _57;
  float[32000] * ivtmp_59;
  float _60;
  float[32000] * ivtmp_62;
  float _63;
  float[32000] * ivtmp_65;
  float _66;
  float[32000] * ivtmp_68;
  unsigned int ivtmp_69;
  unsigned int ivtmp_70;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s111 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_8 = PHI <31993(10), i_31(12)>
  # ivtmp_6 = PHI <4(10), ivtmp_39(12)>
  _5 = i_8 + -1;
  _38 = a[_5];
  _34 = b[i_8];
  _29 = _38 + _34;
  a[i_8] = _29;
  i_31 = i_8 + 2;
  ivtmp_39 = ivtmp_6 - 1;
  if (ivtmp_39 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_27 = PHI <i_14(8), 1(5)>
  # ivtmp_36 = PHI <ivtmp_35(8), 16000(5)>
  # vectp_a.772_33 = PHI <vectp_a.772_40(8), &a(5)>
  # vectp_b.776_46 = PHI <vectp_b.776_47(8), vectp_b.777_45(5)>
  # ivtmp_55 = PHI <ivtmp_56(8), _54(5)>
  # ivtmp_69 = PHI <ivtmp_70(8), 0(5)>
  _1 = i_27 + -1;
  vect__2.774_22 = MEM[(float *)vectp_a.772_33];
  vectp_a.772_41 = vectp_a.772_33 + 16;
  vect__2.775_10 = MEM[(float *)vectp_a.772_41];
  vect_perm_even_43 = VEC_PERM_EXPR <vect__2.774_22, vect__2.775_10, { 0, 2, 4, 6 }>;
  vect_perm_odd_44 = VEC_PERM_EXPR <vect__2.774_22, vect__2.775_10, { 1, 3, 5, 7 }>;
  _2 = a[_1];
  vect__3.778_48 = MEM[(float *)vectp_b.776_46];
  vectp_b.776_49 = vectp_b.776_46 + 16;
  vect__3.779_50 = MEM[(float *)vectp_b.776_49];
  vect_perm_even_51 = VEC_PERM_EXPR <vect__3.778_48, vect__3.779_50, { 0, 2, 4, 6 }>;
  vect_perm_odd_52 = VEC_PERM_EXPR <vect__3.778_48, vect__3.779_50, { 1, 3, 5, 7 }>;
  _3 = b[i_27];
  vect__4.780_53 = vect_perm_even_43 + vect_perm_even_51;
  _4 = _2 + _3;
  _57 = BIT_FIELD_REF <vect__4.780_53, 32, 0>;
  MEM[(float *)ivtmp_55] = _57;
  ivtmp_59 = ivtmp_55 + 8;
  _60 = BIT_FIELD_REF <vect__4.780_53, 32, 32>;
  MEM[(float *)ivtmp_59] = _60;
  ivtmp_62 = ivtmp_59 + 8;
  _63 = BIT_FIELD_REF <vect__4.780_53, 32, 64>;
  MEM[(float *)ivtmp_62] = _63;
  ivtmp_65 = ivtmp_62 + 8;
  _66 = BIT_FIELD_REF <vect__4.780_53, 32, 96>;
  MEM[(float *)ivtmp_65] = _66;
  ivtmp_68 = ivtmp_65 + 8;
  i_14 = i_27 + 2;
  ivtmp_35 = ivtmp_36 - 1;
  vectp_a.772_40 = vectp_a.772_41 + 16;
  vectp_b.776_47 = vectp_b.776_49 + 16;
  ivtmp_56 = ivtmp_55 + 32;
  ivtmp_70 = ivtmp_69 + 1;
  if (ivtmp_70 < 3999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_26 + 1;
  ivtmp_24 = ivtmp_25 - 1;
  if (ivtmp_24 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_26 = PHI <0(2), nl_16(7)>
  # ivtmp_25 = PHI <20000(2), ivtmp_24(7)>
  vectp_b.777_45 = &b + 4;
  _54 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_12;
  printf ("S111\t %.3f \t\t", clock_dif_19);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s1111 (s1111, funcdef_no=563, decl_uid=8465, cgraph_uid=563, symbol_order=584)

Merging blocks 5 and 9
s1111 ()
{
  vector(4) float vect__12.813;
  vector(4) float vect__10.812;
  vector(4) float vect__9.811;
  vector(4) float vect__8.810;
  vector(4) float vect__7.809;
  vector(4) float vect__6.808;
  vector(4) float vect__5.807;
  vector(4) float vect__4.806;
  vector(4) float * vectp_d.805;
  vector(4) float * vectp_d.804;
  vector(4) float vect__3.803;
  vector(4) float vect__2.802;
  vector(4) float * vectp_b.801;
  vector(4) float * vectp_b.800;
  vector(4) float vect__1.799;
  vector(4) float * vectp_c.798;
  vector(4) float * vectp_c.797;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _10;
  int _11;
  float _12;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  float[32000] * ivtmp_45;
  float _47;
  float[32000] * ivtmp_48;
  float _50;
  float[32000] * ivtmp_51;
  float _53;
  float[32000] * ivtmp_54;
  float _56;
  float[32000] * ivtmp_57;
  float[32000] * ivtmp_58;
  unsigned int ivtmp_79;
  unsigned int ivtmp_80;
  unsigned int ivtmp_81;
  unsigned int ivtmp_82;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s111 ");
  start_t_20 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_37 = PHI <i_22(8), 0(5)>
  # ivtmp_82 = PHI <ivtmp_81(8), 16000(5)>
  # vectp_c.797_78 = PHI <vectp_c.797_77(8), &c(5)>
  # vectp_b.800_75 = PHI <vectp_b.800_74(8), &b(5)>
  # vectp_d.804_68 = PHI <vectp_d.804_67(8), &d(5)>
  # ivtmp_58 = PHI <ivtmp_57(8), &a(5)>
  # ivtmp_44 = PHI <ivtmp_43(8), 0(5)>
  vect__1.799_76 = MEM[(float *)vectp_c.797_78];
  _1 = c[i_37];
  vect__2.802_73 = MEM[(float *)vectp_b.800_75];
  _2 = b[i_37];
  vect__3.803_69 = vect__1.799_76 * vect__2.802_73;
  _3 = _1 * _2;
  vect__4.806_66 = MEM[(float *)vectp_d.804_68];
  _4 = d[i_37];
  vect__5.807_65 = vect__2.802_73 * vect__4.806_66;
  _5 = _2 * _4;
  vect__6.808_64 = vect__3.803_69 + vect__5.807_65;
  _6 = _3 + _5;
  vect__7.809_63 = vect__1.799_76 * vect__1.799_76;
  _7 = _1 * _1;
  vect__8.810_62 = vect__6.808_64 + vect__7.809_63;
  _8 = _6 + _7;
  vect__9.811_61 = vect__5.807_65 + vect__8.810_62;
  _9 = _5 + _8;
  vect__10.812_60 = vect__1.799_76 * vect__4.806_66;
  _10 = _1 * _4;
  _11 = i_37 * 2;
  vect__12.813_59 = vect__9.811_61 + vect__10.812_60;
  _12 = _9 + _10;
  _56 = BIT_FIELD_REF <vect__12.813_59, 32, 0>;
  MEM[(float *)ivtmp_58] = _56;
  ivtmp_54 = ivtmp_58 + 8;
  _53 = BIT_FIELD_REF <vect__12.813_59, 32, 32>;
  MEM[(float *)ivtmp_54] = _53;
  ivtmp_51 = ivtmp_54 + 8;
  _50 = BIT_FIELD_REF <vect__12.813_59, 32, 64>;
  MEM[(float *)ivtmp_51] = _50;
  ivtmp_48 = ivtmp_51 + 8;
  _47 = BIT_FIELD_REF <vect__12.813_59, 32, 96>;
  MEM[(float *)ivtmp_48] = _47;
  ivtmp_45 = ivtmp_48 + 8;
  i_22 = i_37 + 1;
  ivtmp_81 = ivtmp_82 - 1;
  vectp_c.797_77 = vectp_c.797_78 + 16;
  vectp_b.800_74 = vectp_b.800_75 + 16;
  vectp_d.804_67 = vectp_d.804_68 + 16;
  ivtmp_57 = ivtmp_58 + 32;
  ivtmp_43 = ivtmp_44 + 1;
  if (ivtmp_43 < 4000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_36 + 1;
  ivtmp_79 = ivtmp_80 - 1;
  if (ivtmp_79 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_36 = PHI <0(2), nl_24(7)>
  # ivtmp_80 = PHI <20000(2), ivtmp_79(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_20;
  printf ("S1111\t %.3f \t\t ", clock_dif_27);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s112 (s112, funcdef_no=564, decl_uid=8478, cgraph_uid=564, symbol_order=585)

Removing basic block 9
Merging blocks 5 and 13
s112 ()
{
  vector(4) float vect__4.845;
  vector(4) float * vectp_a.844;
  vector(4) float * vectp_a.843;
  vector(4) float vect__4.842;
  vector(4) float vect__2.841;
  vector(4) float vect__2.840;
  vector(4) float * vectp_b.839;
  vector(4) float * vectp_b.838;
  vector(4) float vect__1.837;
  vector(4) float vect__1.836;
  vector(4) float * vectp_a.835;
  vector(4) float * vectp_a.834;
  unsigned int tmp.833;
  int tmp.832;
  int i;
  int D.15431;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_25;
  int _29;
  float _34;
  float _35;
  unsigned int ivtmp_36;
  float _38;
  unsigned int ivtmp_39;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s112 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_7 = PHI <2(10), i_31(12)>
  # ivtmp_5 = PHI <3(10), ivtmp_39(12)>
  _35 = a[i_7];
  _34 = b[i_7];
  _29 = i_7 + 1;
  _38 = _35 + _34;
  a[_29] = _38;
  i_31 = i_7 + -1;
  ivtmp_39 = ivtmp_5 - 1;
  if (ivtmp_39 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_27 = PHI <i_14(8), 31998(5)>
  # ivtmp_36 = PHI <ivtmp_25(8), 31999(5)>
  # vectp_a.834_40 = PHI <vectp_a.834_22(8), vectp_a.835_33(5)>
  # vectp_b.838_44 = PHI <vectp_b.838_45(8), vectp_b.839_43(5)>
  # vectp_a.843_50 = PHI <vectp_a.843_51(8), vectp_a.844_49(5)>
  # ivtmp_54 = PHI <ivtmp_55(8), 0(5)>
  vect__1.836_41 = MEM[(float *)vectp_a.834_40];
  vect__1.837_10 = VEC_PERM_EXPR <vect__1.836_41, vect__1.836_41, { 3, 2, 1, 0 }>;
  _1 = a[i_27];
  vect__2.840_46 = MEM[(float *)vectp_b.838_44];
  vect__2.841_47 = VEC_PERM_EXPR <vect__2.840_46, vect__2.840_46, { 3, 2, 1, 0 }>;
  _2 = b[i_27];
  _3 = i_27 + 1;
  vect__4.842_48 = vect__1.837_10 + vect__2.841_47;
  _4 = _1 + _2;
  vect__4.845_52 = VEC_PERM_EXPR <vect__4.842_48, vect__4.842_48, { 3, 2, 1, 0 }>;
  MEM[(float *)vectp_a.843_50] = vect__4.845_52;
  i_14 = i_27 + -1;
  ivtmp_25 = ivtmp_36 - 1;
  vectp_a.834_22 = vectp_a.834_40 + 18446744073709551600;
  vectp_b.838_45 = vectp_b.838_44 + 18446744073709551600;
  vectp_a.843_51 = vectp_a.843_50 + 18446744073709551600;
  ivtmp_55 = ivtmp_54 + 1;
  if (ivtmp_55 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_26 + 1;
  ivtmp_23 = ivtmp_24 - 1;
  if (ivtmp_23 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_26 = PHI <0(2), nl_16(7)>
  # ivtmp_24 = PHI <30000(2), ivtmp_23(7)>
  vectp_a.835_33 = &a + 127980;
  vectp_b.839_43 = &b + 127980;
  vectp_a.844_49 = &a + 127984;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_12;
  printf ("S112\t %.3f \t\t", clock_dif_19);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s1112 (s1112, funcdef_no=565, decl_uid=8491, cgraph_uid=565, symbol_order=586)

Merging blocks 5 and 9
s1112 ()
{
  vector(4) float vect__2.871;
  vector(4) float * vectp_a.870;
  vector(4) float * vectp_a.869;
  vector(4) float vect__2.868;
  vector(4) float vect__1.867;
  vector(4) float vect__1.866;
  vector(4) float * vectp_b.865;
  vector(4) float * vectp_b.864;
  int i;
  int D.15469;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  unsigned int ivtmp_4;
  unsigned int ivtmp_6;
  unsigned int ivtmp_21;
  unsigned int ivtmp_23;
  unsigned int ivtmp_31;
  vector(4) float vect_cst__32;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s112 ");
  start_t_10 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_25 = PHI <i_12(8), 31999(5)>
  # ivtmp_23 = PHI <ivtmp_21(8), 32000(5)>
  # vectp_b.864_34 = PHI <vectp_b.864_22(8), vectp_b.865_3(5)>
  # vectp_a.869_28 = PHI <vectp_a.869_29(8), vectp_a.870_36(5)>
  # ivtmp_31 = PHI <ivtmp_38(8), 0(5)>
  vect__1.866_5 = MEM[(float *)vectp_b.864_34];
  vect__1.867_33 = VEC_PERM_EXPR <vect__1.866_5, vect__1.866_5, { 3, 2, 1, 0 }>;
  _1 = b[i_25];
  vect__2.868_27 = vect__1.867_33 + vect_cst__32;
  _2 = _1 + 1.0e+0;
  vect__2.871_37 = VEC_PERM_EXPR <vect__2.868_27, vect__2.868_27, { 3, 2, 1, 0 }>;
  MEM[(float *)vectp_a.869_28] = vect__2.871_37;
  i_12 = i_25 + -1;
  ivtmp_21 = ivtmp_23 - 1;
  vectp_b.864_22 = vectp_b.864_34 + 18446744073709551600;
  vectp_a.869_29 = vectp_a.869_28 + 18446744073709551600;
  ivtmp_38 = ivtmp_31 + 1;
  if (ivtmp_38 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_14 = nl_24 + 1;
  ivtmp_4 = ivtmp_6 - 1;
  if (ivtmp_4 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_24 = PHI <0(2), nl_14(7)>
  # ivtmp_6 = PHI <30000(2), ivtmp_4(7)>
  vectp_b.865_3 = &b + 127984;
  vect_cst__32 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
  vectp_a.870_36 = &a + 127984;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_16 = mysecond ();
  clock_dif_17 = end_t_16 - start_t_10;
  printf ("S1112\t %.3f \t\t ", clock_dif_17);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s113 (s113, funcdef_no=566, decl_uid=8504, cgraph_uid=566, symbol_order=587)

Removing basic block 9

Symbols to be put in SSA form
{ D.13012 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 14
Number of blocks to update: 12 ( 86%)


Merging blocks 5 and 13
s113 ()
{
  vector(4) float * vectp_a.898;
  vector(4) float * vectp_a.897;
  vector(4) float vect__3.896;
  vector(4) float vect__2.895;
  vector(4) float * vectp_b.894;
  vector(4) float * vectp_b.893;
  vector(4) float vect__1.892;
  vector(4) float * vectp_a.891;
  vector(4) float * vectp_a.890;
  unsigned int tmp.889;
  int tmp.888;
  int i;
  int D.15499;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_4;
  float _21;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  float _28;
  unsigned int ivtmp_30;
  float _33;
  float _34;
  unsigned int ivtmp_35;
  vector(4) float vect_cst__40;
  unsigned int ivtmp_50;
  unsigned int ivtmp_51;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s113 ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_6 = PHI <31997(10), i_29(12)>
  # ivtmp_4 = PHI <3(10), ivtmp_30(12)>
  _34 = a[0];
  _33 = b[i_6];
  _28 = _34 + _33;
  a[i_6] = _28;
  i_29 = i_6 + 1;
  ivtmp_30 = ivtmp_4 - 1;
  if (ivtmp_30 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_26 = PHI <i_13(8), 1(5)>
  # ivtmp_35 = PHI <ivtmp_24(8), 31999(5)>
  # vectp_a.890_31 = PHI <vectp_a.890_32(8), &a(5)>
  # vectp_b.893_42 = PHI <vectp_b.893_43(8), vectp_b.894_9(5)>
  # vectp_a.897_47 = PHI <vectp_a.897_48(8), vectp_a.898_46(5)>
  # ivtmp_50 = PHI <ivtmp_51(8), 0(5)>
  vect__1.892_39 = MEM[(float *)vectp_a.890_31];
  _1 = a[0];
  vect__2.895_44 = MEM[(float *)vectp_b.893_42];
  _2 = b[i_26];
  vect__3.896_45 = vect_cst__40 + vect__2.895_44;
  _3 = _1 + _2;
  MEM[(float *)vectp_a.897_47] = vect__3.896_45;
  i_13 = i_26 + 1;
  ivtmp_24 = ivtmp_35 - 1;
  vectp_a.890_32 = vectp_a.890_31 + 0;
  vectp_b.893_43 = vectp_b.893_42 + 16;
  vectp_a.897_48 = vectp_a.897_47 + 16;
  ivtmp_51 = ivtmp_50 + 1;
  if (ivtmp_51 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_22 = ivtmp_23 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_23 = PHI <40000(2), ivtmp_22(7)>
  _21 = a[0];
  vect_cst__40 = {_21, _21, _21, _21};
  vectp_b.894_9 = &b + 4;
  vectp_a.898_46 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("S113\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s1113 (s1113, funcdef_no=567, decl_uid=8517, cgraph_uid=567, symbol_order=588)

s1113 ()
{
  int i;
  int D.15533;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_35;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s113 ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_26 = PHI <0(5), i_13(8)>
  # ivtmp_35 = PHI <32000(5), ivtmp_24(8)>
  _1 = a[16000];
  _2 = b[i_26];
  _3 = _1 + _2;
  a[i_26] = _3;
  i_13 = i_26 + 1;
  ivtmp_24 = ivtmp_35 - 1;
  if (ivtmp_24 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_22 = ivtmp_23 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_23 = PHI <20000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("S1113\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s114 (s114, funcdef_no=568, decl_uid=8530, cgraph_uid=568, symbol_order=589)

s114 ()
{
  int i;
  int D.15553;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_26;
  unsigned int ivtmp_37;
  unsigned int ivtmp_38;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s114 ");
  start_t_13 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 10, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       10
;;                12
  # j_5 = PHI <0(10), j_15(12)>
  _1 = aa[j_5][i_27];
  _2 = bb[i_27][j_5];
  _3 = _1 + _2;
  aa[i_27][j_5] = _3;
  j_15 = j_5 + 1;
  if (j_5 < i_9)
    goto <bb 12>; [89.00%]
  else
    goto <bb 4>; [11.00%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 3
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 2
;;    pred:       6
;;                3
  i_16 = i_27 + 1;
  ivtmp_40 = ivtmp_41 + 4294967295;
  if (ivtmp_40 != 0)
    goto <bb 16>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       16
;;                7

;;   basic block 16, loop depth 2
;;    pred:       4
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       15
;;                16
  # i_9 = PHI <0(15), i_27(16)>
  # i_27 = PHI <i_28(15), i_16(16)>
  # ivtmp_41 = PHI <ivtmp_26(15), ivtmp_40(16)>
  if (i_27 > 0)
    goto <bb 10>; [89.91%]
  else
    goto <bb 4>; [10.09%]
;;    succ:       10
;;                4

;;   basic block 7, loop depth 1
;;    pred:       4
;;                8
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_30 + 1;
  ivtmp_37 = ivtmp_38 - 1;
  if (ivtmp_37 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       11
;;                9

;;   basic block 11, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                11
  # nl_30 = PHI <0(2), nl_18(11)>
  # ivtmp_38 = PHI <7800(2), ivtmp_37(11)>
  i_28 = 1;
  ivtmp_26 = 255;
  if (ivtmp_26 != 0)
    goto <bb 15>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       15
;;                7

;;   basic block 15, loop depth 1
;;    pred:       8
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_13;
  printf ("S114\t %.3f \t\t", clock_dif_21);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s115 (s115, funcdef_no=569, decl_uid=8547, cgraph_uid=569, symbol_order=590)

s115 ()
{
  int i;
  int D.15586;
  int i;
  int j;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_8;
  unsigned int ivtmp_53;
  int _57;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s115 ");
  start_t_15 = mysecond ();
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 3, loop depth 2
;;    pred:       5
  _57 = i_11 + 1;
  if (_57 != 256)
    goto <bb 4>; [88.89%]
  else
    goto <bb 8>; [11.11%]
;;    succ:       4
;;                8

;;   basic block 4, loop depth 2
;;    pred:       3
;;                10
  # i_29 = PHI <_57(3), i_18(10)>
  # i_32 = PHI <_57(3), i_11(10)>
  # j_41 = PHI <i_11(3), j_10(10)>
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                6
  # i_6 = PHI <i_29(4), 1(6)>
  # i_11 = PHI <i_32(4), 1(6)>
  # j_10 = PHI <j_41(4), 0(6)>
  _1 = a[i_6];
  _2 = aa[j_10][i_6];
  _3 = a[j_10];
  _4 = _2 * _3;
  _5 = _1 - _4;
  a[i_6] = _5;
  i_18 = i_6 + 1;
  if (i_18 != 256)
    goto <bb 10>; [89.00%]
  else
    goto <bb 3>; [11.00%]
;;    succ:       10
;;                3

;;   basic block 10, loop depth 2
;;    pred:       5
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 9, loop depth 1
;;    pred:       8
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       2
;;                9
  # nl_31 = PHI <0(2), nl_20(9)>
  # ivtmp_8 = PHI <39000(2), ivtmp_53(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 7, loop depth 0
;;    pred:       8
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_15;
  printf ("S115\t %.3f \t\t", clock_dif_23);
  check (1);
  return 0;
;;    succ:       EXIT

;;   basic block 8, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_31 + 1;
  ivtmp_53 = ivtmp_8 - 1;
  if (ivtmp_53 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       9
;;                7

}



;; Function s1115 (s1115, funcdef_no=570, decl_uid=8564, cgraph_uid=570, symbol_order=591)

s1115 ()
{
  int i;
  int D.15597;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_41;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;
  unsigned int ivtmp_47;
  unsigned int ivtmp_48;
  unsigned int ivtmp_49;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s115 ");
  start_t_15 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # j_42 = PHI <0(5), j_17(11)>
  # ivtmp_49 = PHI <256(5), ivtmp_48(11)>
  _1 = aa[i_33][j_42];
  _2 = cc[j_42][i_33];
  _3 = _1 * _2;
  _4 = bb[i_33][j_42];
  _5 = _3 + _4;
  aa[i_33][j_42] = _5;
  j_17 = j_42 + 1;
  ivtmp_48 = ivtmp_49 - 1;
  if (ivtmp_48 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  i_18 = i_33 + 1;
  ivtmp_45 = ivtmp_47 - 1;
  if (ivtmp_45 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # i_33 = PHI <0(7), i_18(10)>
  # ivtmp_47 = PHI <256(7), ivtmp_45(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_32 + 1;
  ivtmp_41 = ivtmp_44 - 1;
  if (ivtmp_41 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_32 = PHI <0(2), nl_20(9)>
  # ivtmp_44 = PHI <3900(2), ivtmp_41(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_15;
  printf ("S1115\t %.3f \t\t", clock_dif_23);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s116 (s116, funcdef_no=571, decl_uid=8581, cgraph_uid=571, symbol_order=592)

s116 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  int _5;
  float _6;
  float _7;
  float _8;
  int _9;
  float _10;
  float _11;
  float _12;
  int _13;
  float _14;
  float _15;
  float _16;
  int _17;
  float _18;
  float _19;
  float _20;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;
  unsigned int ivtmp_46;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s116 ");
  start_t_28 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_48 = PHI <0(5), _17(8)>
  # ivtmp_46 = PHI <6399(5), ivtmp_45(8)>
  _1 = i_48 + 1;
  _2 = a[_1];
  _3 = a[i_48];
  _4 = _2 * _3;
  a[i_48] = _4;
  _5 = i_48 + 2;
  _6 = a[_5];
  _7 = a[_1];
  _8 = _6 * _7;
  a[_1] = _8;
  _9 = i_48 + 3;
  _10 = a[_9];
  _11 = a[_5];
  _12 = _10 * _11;
  a[_5] = _12;
  _13 = i_48 + 4;
  _14 = a[_13];
  _15 = a[_9];
  _16 = _14 * _15;
  a[_9] = _16;
  _17 = i_48 + 5;
  _18 = a[_17];
  _19 = a[_13];
  _20 = _18 * _19;
  a[_13] = _20;
  ivtmp_45 = ivtmp_46 - 1;
  if (ivtmp_45 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_35 = nl_47 + 1;
  ivtmp_43 = ivtmp_44 - 1;
  if (ivtmp_43 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_47 = PHI <0(2), nl_35(7)>
  # ivtmp_44 = PHI <100000(2), ivtmp_43(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_37 = mysecond ();
  clock_dif_38 = end_t_37 - start_t_28;
  printf ("S116\t %.3f \t\t", clock_dif_38);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s118 (s118, funcdef_no=572, decl_uid=8594, cgraph_uid=572, symbol_order=593)

s118 ()
{
  int i;
  int D.15650;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _2;
  int _3;
  int _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_52;
  unsigned int ivtmp_53;
  unsigned int ivtmp_54;
  float pretmp_58;
  float prephitmp_59;
  unsigned int ivtmp_62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s118 ");
  start_t_17 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # j_37 = PHI <0(5), j_19(11)>
  # prephitmp_59 = PHI <pretmp_58(5), _7(11)>
  _2 = bb[j_37][i_36];
  _3 = i_36 - j_37;
  _4 = _3 + -1;
  _5 = a[_4];
  _6 = _2 * _5;
  _7 = _6 + prephitmp_59;
  a[i_36] = _7;
  j_19 = j_37 + 1;
  if (j_19 < i_36)
    goto <bb 11>; [87.64%]
  else
    goto <bb 4>; [12.36%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  i_20 = i_36 + 1;
  ivtmp_54 = ivtmp_62 - 1;
  if (ivtmp_54 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # i_36 = PHI <1(7), i_20(10)>
  # ivtmp_62 = PHI <255(7), ivtmp_54(10)>
  pretmp_58 = a[i_36];
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_44 + 1;
  ivtmp_52 = ivtmp_53 - 1;
  if (ivtmp_52 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_44 = PHI <0(2), nl_22(9)>
  # ivtmp_53 = PHI <7800(2), ivtmp_52(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_17;
  printf ("S118\t %.3f \t\t", clock_dif_25);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s119 (s119, funcdef_no=573, decl_uid=8611, cgraph_uid=573, symbol_order=594)

Removing basic block 12
Merging blocks 5 and 16
s119 ()
{
  vector(4) float * vectp_aa.1041;
  vector(4) float * vectp_aa.1040;
  vector(4) float vect__5.1039;
  vector(4) float vect__4.1038;
  vector(4) float * vectp_bb.1037;
  vector(4) float * vectp_bb.1036;
  vector(4) float vect__3.1035;
  vector(4) float * vectp_aa.1034;
  vector(4) float * vectp_aa.1033;
  unsigned int tmp.1032;
  int tmp.1031;
  int i;
  int D.15681;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  sizetype _1;
  int _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  int _9;
  unsigned int ivtmp_10;
  sizetype _13;
  unsigned int ivtmp_30;
  unsigned int ivtmp_31;
  unsigned int ivtmp_36;
  unsigned int ivtmp_38;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  int _44;
  sizetype _47;
  sizetype _52;
  sizetype _53;
  sizetype _54;
  sizetype _60;
  sizetype _61;
  sizetype _62;
  unsigned int ivtmp_66;
  unsigned int ivtmp_67;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s119 ");
  start_t_15 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 13, loop depth 2
;;    pred:       3
;;    succ:       14

;;   basic block 14, loop depth 3
;;    pred:       13
;;                15
  # j_28 = PHI <253(13), j_37(15)>
  # ivtmp_10 = PHI <3(13), ivtmp_36(15)>
  _9 = j_28 + -1;
  _8 = aa[_44][_9];
  _7 = bb[i_33][j_28];
  _6 = _8 + _7;
  aa[i_33][j_28] = _6;
  j_37 = j_28 + 1;
  ivtmp_36 = ivtmp_10 - 1;
  if (ivtmp_36 != 0)
    goto <bb 15>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       15
;;                4

;;   basic block 15, loop depth 3
;;    pred:       14
  goto <bb 14>; [100.00%]
;;    succ:       14

;;   basic block 3, loop depth 3
;;    pred:       11
;;                5
  # j_42 = PHI <j_17(11), 1(5)>
  # ivtmp_41 = PHI <ivtmp_40(11), 255(5)>
  # vectp_aa.1033_48 = PHI <vectp_aa.1033_49(11), vectp_aa.1034_26(5)>
  # vectp_bb.1036_55 = PHI <vectp_bb.1036_56(11), vectp_bb.1037_51(5)>
  # vectp_aa.1040_63 = PHI <vectp_aa.1040_64(11), vectp_aa.1041_59(5)>
  # ivtmp_66 = PHI <ivtmp_67(11), 0(5)>
  _2 = j_42 + -1;
  vect__3.1035_50 = MEM[(float *)vectp_aa.1033_48];
  _3 = aa[_44][_2];
  vect__4.1038_57 = MEM[(float *)vectp_bb.1036_55];
  _4 = bb[i_33][j_42];
  vect__5.1039_58 = vect__3.1035_50 + vect__4.1038_57;
  _5 = _3 + _4;
  MEM[(float *)vectp_aa.1040_63] = vect__5.1039_58;
  j_17 = j_42 + 1;
  ivtmp_40 = ivtmp_41 - 1;
  vectp_aa.1033_49 = vectp_aa.1033_48 + 16;
  vectp_bb.1036_56 = vectp_bb.1036_55 + 16;
  vectp_aa.1040_64 = vectp_aa.1040_63 + 16;
  ivtmp_67 = ivtmp_66 + 1;
  if (ivtmp_67 < 63)
    goto <bb 11>; [96.00%]
  else
    goto <bb 13>; [4.00%]
;;    succ:       11
;;                13

;;   basic block 4, loop depth 2
;;    pred:       14
  i_18 = i_33 + 1;
  ivtmp_38 = ivtmp_39 - 1;
  if (ivtmp_38 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # i_33 = PHI <1(7), i_18(10)>
  # ivtmp_39 = PHI <255(7), ivtmp_38(10)>
  _44 = i_33 + -1;
  _1 = (sizetype) i_33;
  _13 = _1 * 1024;
  _47 = _13 + 18446744073709550592;
  vectp_aa.1034_26 = &aa + _47;
  _52 = (sizetype) i_33;
  _53 = _52 * 1024;
  _54 = _53 + 4;
  vectp_bb.1037_51 = &bb + _54;
  _60 = (sizetype) i_33;
  _61 = _60 * 1024;
  _62 = _61 + 4;
  vectp_aa.1041_59 = &aa + _62;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_32 + 1;
  ivtmp_30 = ivtmp_31 - 1;
  if (ivtmp_30 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_32 = PHI <0(2), nl_20(9)>
  # ivtmp_31 = PHI <7800(2), ivtmp_30(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_15;
  printf ("S119\t %.3f \t\t ", clock_dif_23);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s1119 (s1119, funcdef_no=574, decl_uid=8628, cgraph_uid=574, symbol_order=595)

Merging blocks 5 and 31
Merging blocks 19 and 30
s1119 ()
{
  vector(4) float * vectp_aa.1098;
  vector(4) float * vectp_aa.1097;
  vector(4) float vect__46.1096;
  vector(4) float vect__12.1095;
  vector(4) float * vectp_bb.1094;
  vector(4) float * vectp_bb.1093;
  vector(4) float vect__44.1092;
  vector(4) float * vectp_aa.1091;
  vector(4) float * vectp_aa.1090;
  vector(4) float * vectp_aa.1089;
  vector(4) float * vectp_aa.1088;
  vector(4) float vect__4.1087;
  vector(4) float vect__3.1086;
  vector(4) float * vectp_bb.1085;
  vector(4) float * vectp_bb.1084;
  vector(4) float vect__2.1083;
  vector(4) float * vectp_aa.1082;
  vector(4) float * vectp_aa.1081;
  vector(4) float * vectp_aa.1080;
  vector(4) float * vectp_aa.1079;
  vector(4) float vect__10.1078;
  vector(4) float vect__27.1077;
  vector(4) float * vectp_bb.1076;
  vector(4) float * vectp_bb.1075;
  vector(4) float vect__28.1074;
  vector(4) float * vectp_aa.1073;
  vector(4) float * vectp_aa.1072;
  int i;
  int D.15728;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  unsigned int ivtmp_1;
  float _2;
  float _3;
  float _4;
  unsigned int ivtmp_6;
  float _10;
  float _12;
  unsigned int ivtmp_16;
  unsigned int ivtmp_25;
  int _26;
  float _27;
  float _28;
  unsigned int ivtmp_35;
  int _36;
  unsigned int ivtmp_37;
  int _38;
  sizetype _40;
  unsigned int ivtmp_43;
  float _44;
  float _46;
  int ivtmp_50;
  int ivtmp_51;
  unsigned int ivtmp_53;
  sizetype _54;
  sizetype _55;
  sizetype _60;
  sizetype _61;
  sizetype _67;
  sizetype _68;
  unsigned int ivtmp_72;
  unsigned int ivtmp_73;
  sizetype _75;
  sizetype _76;
  sizetype _77;
  sizetype _82;
  sizetype _83;
  sizetype _89;
  sizetype _90;
  sizetype _95;
  sizetype _96;
  sizetype _101;
  sizetype _102;
  sizetype _103;
  sizetype _109;
  sizetype _110;
  sizetype _111;
  unsigned int ivtmp_115;
  unsigned int ivtmp_116;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s119 ");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 3, loop depth 3
;;    pred:       24
;;                5
  # j_41 = PHI <j_48(24), 0(5)>
  # ivtmp_16 = PHI <ivtmp_25(24), 256(5)>
  # vectp_aa.1081_78 = PHI <vectp_aa.1081_79(24), vectp_aa.1082_74(5)>
  # vectp_bb.1084_84 = PHI <vectp_bb.1084_85(24), vectp_bb.1085_81(5)>
  # vectp_aa.1088_91 = PHI <vectp_aa.1088_92(24), vectp_aa.1089_88(5)>
  # vectp_aa.1090_97 = PHI <vectp_aa.1090_98(24), vectp_aa.1091_94(5)>
  # vectp_bb.1093_104 = PHI <vectp_bb.1093_105(24), vectp_bb.1094_100(5)>
  # vectp_aa.1097_112 = PHI <vectp_aa.1097_113(24), vectp_aa.1098_108(5)>
  # ivtmp_115 = PHI <ivtmp_116(24), 0(5)>
  vect__2.1083_80 = MEM[(float *)vectp_aa.1081_78];
  _2 = aa[_36][j_41];
  vect__3.1086_86 = MEM[(float *)vectp_bb.1084_84];
  _3 = bb[i_32][j_41];
  vect__4.1087_87 = vect__2.1083_80 + vect__3.1086_86;
  _4 = _2 + _3;
  MEM[(float *)vectp_aa.1088_91] = vect__4.1087_87;
  i_17 = i_32 + 1;
  _26 = i_17 + -1;
  vect__44.1092_99 = MEM[(float *)vectp_aa.1090_97];
  _44 = aa[_26][j_41];
  vect__12.1095_106 = MEM[(float *)vectp_bb.1093_104];
  _12 = bb[i_17][j_41];
  vect__46.1096_107 = vect__44.1092_99 + vect__12.1095_106;
  _46 = _44 + _12;
  MEM[(float *)vectp_aa.1097_112] = vect__46.1096_107;
  j_48 = j_41 + 1;
  ivtmp_25 = ivtmp_16 - 1;
  vectp_aa.1081_79 = vectp_aa.1081_78 + 16;
  vectp_bb.1084_85 = vectp_bb.1084_84 + 16;
  vectp_aa.1088_92 = vectp_aa.1088_91 + 16;
  vectp_aa.1090_98 = vectp_aa.1090_97 + 16;
  vectp_bb.1093_105 = vectp_bb.1093_104 + 16;
  vectp_aa.1097_113 = vectp_aa.1097_112 + 16;
  ivtmp_116 = ivtmp_115 + 1;
  if (ivtmp_116 < 64)
    goto <bb 24>; [96.00%]
  else
    goto <bb 25>; [4.00%]
;;    succ:       24
;;                25

;;   basic block 24, loop depth 3
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 25, loop depth 2
;;    pred:       3
  # i_52 = PHI <i_17(3)>
  i_49 = i_52 + 1;
  ivtmp_51 = ivtmp_50 + 2;
  ivtmp_35 = ivtmp_1 - 1;
  if (ivtmp_35 != 0)
    goto <bb 27>; [98.00%]
  else
    goto <bb 19>; [2.00%]
;;    succ:       27
;;                19

;;   basic block 27, loop depth 2
;;    pred:       25
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 19, loop depth 1
;;    pred:       25
  # i_5 = PHI <i_49(25)>
  _38 = i_5 + -1;
  _40 = (sizetype) i_5;
  _54 = _40 * 1024;
  _55 = _54 + 18446744073709550592;
  vectp_aa.1073_39 = &aa + _55;
  _60 = (sizetype) i_5;
  _61 = _60 * 1024;
  vectp_bb.1076_59 = &bb + _61;
  _67 = (sizetype) i_5;
  _68 = _67 * 1024;
  vectp_aa.1080_66 = &aa + _68;
;;    succ:       13

;;   basic block 13, loop depth 2
;;    pred:       14
;;                19
  # j_30 = PHI <j_8(14), 0(19)>
  # ivtmp_6 = PHI <ivtmp_43(14), 256(19)>
  # vectp_aa.1072_56 = PHI <vectp_aa.1072_57(14), vectp_aa.1073_39(19)>
  # vectp_bb.1075_62 = PHI <vectp_bb.1075_63(14), vectp_bb.1076_59(19)>
  # vectp_aa.1079_69 = PHI <vectp_aa.1079_70(14), vectp_aa.1080_66(19)>
  # ivtmp_72 = PHI <ivtmp_73(14), 0(19)>
  vect__28.1074_58 = MEM[(float *)vectp_aa.1072_56];
  _28 = aa[_38][j_30];
  vect__27.1077_64 = MEM[(float *)vectp_bb.1075_62];
  _27 = bb[i_5][j_30];
  vect__10.1078_65 = vect__28.1074_58 + vect__27.1077_64;
  _10 = _28 + _27;
  MEM[(float *)vectp_aa.1079_69] = vect__10.1078_65;
  j_8 = j_30 + 1;
  ivtmp_43 = ivtmp_6 - 1;
  vectp_aa.1072_57 = vectp_aa.1072_56 + 16;
  vectp_bb.1075_63 = vectp_bb.1075_62 + 16;
  vectp_aa.1079_70 = vectp_aa.1079_69 + 16;
  ivtmp_73 = ivtmp_72 + 1;
  if (ivtmp_73 < 64)
    goto <bb 14>; [96.00%]
  else
    goto <bb 15>; [4.00%]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 2
;;    pred:       13
  goto <bb 13>; [100.00%]
;;    succ:       13

;;   basic block 15, loop depth 1
;;    pred:       13
  i_7 = i_5 + 1;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_19 = nl_31 + 1;
  ivtmp_53 = ivtmp_37 - 1;
  if (ivtmp_53 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 5, loop depth 2
;;    pred:       7
;;                27
  # i_32 = PHI <1(7), i_49(27)>
  # ivtmp_50 = PHI <2(7), ivtmp_51(27)>
  # ivtmp_1 = PHI <127(7), ivtmp_35(27)>
  _36 = i_32 + -1;
  _75 = (sizetype) i_32;
  _76 = _75 * 1024;
  _77 = _76 + 18446744073709550592;
  vectp_aa.1082_74 = &aa + _77;
  _82 = (sizetype) i_32;
  _83 = _82 * 1024;
  vectp_bb.1085_81 = &bb + _83;
  _89 = (sizetype) i_32;
  _90 = _89 * 1024;
  vectp_aa.1089_88 = &aa + _90;
  _95 = (sizetype) i_32;
  _96 = _95 * 1024;
  vectp_aa.1091_94 = &aa + _96;
  _101 = (sizetype) i_32;
  _102 = _101 + 1;
  _103 = _102 * 1024;
  vectp_bb.1094_100 = &bb + _103;
  _109 = (sizetype) i_32;
  _110 = _109 + 1;
  _111 = _110 * 1024;
  vectp_aa.1098_108 = &aa + _111;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 1
;;    pred:       15
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_31 = PHI <0(2), nl_19(9)>
  # ivtmp_37 = PHI <7800(2), ivtmp_53(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       15
  end_t_21 = mysecond ();
  clock_dif_22 = end_t_21 - start_t_14;
  printf ("S1119\t %.3f \t\t ", clock_dif_22);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s121 (s121, funcdef_no=575, decl_uid=8645, cgraph_uid=575, symbol_order=596)

Removing basic block 9
Merging blocks 5 and 13
s121 ()
{
  vector(4) float * vectp_a.1159;
  vector(4) float * vectp_a.1158;
  vector(4) float vect__3.1157;
  vector(4) float vect__2.1156;
  vector(4) float * vectp_b.1155;
  vector(4) float * vectp_b.1154;
  vector(4) float vect__1.1153;
  vector(4) float * vectp_a.1152;
  vector(4) float * vectp_a.1151;
  unsigned int tmp.1150;
  int tmp.1149;
  int i;
  int D.15811;
  int i;
  int nl;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_5;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  float _28;
  unsigned int ivtmp_30;
  float _33;
  unsigned int ivtmp_34;
  unsigned int ivtmp_35;
  float _37;
  unsigned int ivtmp_47;
  unsigned int ivtmp_48;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s121 ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_7 = PHI <31996(10), j_4(12)>
  # ivtmp_5 = PHI <3(10), ivtmp_30(12)>
  j_4 = i_7 + 1;
  _33 = a[j_4];
  _28 = b[i_7];
  _37 = _33 + _28;
  a[i_7] = _37;
  ivtmp_30 = ivtmp_5 - 1;
  if (ivtmp_30 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_26 = PHI <j_12(8), 0(5)>
  # ivtmp_35 = PHI <ivtmp_34(8), 31999(5)>
  # vectp_a.1151_32 = PHI <vectp_a.1151_39(8), vectp_a.1152_31(5)>
  # vectp_b.1154_40 = PHI <vectp_b.1154_9(8), &b(5)>
  # vectp_a.1158_44 = PHI <vectp_a.1158_45(8), &a(5)>
  # ivtmp_47 = PHI <ivtmp_48(8), 0(5)>
  j_12 = i_26 + 1;
  vect__1.1153_21 = MEM[(float *)vectp_a.1151_32];
  _1 = a[j_12];
  vect__2.1156_42 = MEM[(float *)vectp_b.1154_40];
  _2 = b[i_26];
  vect__3.1157_43 = vect__1.1153_21 + vect__2.1156_42;
  _3 = _1 + _2;
  MEM[(float *)vectp_a.1158_44] = vect__3.1157_43;
  ivtmp_34 = ivtmp_35 - 1;
  vectp_a.1151_39 = vectp_a.1151_32 + 16;
  vectp_b.1154_9 = vectp_b.1154_40 + 16;
  vectp_a.1158_45 = vectp_a.1158_44 + 16;
  ivtmp_48 = ivtmp_47 + 1;
  if (ivtmp_48 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_23 = ivtmp_24 - 1;
  if (ivtmp_23 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_24 = PHI <30000(2), ivtmp_23(7)>
  vectp_a.1152_31 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("S121\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s122 (s122, funcdef_no=576, decl_uid=8661, cgraph_uid=576, symbol_order=597)

s122 (int n1, int n3)
{
  int i;
  int D.15843;
  int i;
  int nl;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  float _3;
  float _4;
  unsigned int ivtmp_31;
  unsigned int ivtmp_36;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s122 ");
  start_t_13 = mysecond ();
  i_15 = n1_14(D) + -1;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                8
  # nl_30 = PHI <0(2), nl_21(8)>
  # ivtmp_31 = PHI <10000(2), ivtmp_36(8)>
  if (i_15 <= 31999)
    goto <bb 7>; [89.00%]
  else
    goto <bb 5>; [11.00%]
;;    succ:       7
;;                5

;;   basic block 7, loop depth 1
;;    pred:       3
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       7
;;                9
  # k_9 = PHI <0(7), k_16(9)>
  # i_39 = PHI <i_15(7), i_19(9)>
  k_16 = k_9 + 1;
  _1 = a[i_39];
  _2 = 32000 - k_16;
  _3 = b[_2];
  _4 = _1 + _3;
  a[i_39] = _4;
  i_19 = n3_18(D) + i_39;
  if (i_19 <= 31999)
    goto <bb 9>; [89.00%]
  else
    goto <bb 5>; [11.00%]
;;    succ:       9
;;                5

;;   basic block 9, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 1
;;    pred:       3
;;                4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_30 + 1;
  ivtmp_36 = ivtmp_31 - 1;
  if (ivtmp_36 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       8
;;                6

;;   basic block 8, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_13;
  printf ("S122\t %.3f \t\t", clock_dif_24);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s123 (s123, funcdef_no=577, decl_uid=8676, cgraph_uid=577, symbol_order=598)

s123 ()
{
  int i;
  int nl;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_45;
  unsigned int ivtmp_46;
  unsigned int ivtmp_50;
  unsigned int ivtmp_51;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s123 ");
  start_t_18 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # j_38 = PHI <-1(7), j_8(10)>
  # i_40 = PHI <0(7), i_23(10)>
  # ivtmp_51 = PHI <16000(7), ivtmp_50(10)>
  j_19 = j_38 + 1;
  _1 = b[i_40];
  _2 = d[i_40];
  _3 = e[i_40];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[j_19] = _5;
  _6 = c[i_40];
  if (_6 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  j_21 = j_38 + 2;
  _7 = _4 + _6;
  a[j_21] = _7;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  # j_8 = PHI <j_21(4), j_19(3)>
  i_23 = i_40 + 1;
  ivtmp_50 = ivtmp_51 - 1;
  if (ivtmp_50 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_25 = nl_39 + 1;
  ivtmp_45 = ivtmp_46 - 1;
  if (ivtmp_45 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_39 = PHI <0(2), nl_25(9)>
  # ivtmp_46 = PHI <10000(2), ivtmp_45(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_18;
  printf ("S123\t %.3f \t\t", clock_dif_28);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s124 (s124, funcdef_no=578, decl_uid=8690, cgraph_uid=578, symbol_order=599)

s124 ()
{
  int i;
  int nl;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _5;
  float _6;
  float _10;
  unsigned int ivtmp_46;
  unsigned int ivtmp_47;
  float pretmp_48;
  float pretmp_49;
  float _50;
  int _51;
  unsigned int ivtmp_52;
  unsigned int ivtmp_53;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s124 ");
  start_t_21 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 11, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                11
  # j_41 = PHI <-1(8), _51(11)>
  # i_43 = PHI <0(8), i_26(11)>
  # ivtmp_53 = PHI <32000(8), ivtmp_52(11)>
  _1 = b[i_43];
  pretmp_48 = d[i_43];
  pretmp_49 = e[i_43];
  _50 = pretmp_48 * pretmp_49;
  _51 = j_41 + 1;
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _5 = _1 + _50;
  a[_51] = _5;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       3
  _6 = c[i_43];
  _10 = _6 + _50;
  a[_51] = _10;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       4
;;                5
  i_26 = i_43 + 1;
  ivtmp_52 = ivtmp_53 - 1;
  if (ivtmp_52 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_28 = nl_42 + 1;
  ivtmp_46 = ivtmp_47 - 1;
  if (ivtmp_46 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                10
  # nl_42 = PHI <0(2), nl_28(10)>
  # ivtmp_47 = PHI <10000(2), ivtmp_46(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_30 = mysecond ();
  clock_dif_31 = end_t_30 - start_t_21;
  printf ("S124\t %.3f \t\t", clock_dif_31);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s125 (s125, funcdef_no=579, decl_uid=8704, cgraph_uid=579, symbol_order=600)

Merging blocks 5 and 12
s125 ()
{
  vector(4) float * vectp_array.1239;
  vector(4) float * vectp_array.1238;
  vector(4) float vect__5.1237;
  vector(4) float vect__4.1236;
  vector(4) float vect__3.1235;
  vector(4) float * vectp_cc.1234;
  vector(4) float * vectp_cc.1233;
  vector(4) float vect__2.1232;
  vector(4) float * vectp_bb.1231;
  vector(4) float * vectp_bb.1230;
  vector(4) float vect__1.1229;
  vector(4) float * vectp_aa.1228;
  vector(4) float * vectp_aa.1227;
  int i;
  int D.15907;
  int j;
  int i;
  int nl;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  sizetype _6;
  sizetype _13;
  sizetype _15;
  sizetype _34;
  sizetype _35;
  sizetype _44;
  sizetype _45;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;
  sizetype _55;
  sizetype _56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  unsigned int ivtmp_59;
  unsigned int ivtmp_60;
  unsigned int ivtmp_63;
  unsigned int ivtmp_64;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s125 ");
  start_t_17 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       11
;;                5
  # k_38 = PHI <k_19(11), k_39(5)>
  # j_41 = PHI <j_21(11), 0(5)>
  # ivtmp_60 = PHI <ivtmp_59(11), 256(5)>
  # vectp_aa.1227_43 = PHI <vectp_aa.1227_42(11), vectp_aa.1228_46(5)>
  # vectp_bb.1230_33 = PHI <vectp_bb.1230_32(11), vectp_bb.1231_36(5)>
  # vectp_cc.1233_12 = PHI <vectp_cc.1233_11(11), vectp_cc.1234_18(5)>
  # vectp_array.1238_54 = PHI <vectp_array.1238_53(11), vectp_array.1239_7(5)>
  # ivtmp_63 = PHI <ivtmp_64(11), 0(5)>
  k_19 = k_38 + 1;
  vect__1.1229_37 = MEM[(float *)vectp_aa.1227_43];
  _1 = aa[i_40][j_41];
  vect__2.1232_31 = MEM[(float *)vectp_bb.1230_33];
  _2 = bb[i_40][j_41];
  vect__3.1235_10 = MEM[(float *)vectp_cc.1233_12];
  _3 = cc[i_40][j_41];
  vect__4.1236_9 = vect__2.1232_31 * vect__3.1235_10;
  _4 = _2 * _3;
  vect__5.1237_8 = vect__1.1229_37 + vect__4.1236_9;
  _5 = _1 + _4;
  MEM[(float *)vectp_array.1238_54] = vect__5.1237_8;
  j_21 = j_41 + 1;
  ivtmp_59 = ivtmp_60 - 1;
  vectp_aa.1227_42 = vectp_aa.1227_43 + 16;
  vectp_bb.1230_32 = vectp_bb.1230_33 + 16;
  vectp_cc.1233_11 = vectp_cc.1233_12 + 16;
  vectp_array.1238_53 = vectp_array.1238_54 + 16;
  ivtmp_64 = ivtmp_63 + 1;
  if (ivtmp_64 < 64)
    goto <bb 11>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  k_61 = k_39 + 256;
  i_22 = i_40 + 1;
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # k_39 = PHI <-1(7), k_61(10)>
  # i_40 = PHI <0(7), i_22(10)>
  # ivtmp_58 = PHI <256(7), ivtmp_57(10)>
  _45 = (sizetype) i_40;
  _44 = _45 * 1024;
  vectp_aa.1228_46 = &aa + _44;
  _35 = (sizetype) i_40;
  _34 = _35 * 1024;
  vectp_bb.1231_36 = &bb + _34;
  _15 = (sizetype) i_40;
  _13 = _15 * 1024;
  vectp_cc.1234_18 = &cc + _13;
  _6 = (sizetype) k_39;
  _56 = _6 + 1;
  _55 = _56 * 4;
  vectp_array.1239_7 = &array + _55;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_47 + 1;
  ivtmp_51 = ivtmp_52 - 1;
  if (ivtmp_51 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_47 = PHI <0(2), nl_24(9)>
  # ivtmp_52 = PHI <3900(2), ivtmp_51(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_17;
  printf ("S125\t %.3f \t\t", clock_dif_27);
  check (0);
  return 0;
;;    succ:       EXIT

}



;; Function s126 (s126, funcdef_no=580, decl_uid=8722, cgraph_uid=580, symbol_order=601)

s126 ()
{
  int j;
  int i;
  int nl;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  int _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_61;
  unsigned int ivtmp_66;
  unsigned int ivtmp_69;
  unsigned int ivtmp_70;
  unsigned int ivtmp_71;
  unsigned int ivtmp_72;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s126 ");
  start_t_19 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # k_44 = PHI <k_45(5), k_22(11)>
  # j_48 = PHI <1(5), j_23(11)>
  # ivtmp_72 = PHI <255(5), ivtmp_71(11)>
  _1 = j_48 + -1;
  _2 = bb[_1][i_47];
  _3 = k_44 + -1;
  _4 = array[_3];
  _5 = cc[j_48][i_47];
  _6 = _4 * _5;
  _7 = _2 + _6;
  bb[j_48][i_47] = _7;
  k_22 = k_44 + 1;
  j_23 = j_48 + 1;
  ivtmp_71 = ivtmp_72 - 1;
  if (ivtmp_71 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  k_73 = k_45 + 254;
  k_24 = k_73 + 2;
  i_25 = i_47 + 1;
  ivtmp_69 = ivtmp_70 - 1;
  if (ivtmp_69 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # k_45 = PHI <1(7), k_24(10)>
  # i_47 = PHI <0(7), i_25(10)>
  # ivtmp_70 = PHI <256(7), ivtmp_69(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_27 = nl_46 + 1;
  ivtmp_61 = ivtmp_66 - 1;
  if (ivtmp_61 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_46 = PHI <0(2), nl_27(9)>
  # ivtmp_66 = PHI <390(2), ivtmp_61(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_29 = mysecond ();
  clock_dif_30 = end_t_29 - start_t_19;
  printf ("S126\t %.3f \t\t", clock_dif_30);
  check (22);
  return 0;
;;    succ:       EXIT

}



;; Function s127 (s127, funcdef_no=581, decl_uid=8740, cgraph_uid=581, symbol_order=602)

Merging blocks 5 and 9
s127 ()
{
  vector(4) float * vectp_a.1326;
  vector(4) float * vectp_a.1325;
  vector(4) float vect__8.1324;
  vector(4) float vect__7.1323;
  vector(4) float vect__6.1322;
  vector(4) float * vectp_e.1321;
  vector(4) float * vectp_e.1320;
  vector(4) float vect__5.1319;
  vector(4) float vect__4.1318;
  vector(4) float vect__3.1317;
  vector(4) float * vectp_d.1316;
  vector(4) float * vectp_d.1315;
  vector(4) float vect__2.1314;
  vector(4) float * vectp_c.1313;
  vector(4) float * vectp_c.1312;
  vector(4) float vect__1.1311;
  vector(4) float * vectp_b.1310;
  vector(4) float * vectp_b.1309;
  int i;
  int D.15998;
  int i;
  int nl;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  unsigned int ivtmp_10;
  unsigned int ivtmp_11;
  vector(4) float vect_inter_low_30;
  vector(4) float vect_inter_high_31;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;
  unsigned int ivtmp_63;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s127 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # j_35 = PHI <j_20(8), -1(5)>
  # i_36 = PHI <i_22(8), 0(5)>
  # ivtmp_63 = PHI <ivtmp_62(8), 16000(5)>
  # vectp_b.1309_59 = PHI <vectp_b.1309_58(8), &b(5)>
  # vectp_c.1312_52 = PHI <vectp_c.1312_51(8), &c(5)>
  # vectp_d.1315_48 = PHI <vectp_d.1315_47(8), &d(5)>
  # vectp_e.1320_41 = PHI <vectp_e.1320_40(8), &e(5)>
  # vectp_a.1325_33 = PHI <vectp_a.1325_32(8), &a(5)>
  # ivtmp_11 = PHI <ivtmp_10(8), 0(5)>
  j_18 = j_35 + 1;
  vect__1.1311_53 = MEM[(float *)vectp_b.1309_59];
  _1 = b[i_36];
  vect__2.1314_49 = MEM[(float *)vectp_c.1312_52];
  _2 = c[i_36];
  vect__3.1317_44 = MEM[(float *)vectp_d.1315_48];
  _3 = d[i_36];
  vect__4.1318_43 = vect__2.1314_49 * vect__3.1317_44;
  _4 = _2 * _3;
  vect__5.1319_42 = vect__1.1311_53 + vect__4.1318_43;
  _5 = _1 + _4;
  j_20 = j_35 + 2;
  vect__6.1322_39 = MEM[(float *)vectp_e.1320_41];
  _6 = e[i_36];
  vect__7.1323_38 = vect__3.1317_44 * vect__6.1322_39;
  _7 = _3 * _6;
  vect__8.1324_34 = vect__1.1311_53 + vect__7.1323_38;
  _8 = _1 + _7;
  vect_inter_high_31 = VEC_PERM_EXPR <vect__5.1319_42, vect__8.1324_34, { 0, 4, 1, 5 }>;
  vect_inter_low_30 = VEC_PERM_EXPR <vect__5.1319_42, vect__8.1324_34, { 2, 6, 3, 7 }>;
  MEM[(float *)vectp_a.1325_33] = vect_inter_high_31;
  vectp_a.1325_13 = vectp_a.1325_33 + 16;
  MEM[(float *)vectp_a.1325_13] = vect_inter_low_30;
  i_22 = i_36 + 1;
  ivtmp_62 = ivtmp_63 - 1;
  vectp_b.1309_58 = vectp_b.1309_59 + 16;
  vectp_c.1312_51 = vectp_c.1312_52 + 16;
  vectp_d.1315_47 = vectp_d.1315_48 + 16;
  vectp_e.1320_40 = vectp_e.1320_41 + 16;
  vectp_a.1325_32 = vectp_a.1325_13 + 16;
  ivtmp_10 = ivtmp_11 + 1;
  if (ivtmp_10 < 4000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_45 + 1;
  ivtmp_60 = ivtmp_61 - 1;
  if (ivtmp_60 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_45 = PHI <0(2), nl_24(7)>
  # ivtmp_61 = PHI <20000(2), ivtmp_60(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_17;
  printf ("S127\t %.3f \t\t", clock_dif_27);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s128 (s128, funcdef_no=582, decl_uid=8754, cgraph_uid=582, symbol_order=603)

Merging blocks 5 and 9
s128 ()
{
  vector(4) float vect__5.1362;
  vector(4) float vect__4.1361;
  vector(4) float vect__4.1360;
  vector(4) float * vectp_c.1359;
  vector(4) float * vectp_c.1358;
  vector(4) float * vectp_a.1357;
  vector(4) float * vectp_a.1356;
  vector(4) float vect__3.1355;
  vector(4) float vect__2.1354;
  vector(4) float * vectp_d.1353;
  vector(4) float * vectp_d.1352;
  vector(4) float vect__1.1351;
  vector(4) float vect__1.1350;
  vector(4) float * vectp_b.1349;
  vector(4) float * vectp_b.1348;
  int i;
  int D.16043;
  int i;
  int nl;
  int k;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  vector(4) float vect_perm_odd_29;
  vector(4) float vect_perm_even_30;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_44;
  vector(4) float vect_perm_even_50;
  vector(4) float vect_perm_odd_51;
  float[32000] * ivtmp_53;
  float[32000] * ivtmp_54;
  float _55;
  float[32000] * ivtmp_57;
  float _58;
  float[32000] * ivtmp_60;
  float _61;
  float[32000] * ivtmp_63;
  float _64;
  float[32000] * ivtmp_66;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s128 ");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # j_32 = PHI <j_17(8), -1(5)>
  # i_33 = PHI <i_19(8), 0(5)>
  # ivtmp_44 = PHI <ivtmp_41(8), 16000(5)>
  # vectp_b.1348_38 = PHI <vectp_b.1348_37(8), &b(5)>
  # vectp_d.1352_28 = PHI <vectp_d.1352_10(8), &d(5)>
  # vectp_a.1356_7 = PHI <vectp_a.1356_6(8), &a(5)>
  # vectp_c.1358_45 = PHI <vectp_c.1358_27(8), &c(5)>
  # ivtmp_53 = PHI <ivtmp_54(8), &b(5)>
  # ivtmp_67 = PHI <ivtmp_68(8), 0(5)>
  k_15 = j_32 + 1;
  vect__1.1350_36 = MEM[(float *)vectp_b.1348_38];
  vectp_b.1348_35 = vectp_b.1348_38 + 16;
  vect__1.1351_31 = MEM[(float *)vectp_b.1348_35];
  vect_perm_even_30 = VEC_PERM_EXPR <vect__1.1350_36, vect__1.1351_31, { 0, 2, 4, 6 }>;
  vect_perm_odd_29 = VEC_PERM_EXPR <vect__1.1350_36, vect__1.1351_31, { 1, 3, 5, 7 }>;
  _1 = b[k_15];
  vect__2.1354_9 = MEM[(float *)vectp_d.1352_28];
  _2 = d[i_33];
  vect__3.1355_8 = vect_perm_even_30 - vect__2.1354_9;
  _3 = _1 - _2;
  MEM[(float *)vectp_a.1356_7] = vect__3.1355_8;
  j_17 = j_32 + 2;
  vect__4.1360_12 = MEM[(float *)vectp_c.1358_45];
  vectp_c.1358_48 = vectp_c.1358_45 + 16;
  vect__4.1361_49 = MEM[(float *)vectp_c.1358_48];
  vect_perm_even_50 = VEC_PERM_EXPR <vect__4.1360_12, vect__4.1361_49, { 0, 2, 4, 6 }>;
  vect_perm_odd_51 = VEC_PERM_EXPR <vect__4.1360_12, vect__4.1361_49, { 1, 3, 5, 7 }>;
  _4 = c[k_15];
  vect__5.1362_52 = vect__3.1355_8 + vect_perm_even_50;
  _5 = _3 + _4;
  _55 = BIT_FIELD_REF <vect__5.1362_52, 32, 0>;
  MEM[(float *)ivtmp_53] = _55;
  ivtmp_57 = ivtmp_53 + 8;
  _58 = BIT_FIELD_REF <vect__5.1362_52, 32, 32>;
  MEM[(float *)ivtmp_57] = _58;
  ivtmp_60 = ivtmp_57 + 8;
  _61 = BIT_FIELD_REF <vect__5.1362_52, 32, 64>;
  MEM[(float *)ivtmp_60] = _61;
  ivtmp_63 = ivtmp_60 + 8;
  _64 = BIT_FIELD_REF <vect__5.1362_52, 32, 96>;
  MEM[(float *)ivtmp_63] = _64;
  ivtmp_66 = ivtmp_63 + 8;
  i_19 = i_33 + 1;
  ivtmp_41 = ivtmp_44 - 1;
  vectp_b.1348_37 = vectp_b.1348_35 + 16;
  vectp_d.1352_10 = vectp_d.1352_28 + 16;
  vectp_a.1356_6 = vectp_a.1356_7 + 16;
  vectp_c.1358_27 = vectp_c.1358_48 + 16;
  ivtmp_54 = ivtmp_53 + 32;
  ivtmp_68 = ivtmp_67 + 1;
  if (ivtmp_68 < 4000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_21 = nl_42 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  if (ivtmp_39 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_42 = PHI <0(2), nl_21(7)>
  # ivtmp_40 = PHI <20000(2), ivtmp_39(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_14;
  printf ("S128\t %.3f \t\t", clock_dif_24);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s131 (s131, funcdef_no=583, decl_uid=8769, cgraph_uid=583, symbol_order=604)

Removing basic block 9
Merging blocks 5 and 13
s131 ()
{
  vector(4) float * vectp_a.1391;
  vector(4) float * vectp_a.1390;
  vector(4) float vect__4.1389;
  vector(4) float vect__3.1388;
  vector(4) float * vectp_b.1387;
  vector(4) float * vectp_b.1386;
  vector(4) float vect__2.1385;
  vector(4) float * vectp_a.1384;
  vector(4) float * vectp_a.1383;
  unsigned int tmp.1382;
  int tmp.1381;
  int i;
  int D.16082;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  int _5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  float _28;
  unsigned int ivtmp_30;
  float _33;
  unsigned int ivtmp_34;
  unsigned int ivtmp_35;
  float _37;
  unsigned int ivtmp_47;
  unsigned int ivtmp_48;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s131 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_8 = PHI <31996(10), _5(12)>
  # ivtmp_6 = PHI <3(10), ivtmp_30(12)>
  _5 = i_8 + 1;
  _33 = a[_5];
  _28 = b[i_8];
  _37 = _33 + _28;
  a[i_8] = _37;
  ivtmp_30 = ivtmp_6 - 1;
  if (ivtmp_30 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_26 = PHI <_1(8), 0(5)>
  # ivtmp_35 = PHI <ivtmp_34(8), 31999(5)>
  # vectp_a.1383_32 = PHI <vectp_a.1383_39(8), vectp_a.1384_31(5)>
  # vectp_b.1386_40 = PHI <vectp_b.1386_10(8), &b(5)>
  # vectp_a.1390_44 = PHI <vectp_a.1390_45(8), &a(5)>
  # ivtmp_47 = PHI <ivtmp_48(8), 0(5)>
  _1 = i_26 + 1;
  vect__2.1385_21 = MEM[(float *)vectp_a.1383_32];
  _2 = a[_1];
  vect__3.1388_42 = MEM[(float *)vectp_b.1386_40];
  _3 = b[i_26];
  vect__4.1389_43 = vect__2.1385_21 + vect__3.1388_42;
  _4 = _2 + _3;
  MEM[(float *)vectp_a.1390_44] = vect__4.1389_43;
  ivtmp_34 = ivtmp_35 - 1;
  vectp_a.1383_39 = vectp_a.1383_32 + 16;
  vectp_b.1386_10 = vectp_b.1386_40 + 16;
  vectp_a.1390_45 = vectp_a.1390_44 + 16;
  ivtmp_48 = ivtmp_47 + 1;
  if (ivtmp_48 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_23 = ivtmp_24 - 1;
  if (ivtmp_23 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_24 = PHI <50000(2), ivtmp_23(7)>
  vectp_a.1384_31 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_12;
  printf ("S131\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s132 (s132, funcdef_no=584, decl_uid=8783, cgraph_uid=584, symbol_order=605)

Removing basic block 9
Merging blocks 5 and 13
s132 ()
{
  vector(4) float * vectp_aa.1418;
  vector(4) float * vectp_aa.1417;
  vector(4) float vect__6.1416;
  vector(4) float vect__5.1415;
  vector(4) float vect__3.1414;
  vector(4) float * vectp_b.1413;
  vector(4) float * vectp_b.1412;
  vector(4) float vect__2.1411;
  vector(4) float * vectp_aa.1410;
  vector(4) float * vectp_aa.1409;
  unsigned int tmp.1408;
  int tmp.1407;
  int i;
  int D.16114;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_9;
  float _24;
  float _25;
  float _26;
  float _27;
  int _31;
  unsigned int ivtmp_32;
  unsigned int ivtmp_38;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_43;
  vector(4) float vect_cst__49;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s132 ");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_36 = PHI <253(10), i_10(12)>
  # ivtmp_32 = PHI <3(10), ivtmp_9(12)>
  _31 = i_36 + -1;
  _27 = aa[1][_31];
  _26 = b[i_36];
  _25 = _26 * _4;
  _24 = _27 + _25;
  aa[0][i_36] = _24;
  i_10 = i_36 + 1;
  ivtmp_9 = ivtmp_32 - 1;
  if (ivtmp_9 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_29 = PHI <i_16(8), 1(5)>
  # ivtmp_43 = PHI <ivtmp_41(8), 255(5)>
  # vectp_aa.1409_42 = PHI <vectp_aa.1409_35(8), vectp_aa.1410_7(5)>
  # vectp_b.1412_46 = PHI <vectp_b.1412_47(8), vectp_b.1413_45(5)>
  # vectp_aa.1417_53 = PHI <vectp_aa.1417_54(8), vectp_aa.1418_52(5)>
  # ivtmp_56 = PHI <ivtmp_57(8), 0(5)>
  _1 = i_29 + -1;
  vect__2.1411_34 = MEM[(float *)vectp_aa.1409_42];
  _2 = aa[1][_1];
  vect__3.1414_48 = MEM[(float *)vectp_b.1412_46];
  _3 = b[i_29];
  vect__5.1415_50 = vect__3.1414_48 * vect_cst__49;
  _5 = _3 * _4;
  vect__6.1416_51 = vect__2.1411_34 + vect__5.1415_50;
  _6 = _2 + _5;
  MEM[(float *)vectp_aa.1417_53] = vect__6.1416_51;
  i_16 = i_29 + 1;
  ivtmp_41 = ivtmp_43 - 1;
  vectp_aa.1409_35 = vectp_aa.1409_42 + 16;
  vectp_b.1412_47 = vectp_b.1412_46 + 16;
  vectp_aa.1417_54 = vectp_aa.1417_53 + 16;
  ivtmp_57 = ivtmp_56 + 1;
  if (ivtmp_57 < 63)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_38 = ivtmp_40 - 1;
  if (ivtmp_38 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_40 = PHI <4000000(2), ivtmp_38(7)>
  _4 = c[1];
  vectp_aa.1410_7 = &aa + 1024;
  vectp_b.1413_45 = &b + 4;
  vect_cst__49 = {_4, _4, _4, _4};
  vectp_aa.1418_52 = &aa + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S132\t %.3f \t\t", clock_dif_21);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s141 (s141, funcdef_no=585, decl_uid=8799, cgraph_uid=585, symbol_order=606)

s141 ()
{
  int i;
  int D.16150;
  int j;
  int i;
  int nl;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  int _2;
  int _3;
  int _4;
  float _5;
  float _6;
  float _7;
  int _8;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;
  unsigned int ivtmp_48;
  unsigned int ivtmp_56;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s141 ");
  start_t_19 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_38 = PHI <0(7), _1(10)>
  # ivtmp_56 = PHI <256(7), ivtmp_48(10)>
  _1 = i_38 + 1;
  _2 = _1 * i_38;
  _3 = _2 >> 1;
  _4 = _1 + _3;
  k_20 = _4 + -1;
;;    succ:       4

;;   basic block 4, loop depth 3
;;    pred:       3
;;                11
  # k_37 = PHI <k_20(3), k_22(11)>
  # j_39 = PHI <i_38(3), _8(11)>
  _5 = array[k_37];
  _6 = bb[j_39][i_38];
  _7 = _5 + _6;
  array[k_37] = _7;
  _8 = j_39 + 1;
  k_22 = _8 + k_37;
  if (_8 != 256)
    goto <bb 11>; [87.64%]
  else
    goto <bb 5>; [12.36%]
;;    succ:       11
;;                5

;;   basic block 11, loop depth 3
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 2
;;    pred:       4
  ivtmp_48 = ivtmp_56 - 1;
  if (ivtmp_48 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_46 + 1;
  ivtmp_44 = ivtmp_45 - 1;
  if (ivtmp_44 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_46 = PHI <0(2), nl_24(9)>
  # ivtmp_45 = PHI <7800(2), ivtmp_44(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_19;
  printf ("S141\t %.3f \t\t", clock_dif_27);
  check (0);
  return 0;
;;    succ:       EXIT

}



;; Function s151s (s151s, funcdef_no=586, decl_uid=8820, cgraph_uid=586, symbol_order=607)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_34 -> { _2 }
i_35 -> { i_23 }
.MEM_36 -> { .MEM_24 }
_37 -> { _1 }
ivtmp_38 -> { ivtmp_43 }
_44 -> { _3 }
_45 -> { _4 }
_46 -> { _5 }
_47 -> { _6 }
_48 -> { _7 }
_49 -> { _8 }
_50 -> { _9 }
_51 -> { _10 }
_52 -> { _11 }
.MEM_53 -> { .MEM_18 }
i_54 -> { i_19 }
ivtmp_55 -> { ivtmp_42 }
.MEM_56 -> { .MEM_18 }
Incremental SSA update started at block: 8
Number of blocks in CFG: 12
Number of blocks to update: 8 ( 67%)


Removing basic block 12
Merging blocks 2 and 8
Removing basic block 9
s151s (float * a, float * b, int m)
{
  vector(4) float * vectp_a.1466;
  vector(4) float * vectp_a.1465;
  vector(4) float vect__11.1464;
  vector(4) float vect__9.1463;
  vector(4) float * vectp_b.1462;
  vector(4) float * vectp_b.1461;
  vector(4) float vect__5.1460;
  vector(4) float * vectp.1459;
  vector(4) float * vectp.1458;
  unsigned int tmp.1457;
  int tmp.1456;
  int i;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  float * _4;
  float _5;
  long unsigned int _6;
  long unsigned int _7;
  float * _8;
  float _9;
  float * _10;
  float _11;
  _Bool _12;
  _Bool _13;
  float * _20;
  _Bool _21;
  float * _22;
  _Bool _25;
  _Bool _26;
  float * _27;
  long unsigned int _28;
  long unsigned int _29;
  float * _30;
  _Bool _31;
  ssizetype _32;
  sizetype _33;
  long unsigned int _34;
  int _37;
  unsigned int ivtmp_38;
  _Bool _39;
  sizetype _40;
  sizetype _41;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  long unsigned int _44;
  float * _45;
  float _46;
  long unsigned int _47;
  long unsigned int _48;
  float * _49;
  float _50;
  float * _51;
  float _52;
  unsigned int ivtmp_55;
  unsigned int ivtmp_60;
  int _61;
  long unsigned int _62;
  long unsigned int _63;
  float * _64;
  float _65;
  long unsigned int _66;
  long unsigned int _67;
  float * _68;
  float _69;
  float * _70;
  float _71;
  unsigned int ivtmp_74;
  long unsigned int _77;
  long unsigned int _78;
  unsigned int ivtmp_89;
  unsigned int ivtmp_90;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _41 = (sizetype) m_15(D);
  _40 = _41 + 4;
  _33 = _40 * 4;
  _32 = (ssizetype) _33;
  _31 = _32 <= 0;
  _30 = a_16(D) + 16;
  _29 = (long unsigned int) m_15(D);
  _28 = _29 * 4;
  _27 = a_16(D) + _28;
  _26 = _27 >= _30;
  _25 = _26 | _31;
  _22 = a_16(D) + 16;
  _21 = b_17(D) >= _22;
  _20 = b_17(D) + 16;
  _13 = a_16(D) >= _20;
  _12 = _13 | _21;
  _39 = _12 & _25;
  if (_39 != 0)
    goto <bb 16>; [80.00%]
  else
    goto <bb 10>; [20.00%]
;;    succ:       10
;;                16

;;   basic block 16, loop depth 0
;;    pred:       2
  _77 = (long unsigned int) m_15(D);
  _78 = _77 * 4;
  vectp.1459_76 = a_16(D) + _78;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       5
;;                16
  # i_23 = PHI <i_19(5), 0(16)>
  # ivtmp_43 = PHI <ivtmp_42(5), 31999(16)>
  # vectp.1458_79 = PHI <vectp.1458_80(5), vectp.1459_76(16)>
  # vectp_b.1461_82 = PHI <vectp_b.1461_83(5), b_17(D)(16)>
  # vectp_a.1465_86 = PHI <vectp_a.1465_87(5), a_16(D)(16)>
  # ivtmp_89 = PHI <ivtmp_90(5), 0(16)>
  _1 = m_15(D) + i_23;
  _2 = (long unsigned int) _1;
  _3 = _2 * 4;
  _4 = a_16(D) + _3;
  vect__5.1460_81 = MEM[(float *)vectp.1458_79];
  _5 = *_4;
  _6 = (long unsigned int) i_23;
  _7 = _6 * 4;
  _8 = b_17(D) + _7;
  vect__9.1463_84 = MEM[(float *)vectp_b.1461_82];
  _9 = *_8;
  _10 = a_16(D) + _7;
  vect__11.1464_85 = vect__5.1460_81 + vect__9.1463_84;
  _11 = _5 + _9;
  MEM[(float *)vectp_a.1465_86] = vect__11.1464_85;
  i_19 = i_23 + 1;
  ivtmp_42 = ivtmp_43 - 1;
  vectp.1458_80 = vectp.1458_79 + 16;
  vectp_b.1461_83 = vectp_b.1461_82 + 16;
  vectp_a.1465_87 = vectp_a.1465_86 + 16;
  ivtmp_90 = ivtmp_89 + 1;
  if (ivtmp_90 < 7999)
    goto <bb 5>; [96.00%]
  else
    goto <bb 13>; [4.00%]
;;    succ:       5
;;                13

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 13, loop depth 0
;;    pred:       3
;;    succ:       14

;;   basic block 14, loop depth 1
;;    pred:       13
;;                15
  # i_58 = PHI <31996(13), i_73(15)>
  # ivtmp_60 = PHI <3(13), ivtmp_74(15)>
  _61 = m_15(D) + i_58;
  _62 = (long unsigned int) _61;
  _63 = _62 * 4;
  _64 = a_16(D) + _63;
  _65 = *_64;
  _66 = (long unsigned int) i_58;
  _67 = _66 * 4;
  _68 = b_17(D) + _67;
  _69 = *_68;
  _70 = a_16(D) + _67;
  _71 = _65 + _69;
  *_70 = _71;
  i_73 = i_58 + 1;
  ivtmp_74 = ivtmp_60 - 1;
  if (ivtmp_74 != 0)
    goto <bb 15>; [98.99%]
  else
    goto <bb 11>; [1.01%]
;;    succ:       15
;;                11

;;   basic block 15, loop depth 1
;;    pred:       14
  goto <bb 14>; [100.00%]
;;    succ:       14

;;   basic block 10, loop depth 0
;;    pred:       2
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       7
;;                10
  # i_35 = PHI <i_54(7), 0(10)>
  # ivtmp_38 = PHI <ivtmp_55(7), 31999(10)>
  _37 = m_15(D) + i_35;
  _34 = (long unsigned int) _37;
  _44 = _34 * 4;
  _45 = a_16(D) + _44;
  _46 = *_45;
  _47 = (long unsigned int) i_35;
  _48 = _47 * 4;
  _49 = b_17(D) + _48;
  _50 = *_49;
  _51 = a_16(D) + _48;
  _52 = _46 + _50;
  *_51 = _52;
  i_54 = i_35 + 1;
  ivtmp_55 = ivtmp_38 - 1;
  if (ivtmp_55 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       7
;;                4

;;   basic block 7, loop depth 1
;;    pred:       6
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 11, loop depth 0
;;    pred:       14
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       6
;;                11
  return 0;
;;    succ:       EXIT

}



;; Function s151 (s151, funcdef_no=587, decl_uid=8826, cgraph_uid=587, symbol_order=608)

Removing basic block 9
Merging blocks 5 and 13
s151 ()
{
  vector(4) float * vectp_a.1497;
  vector(4) float * vectp_a.1496;
  vector(4) float vect__25.1495;
  vector(4) float vect__23.1494;
  vector(4) float * vectp_b.1493;
  vector(4) float * vectp_b.1492;
  vector(4) float vect__19.1491;
  vector(4) float * vectp_a.1490;
  vector(4) float * vectp_a.1489;
  unsigned int tmp.1488;
  int tmp.1487;
  int i;
  int D.16208;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float * _2;
  long unsigned int _4;
  long unsigned int _14;
  int _15;
  long unsigned int _16;
  long unsigned int _17;
  float * _18;
  float _19;
  long unsigned int _20;
  long unsigned int _21;
  float * _22;
  float _23;
  float * _24;
  float _25;
  float _26;
  float * _29;
  long unsigned int _30;
  long unsigned int _31;
  int _35;
  unsigned int ivtmp_36;
  float * _38;
  float _39;
  unsigned int ivtmp_42;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;
  unsigned int ivtmp_47;
  unsigned int ivtmp_49;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s151 ");
  start_t_6 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_40 = PHI <31996(10), _35(12)>
  # ivtmp_36 = PHI <3(10), ivtmp_45(12)>
  _35 = i_40 + 1;
  _31 = (long unsigned int) _35;
  _30 = _31 * 4;
  _29 = &a + _30;
  _26 = *_29;
  _14 = (long unsigned int) i_40;
  _4 = _14 * 4;
  _2 = &b + _4;
  _1 = *_2;
  _38 = &a + _4;
  _39 = _26 + _1;
  *_38 = _39;
  ivtmp_45 = ivtmp_36 - 1;
  if (ivtmp_45 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_43 = PHI <_15(8), 0(5)>
  # ivtmp_49 = PHI <ivtmp_47(8), 31999(5)>
  # vectp_a.1489_51 = PHI <vectp_a.1489_52(8), vectp_a.1490_50(5)>
  # vectp_b.1492_54 = PHI <vectp_b.1492_55(8), &b(5)>
  # vectp_a.1496_58 = PHI <vectp_a.1496_59(8), &a(5)>
  # ivtmp_61 = PHI <ivtmp_62(8), 0(5)>
  _15 = i_43 + 1;
  _16 = (long unsigned int) _15;
  _17 = _16 * 4;
  _18 = &a + _17;
  vect__19.1491_53 = MEM[(float *)vectp_a.1489_51];
  _19 = *_18;
  _20 = (long unsigned int) i_43;
  _21 = _20 * 4;
  _22 = &b + _21;
  vect__23.1494_56 = MEM[(float *)vectp_b.1492_54];
  _23 = *_22;
  _24 = &a + _21;
  vect__25.1495_57 = vect__19.1491_53 + vect__23.1494_56;
  _25 = _19 + _23;
  MEM[(float *)vectp_a.1496_58] = vect__25.1495_57;
  ivtmp_47 = ivtmp_49 - 1;
  vectp_a.1489_52 = vectp_a.1489_51 + 16;
  vectp_b.1492_55 = vectp_b.1492_54 + 16;
  vectp_a.1496_59 = vectp_a.1496_58 + 16;
  ivtmp_62 = ivtmp_61 + 1;
  if (ivtmp_62 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_8 = nl_32 + 1;
  ivtmp_42 = ivtmp_44 - 1;
  if (ivtmp_42 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_8(7)>
  # ivtmp_44 = PHI <50000(2), ivtmp_42(7)>
  vectp_a.1490_50 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_10 = mysecond ();
  clock_dif_11 = end_t_10 - start_t_6;
  printf ("S151\t %.3f \t\t", clock_dif_11);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s152 (s152, funcdef_no=589, decl_uid=8841, cgraph_uid=589, symbol_order=610)

s152 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  long unsigned int _21;
  long unsigned int _22;
  float * _23;
  float _24;
  float * _25;
  float _26;
  float * _27;
  float _28;
  float _29;
  float _30;
  unsigned int ivtmp_53;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s152 ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_40 = PHI <0(5), i_13(8)>
  # ivtmp_56 = PHI <32000(5), ivtmp_55(8)>
  _1 = d[i_40];
  _2 = e[i_40];
  _3 = _1 * _2;
  b[i_40] = _3;
  _21 = (long unsigned int) i_40;
  _22 = _21 * 4;
  _23 = &a + _22;
  _24 = *_23;
  _25 = &b + _22;
  _26 = *_25;
  _27 = &c + _22;
  _28 = *_27;
  _29 = _26 * _28;
  _30 = _24 + _29;
  *_23 = _30;
  i_13 = i_40 + 1;
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_39 + 1;
  ivtmp_53 = ivtmp_54 - 1;
  if (ivtmp_53 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_39 = PHI <0(2), nl_15(7)>
  # ivtmp_54 = PHI <10000(2), ivtmp_53(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("S152\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s161 (s161, funcdef_no=590, decl_uid=8854, cgraph_uid=590, symbol_order=611)

s161 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _4;
  float _5;
  float _6;
  float _7;
  float _9;
  float _11;
  unsigned int ivtmp_16;
  float pretmp_31;
  int _32;
  unsigned int ivtmp_34;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s161 ");
  start_t_20 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 11, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                11
  # i_38 = PHI <0(8), _32(11)>
  # ivtmp_36 = PHI <31999(8), ivtmp_35(11)>
  _1 = b[i_38];
  pretmp_31 = d[i_38];
  _32 = i_38 + 1;
  if (_1 < 0.0)
    goto <bb 4>; [41.00%]
  else
    goto <bb 5>; [59.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _7 = a[i_38];
  _9 = pretmp_31 * pretmp_31;
  _11 = _7 + _9;
  c[_32] = _11;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       3
  _2 = c[i_38];
  _4 = e[i_38];
  _5 = _4 * pretmp_31;
  _6 = _2 + _5;
  a[i_38] = _6;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                4
L10:
  ivtmp_35 = ivtmp_36 - 1;
  if (ivtmp_35 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_25 = nl_37 + 1;
  ivtmp_16 = ivtmp_34 - 1;
  if (ivtmp_16 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                10
  # nl_37 = PHI <0(2), nl_25(10)>
  # ivtmp_34 = PHI <5000(2), ivtmp_16(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_20;
  printf ("S161\t %.3f \t\t", clock_dif_28);
  check (13);
  return 0;
;;    succ:       EXIT

}



;; Function s1161 (s1161, funcdef_no=591, decl_uid=8869, cgraph_uid=591, symbol_order=612)

s1161 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _3;
  float _4;
  float _5;
  float _6;
  float _8;
  float _9;
  unsigned int ivtmp_14;
  float pretmp_29;
  unsigned int ivtmp_32;
  unsigned int ivtmp_33;
  unsigned int ivtmp_34;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s161 ");
  start_t_18 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 11, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                11
  # i_36 = PHI <0(8), i_21(11)>
  # ivtmp_34 = PHI <31999(8), ivtmp_33(11)>
  _1 = c[i_36];
  pretmp_29 = d[i_36];
  if (_1 < 0.0)
    goto <bb 4>; [41.00%]
  else
    goto <bb 5>; [59.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _6 = a[i_36];
  _8 = pretmp_29 * pretmp_29;
  _9 = _6 + _8;
  b[i_36] = _9;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       3
  _3 = e[i_36];
  _4 = _3 * pretmp_29;
  _5 = _1 + _4;
  a[i_36] = _5;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                4
L10:
  i_21 = i_36 + 1;
  ivtmp_33 = ivtmp_34 - 1;
  if (ivtmp_33 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_35 + 1;
  ivtmp_14 = ivtmp_32 - 1;
  if (ivtmp_14 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                10
  # nl_35 = PHI <0(2), nl_23(10)>
  # ivtmp_32 = PHI <10000(2), ivtmp_14(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_18;
  printf ("S1161\t %.3f \t\t", clock_dif_26);
  check (13);
  return 0;
;;    succ:       EXIT

}



;; Function s162 (s162, funcdef_no=592, decl_uid=8885, cgraph_uid=592, symbol_order=613)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_7 -> { _6 }
_8 -> { _5 }
_9 -> { _4 }
_11 -> { _3 }
_27 -> { _2 }
_28 -> { _1 }
ivtmp_29 -> { ivtmp_10 }
.MEM_30 -> { .MEM_32 }
i_34 -> { i_41 }
ivtmp_36 -> { ivtmp_44 }
i_42 -> { i_18 }
.MEM_43 -> { .MEM_17 }
Incremental SSA update started at block: 14
Number of blocks in CFG: 18
Number of blocks to update: 8 ( 44%)


Removing basic block 18
Removing basic block 7
Removing basic block 15
s162 (int k)
{
  vector(4) float * vectp_a.1580;
  vector(4) float * vectp_a.1579;
  vector(4) float vect__6.1578;
  vector(4) float vect__5.1577;
  vector(4) float vect__4.1576;
  vector(4) float * vectp_c.1575;
  vector(4) float * vectp_c.1574;
  vector(4) float vect__3.1573;
  vector(4) float * vectp_b.1572;
  vector(4) float * vectp_b.1571;
  vector(4) float vect__2.1570;
  vector(4) float * vectp_a.1569;
  vector(4) float * vectp_a.1568;
  unsigned int tmp.1567;
  int tmp.1566;
  int i;
  int D.16304;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_10;
  float _11;
  float _27;
  int _28;
  unsigned int ivtmp_29;
  unsigned int _35;
  unsigned int ivtmp_36;
  unsigned int _37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_44;
  unsigned int ivtmp_48;
  int _49;
  float _50;
  float _51;
  float _52;
  float _53;
  float _54;
  unsigned int ivtmp_57;
  sizetype _60;
  sizetype _61;
  unsigned int ivtmp_76;
  unsigned int ivtmp_77;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s162 ");
  start_t_15 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                8
  # nl_31 = PHI <0(2), nl_20(8)>
  # ivtmp_40 = PHI <10000(2), ivtmp_39(8)>
  if (k_16(D) > 0)
    goto <bb 14>; [34.74%]
  else
    goto <bb 5>; [65.26%]
;;    succ:       14
;;                5

;;   basic block 14, loop depth 1
;;    pred:       3
  _37 = (unsigned int) k_16(D);
  _35 = _37 + 3;
  if (_35 > 6)
    goto <bb 22>; [80.00%]
  else
    goto <bb 16>; [20.00%]
;;    succ:       16
;;                22

;;   basic block 22, loop depth 1
;;    pred:       14
  _60 = (sizetype) k_16(D);
  _61 = _60 * 4;
  vectp_a.1569_59 = &a + _61;
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       9
;;                22
  # i_41 = PHI <i_18(9), 0(22)>
  # ivtmp_10 = PHI <ivtmp_44(9), 31999(22)>
  # vectp_a.1568_62 = PHI <vectp_a.1568_63(9), vectp_a.1569_59(22)>
  # vectp_b.1571_65 = PHI <vectp_b.1571_66(9), &b(22)>
  # vectp_c.1574_68 = PHI <vectp_c.1574_69(9), &c(22)>
  # vectp_a.1579_73 = PHI <vectp_a.1579_74(9), &a(22)>
  # ivtmp_76 = PHI <ivtmp_77(9), 0(22)>
  _1 = k_16(D) + i_41;
  vect__2.1570_64 = MEM[(float *)vectp_a.1568_62];
  _2 = a[_1];
  vect__3.1573_67 = MEM[(float *)vectp_b.1571_65];
  _3 = b[i_41];
  vect__4.1576_70 = MEM[(float *)vectp_c.1574_68];
  _4 = c[i_41];
  vect__5.1577_71 = vect__3.1573_67 * vect__4.1576_70;
  _5 = _3 * _4;
  vect__6.1578_72 = vect__2.1570_64 + vect__5.1577_71;
  _6 = _2 + _5;
  MEM[(float *)vectp_a.1579_73] = vect__6.1578_72;
  i_18 = i_41 + 1;
  ivtmp_44 = ivtmp_10 - 1;
  vectp_a.1568_63 = vectp_a.1568_62 + 16;
  vectp_b.1571_66 = vectp_b.1571_65 + 16;
  vectp_c.1574_69 = vectp_c.1574_68 + 16;
  vectp_a.1579_74 = vectp_a.1579_73 + 16;
  ivtmp_77 = ivtmp_76 + 1;
  if (ivtmp_77 < 7999)
    goto <bb 9>; [96.00%]
  else
    goto <bb 19>; [4.00%]
;;    succ:       9
;;                19

;;   basic block 9, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 19, loop depth 1
;;    pred:       4
;;    succ:       20

;;   basic block 20, loop depth 2
;;    pred:       19
;;                21
  # i_13 = PHI <31996(19), i_56(21)>
  # ivtmp_48 = PHI <3(19), ivtmp_57(21)>
  _49 = k_16(D) + i_13;
  _50 = a[_49];
  _51 = b[i_13];
  _52 = c[i_13];
  _53 = _51 * _52;
  _54 = _50 + _53;
  a[i_13] = _54;
  i_56 = i_13 + 1;
  ivtmp_57 = ivtmp_48 - 1;
  if (ivtmp_57 != 0)
    goto <bb 21>; [98.99%]
  else
    goto <bb 17>; [1.01%]
;;    succ:       21
;;                17

;;   basic block 21, loop depth 2
;;    pred:       20
  goto <bb 20>; [100.00%]
;;    succ:       20

;;   basic block 16, loop depth 1
;;    pred:       14
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       13
;;                16
  # i_34 = PHI <i_42(13), 0(16)>
  # ivtmp_29 = PHI <ivtmp_36(13), 31999(16)>
  _28 = k_16(D) + i_34;
  _27 = a[_28];
  _11 = b[i_34];
  _9 = c[i_34];
  _8 = _11 * _9;
  _7 = _27 + _8;
  a[i_34] = _7;
  i_42 = i_34 + 1;
  ivtmp_36 = ivtmp_29 - 1;
  if (ivtmp_36 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 11>; [1.01%]
;;    succ:       13
;;                11

;;   basic block 13, loop depth 2
;;    pred:       12
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 17, loop depth 1
;;    pred:       20
;;    succ:       11

;;   basic block 11, loop depth 1
;;    pred:       12
;;                17
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       3
;;                11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_31 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  if (ivtmp_39 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       8
;;                6

;;   basic block 8, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_15;
  printf ("S162\t %.3f \t\t", clock_dif_23);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s171 (s171, funcdef_no=593, decl_uid=8899, cgraph_uid=593, symbol_order=614)

s171 (int inc)
{
  int i;
  int D.16353;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  unsigned int ivtmp_25;
  unsigned int ivtmp_26;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s171 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_28 = PHI <0(5), i_15(8)>
  # ivtmp_37 = PHI <32000(5), ivtmp_36(8)>
  _1 = inc_13(D) * i_28;
  _2 = a[_1];
  _3 = b[i_28];
  _4 = _2 + _3;
  a[_1] = _4;
  i_15 = i_28 + 1;
  ivtmp_36 = ivtmp_37 - 1;
  if (ivtmp_36 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_25 = ivtmp_26 - 1;
  if (ivtmp_25 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_26 = PHI <10000(2), ivtmp_25(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_12;
  printf ("S171\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s172 (s172, funcdef_no=594, decl_uid=8914, cgraph_uid=594, symbol_order=615)

s172 (int n1, int n3)
{
  int i;
  int D.16372;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_36;
  unsigned int ivtmp_39;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s172 ");
  start_t_11 = mysecond ();
  i_13 = n1_12(D) + -1;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                8
  # nl_27 = PHI <0(2), nl_18(8)>
  # ivtmp_36 = PHI <10000(2), ivtmp_39(8)>
  if (i_13 <= 31999)
    goto <bb 7>; [89.00%]
  else
    goto <bb 5>; [11.00%]
;;    succ:       7
;;                5

;;   basic block 7, loop depth 1
;;    pred:       3
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       7
;;                9
  # i_26 = PHI <i_13(7), i_16(9)>
  _1 = a[i_26];
  _2 = b[i_26];
  _3 = _1 + _2;
  a[i_26] = _3;
  i_16 = n3_15(D) + i_26;
  if (i_16 <= 31999)
    goto <bb 9>; [89.00%]
  else
    goto <bb 5>; [11.00%]
;;    succ:       9
;;                5

;;   basic block 9, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 1
;;    pred:       3
;;                4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_27 + 1;
  ivtmp_39 = ivtmp_36 - 1;
  if (ivtmp_39 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       8
;;                6

;;   basic block 8, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_11;
  printf ("S172\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s173 (s173, funcdef_no=595, decl_uid=8927, cgraph_uid=595, symbol_order=616)

Merging blocks 5 and 9
s173 ()
{
  vector(4) float * vectp_a.1649;
  vector(4) float * vectp_a.1648;
  vector(4) float vect__4.1647;
  vector(4) float vect__2.1646;
  vector(4) float * vectp_b.1645;
  vector(4) float * vectp_b.1644;
  vector(4) float vect__1.1643;
  vector(4) float * vectp_a.1642;
  vector(4) float * vectp_a.1641;
  int i;
  int D.16397;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_25;
  unsigned int ivtmp_32;
  unsigned int ivtmp_33;
  unsigned int ivtmp_36;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s173 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_27 = PHI <i_14(8), 0(5)>
  # ivtmp_36 = PHI <ivtmp_25(8), 16000(5)>
  # vectp_a.1641_8 = PHI <vectp_a.1641_7(8), &a(5)>
  # vectp_b.1644_5 = PHI <vectp_b.1644_35(8), &b(5)>
  # vectp_a.1648_30 = PHI <vectp_a.1648_31(8), vectp_a.1649_38(5)>
  # ivtmp_32 = PHI <ivtmp_33(8), 0(5)>
  vect__1.1643_6 = MEM[(float *)vectp_a.1641_8];
  _1 = a[i_27];
  vect__2.1646_34 = MEM[(float *)vectp_b.1644_5];
  _2 = b[i_27];
  _3 = i_27 + 16000;
  vect__4.1647_29 = vect__1.1643_6 + vect__2.1646_34;
  _4 = _1 + _2;
  MEM[(float *)vectp_a.1648_30] = vect__4.1647_29;
  i_14 = i_27 + 1;
  ivtmp_25 = ivtmp_36 - 1;
  vectp_a.1641_7 = vectp_a.1641_8 + 16;
  vectp_b.1644_35 = vectp_b.1644_5 + 16;
  vectp_a.1648_31 = vectp_a.1648_30 + 16;
  ivtmp_33 = ivtmp_32 + 1;
  if (ivtmp_33 < 4000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_26 + 1;
  ivtmp_23 = ivtmp_24 - 1;
  if (ivtmp_23 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_26 = PHI <0(2), nl_16(7)>
  # ivtmp_24 = PHI <100000(2), ivtmp_23(7)>
  vectp_a.1649_38 = &a + 64000;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_12;
  printf ("S173\t %.3f \t\t", clock_dif_19);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s174 (s174, funcdef_no=596, decl_uid=8942, cgraph_uid=596, symbol_order=617)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

i_23 -> { i_15 }
.MEM_31 -> { .MEM_8 }
_32 -> { _1 }
_33 -> { _3 }
_34 -> { _4 }
i_39 -> { i_26 }
_40 -> { _2 }
.MEM_41 -> { .MEM_14 }
Incremental SSA update started at block: 14
Number of blocks in CFG: 18
Number of blocks to update: 8 ( 44%)


Removing basic block 18
Removing basic block 7
Merging blocks 15 and 24
Merging blocks 22 and 17
s174 (int M)
{
  vector(4) float * vectp_a.1677;
  vector(4) float * vectp_a.1676;
  vector(4) float vect__4.1675;
  vector(4) float vect__2.1674;
  vector(4) float * vectp_b.1673;
  vector(4) float * vectp_b.1672;
  vector(4) float vect__1.1671;
  vector(4) float * vectp_a.1670;
  vector(4) float * vectp_a.1669;
  int tmp.1668;
  unsigned int niters_vector_mult_vf.1667;
  unsigned int bnd.1666;
  unsigned int niters.1665;
  int i;
  int D.16427;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  unsigned int _5;
  _Bool _6;
  unsigned int _7;
  unsigned int _24;
  _Bool _28;
  _Bool _29;
  float _32;
  int _33;
  float _34;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  unsigned int _38;
  float _40;
  float _46;
  float _47;
  int _48;
  float _49;
  sizetype _65;
  sizetype _66;
  unsigned int ivtmp_70;
  unsigned int ivtmp_71;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s174 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 14, loop depth 1
;;    pred:       5
  _24 = (unsigned int) M_13(D);
  _7 = _24 + 4294967295;
  _6 = _7 > 2;
  _5 = (unsigned int) M_13(D);
  _38 = _5 + 3;
  _29 = _38 > 6;
  _28 = _6 & _29;
  if (_28 != 0)
    goto <bb 15>; [80.00%]
  else
    goto <bb 16>; [20.00%]
;;    succ:       16
;;                15

;;   basic block 15, loop depth 1
;;    pred:       14
  niters.1665_10 = (unsigned int) M_13(D);
  bnd.1666_53 = niters.1665_10 >> 2;
  _65 = (sizetype) M_13(D);
  _66 = _65 * 4;
  vectp_a.1677_64 = &a + _66;
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       9
;;                15
  # i_26 = PHI <i_15(9), 0(15)>
  # vectp_a.1669_57 = PHI <vectp_a.1669_58(9), &a(15)>
  # vectp_b.1672_60 = PHI <vectp_b.1672_61(9), &b(15)>
  # vectp_a.1676_67 = PHI <vectp_a.1676_68(9), vectp_a.1677_64(15)>
  # ivtmp_70 = PHI <ivtmp_71(9), 0(15)>
  vect__1.1671_59 = MEM[(float *)vectp_a.1669_57];
  _1 = a[i_26];
  vect__2.1674_62 = MEM[(float *)vectp_b.1672_60];
  _2 = b[i_26];
  _3 = M_13(D) + i_26;
  vect__4.1675_63 = vect__1.1671_59 + vect__2.1674_62;
  _4 = _1 + _2;
  MEM[(float *)vectp_a.1676_67] = vect__4.1675_63;
  i_15 = i_26 + 1;
  vectp_a.1669_58 = vectp_a.1669_57 + 16;
  vectp_b.1672_61 = vectp_b.1672_60 + 16;
  vectp_a.1676_68 = vectp_a.1676_67 + 16;
  ivtmp_71 = ivtmp_70 + 1;
  if (ivtmp_71 < bnd.1666_53)
    goto <bb 9>; [83.33%]
  else
    goto <bb 19>; [16.67%]
;;    succ:       9
;;                19

;;   basic block 9, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 19, loop depth 1
;;    pred:       3
  niters_vector_mult_vf.1667_54 = bnd.1666_53 << 2;
  tmp.1668_55 = (int) niters_vector_mult_vf.1667_54;
  if (niters.1665_10 == niters_vector_mult_vf.1667_54)
    goto <bb 22>; [25.00%]
  else
    goto <bb 23>; [75.00%]
;;    succ:       23
;;                22

;;   basic block 23, loop depth 1
;;    pred:       19
;;    succ:       20

;;   basic block 20, loop depth 2
;;    pred:       21
;;                23
  # i_44 = PHI <i_51(21), tmp.1668_55(23)>
  _46 = a[i_44];
  _47 = b[i_44];
  _48 = M_13(D) + i_44;
  _49 = _46 + _47;
  a[_48] = _49;
  i_51 = i_44 + 1;
  if (M_13(D) > i_51)
    goto <bb 21>; [89.00%]
  else
    goto <bb 22>; [11.00%]
;;    succ:       21
;;                22

;;   basic block 21, loop depth 2
;;    pred:       20
  goto <bb 20>; [100.00%]
;;    succ:       20

;;   basic block 16, loop depth 1
;;    pred:       14
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       13
;;                16
  # i_39 = PHI <i_23(13), 0(16)>
  _32 = a[i_39];
  _40 = b[i_39];
  _33 = M_13(D) + i_39;
  _34 = _32 + _40;
  a[_33] = _34;
  i_23 = i_39 + 1;
  if (M_13(D) > i_23)
    goto <bb 13>; [89.00%]
  else
    goto <bb 11>; [11.00%]
;;    succ:       13
;;                11

;;   basic block 13, loop depth 2
;;    pred:       12
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 22, loop depth 1
;;    pred:       20
;;                19
;;    succ:       11

;;   basic block 11, loop depth 1
;;    pred:       12
;;                22
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       5
;;                11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_37 + 1;
  ivtmp_35 = ivtmp_36 - 1;
  if (ivtmp_35 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       8
;;                6

;;   basic block 8, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                8
  # nl_37 = PHI <0(2), nl_17(8)>
  # ivtmp_36 = PHI <100000(2), ivtmp_35(8)>
  if (M_13(D) > 0)
    goto <bb 14>; [89.00%]
  else
    goto <bb 4>; [11.00%]
;;    succ:       14
;;                4

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_12;
  printf ("S174\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s175 (s175, funcdef_no=597, decl_uid=8956, cgraph_uid=597, symbol_order=618)

s175 (int inc)
{
  int i;
  int D.16469;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s175 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_27 = PHI <0(5), _1(8)>
  _1 = inc_13(D) + i_27;
  _2 = a[_1];
  _3 = b[i_27];
  _4 = _2 + _3;
  a[i_27] = _4;
  if (_1 <= 31998)
    goto <bb 8>; [87.64%]
  else
    goto <bb 4>; [12.36%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_26 + 1;
  ivtmp_35 = ivtmp_36 - 1;
  if (ivtmp_35 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_26 = PHI <0(2), nl_16(7)>
  # ivtmp_36 = PHI <10000(2), ivtmp_35(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_12;
  printf ("S175\t %.3f \t\t", clock_dif_19);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s176 (s176, funcdef_no=598, decl_uid=8969, cgraph_uid=598, symbol_order=619)


Symbols to be put in SSA form
{ D.13044 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 31
Number of blocks to update: 19 ( 61%)


Merging blocks 5 and 30
Merging blocks 12 and 29
s176 ()
{
  vector(4) float * vectp_a.1748;
  vector(4) float * vectp_a.1747;
  vector(4) float vect__11.1746;
  vector(4) float vect__12.1745;
  vector(4) float vect__13.1744;
  vector(4) float * vectp_b.1743;
  vector(4) float * vectp_b.1742;
  vector(4) float vect__30.1741;
  vector(4) float * vectp_a.1740;
  vector(4) float * vectp_a.1739;
  vector(4) float vect__33.1738;
  vector(4) float * vectp_c.1737;
  vector(4) float * vectp_c.1736;
  vector(4) float * vectp_a.1735;
  vector(4) float * vectp_a.1734;
  vector(4) float vect__8.1733;
  vector(4) float vect__7.1732;
  vector(4) float vect__5.1731;
  vector(4) float * vectp_b.1730;
  vector(4) float * vectp_b.1729;
  vector(4) float vect__1.1728;
  vector(4) float * vectp_a.1727;
  vector(4) float * vectp_a.1726;
  vector(4) float * vectp_a.1725;
  vector(4) float * vectp_a.1724;
  vector(4) float vect__48.1723;
  vector(4) float vect__50.1722;
  vector(4) float vect__51.1721;
  vector(4) float * vectp_b.1720;
  vector(4) float * vectp_b.1719;
  vector(4) float vect__55.1718;
  vector(4) float * vectp_a.1717;
  vector(4) float * vectp_a.1716;
  int i;
  int D.16490;
  int i;
  int j;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  int _3;
  int _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _11;
  float _12;
  float _13;
  int _14;
  int _16;
  unsigned int ivtmp_20;
  int _29;
  float _30;
  unsigned int ivtmp_31;
  unsigned int ivtmp_32;
  float _33;
  unsigned int ivtmp_34;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_42;
  float _48;
  float _50;
  float _51;
  int _52;
  int _53;
  int _54;
  float _55;
  unsigned int ivtmp_59;
  int ivtmp_60;
  int ivtmp_62;
  float _64;
  sizetype _70;
  sizetype _71;
  sizetype _72;
  vector(4) float vect_cst__76;
  unsigned int ivtmp_82;
  unsigned int ivtmp_83;
  sizetype _88;
  sizetype _89;
  sizetype _90;
  vector(4) float vect_cst__94;
  sizetype _101;
  sizetype _102;
  sizetype _103;
  float _107;
  vector(4) float vect_cst__108;
  sizetype _113;
  sizetype _114;
  sizetype _115;
  unsigned int ivtmp_124;
  unsigned int ivtmp_125;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s176 ");
  start_t_18 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 3, loop depth 3
;;    pred:       24
;;                5
  # i_45 = PHI <i_9(24), 0(5)>
  # ivtmp_20 = PHI <ivtmp_31(24), 16000(5)>
  # vectp_a.1726_84 = PHI <vectp_a.1726_85(24), &a(5)>
  # vectp_b.1729_91 = PHI <vectp_b.1729_92(24), vectp_b.1730_87(5)>
  # vectp_a.1734_97 = PHI <vectp_a.1734_98(24), &a(5)>
  # vectp_c.1736_104 = PHI <vectp_c.1736_105(24), vectp_c.1737_100(5)>
  # vectp_a.1739_109 = PHI <vectp_a.1739_110(24), &a(5)>
  # vectp_b.1742_116 = PHI <vectp_b.1742_117(24), vectp_b.1743_112(5)>
  # vectp_a.1747_121 = PHI <vectp_a.1747_122(24), &a(5)>
  # ivtmp_124 = PHI <ivtmp_125(24), 0(5)>
  vect__1.1728_86 = MEM[(float *)vectp_a.1726_84];
  _1 = a[i_45];
  _2 = i_45 + 16000;
  _3 = _2 - j_36;
  _4 = _3 + -1;
  vect__5.1731_93 = MEM[(float *)vectp_b.1729_91];
  _5 = b[_4];
  vect__7.1732_95 = vect__5.1731_93 * vect_cst__94;
  _7 = _5 * _6;
  vect__8.1733_96 = vect__1.1728_86 + vect__7.1732_95;
  _8 = _1 + _7;
  MEM[(float *)vectp_a.1734_97] = vect__8.1733_96;
  vect__33.1738_106 = MEM[(float *)vectp_c.1736_104];
  _33 = c[j_21];
  vect__30.1741_111 = MEM[(float *)vectp_a.1739_109];
  _30 = a[i_45];
  _29 = i_45 + 16000;
  _16 = _29 - j_21;
  _14 = _16 + -1;
  vect__13.1744_118 = MEM[(float *)vectp_b.1742_116];
  _13 = b[_14];
  vect__12.1745_119 = vect__13.1744_118 * vect_cst__108;
  _12 = _13 * _33;
  vect__11.1746_120 = vect__30.1741_111 + vect__12.1745_119;
  _11 = _30 + _12;
  MEM[(float *)vectp_a.1747_121] = vect__11.1746_120;
  i_9 = i_45 + 1;
  ivtmp_31 = ivtmp_20 - 1;
  vectp_a.1726_85 = vectp_a.1726_84 + 16;
  vectp_b.1729_92 = vectp_b.1729_91 + 16;
  vectp_a.1734_98 = vectp_a.1734_97 + 16;
  vectp_c.1736_105 = vectp_c.1736_104 + 0;
  vectp_a.1739_110 = vectp_a.1739_109 + 16;
  vectp_b.1742_117 = vectp_b.1742_116 + 16;
  vectp_a.1747_122 = vectp_a.1747_121 + 16;
  ivtmp_125 = ivtmp_124 + 1;
  if (ivtmp_125 < 4000)
    goto <bb 24>; [96.00%]
  else
    goto <bb 25>; [4.00%]
;;    succ:       24
;;                25

;;   basic block 24, loop depth 3
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 25, loop depth 2
;;    pred:       3
  # j_61 = PHI <j_21(3)>
  j_63 = j_61 + 1;
  ivtmp_60 = ivtmp_62 + 2;
  ivtmp_34 = ivtmp_32 - 1;
  if (ivtmp_34 != 0)
    goto <bb 27>; [98.00%]
  else
    goto <bb 19>; [2.00%]
;;    succ:       27
;;                19

;;   basic block 27, loop depth 2
;;    pred:       25
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 19, loop depth 1
;;    pred:       25
  # j_41 = PHI <j_63(25)>
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       16
;;                19
  # j_66 = PHI <j_43(16), j_41(19)>
  _64 = c[j_66];
  _70 = (sizetype) j_66;
  _71 = _70 * 18446744073709551612;
  _72 = _71 + 63996;
  vectp_b.1720_69 = &b + _72;
  vect_cst__76 = {_64, _64, _64, _64};
;;    succ:       13

;;   basic block 13, loop depth 3
;;    pred:       14
;;                12
  # i_57 = PHI <i_44(14), 0(12)>
  # ivtmp_42 = PHI <ivtmp_40(14), 16000(12)>
  # vectp_a.1716_58 = PHI <vectp_a.1716_67(14), &a(12)>
  # vectp_b.1719_73 = PHI <vectp_b.1719_74(14), vectp_b.1720_69(12)>
  # vectp_a.1724_79 = PHI <vectp_a.1724_80(14), &a(12)>
  # ivtmp_82 = PHI <ivtmp_83(14), 0(12)>
  vect__55.1718_68 = MEM[(float *)vectp_a.1716_58];
  _55 = a[i_57];
  _54 = i_57 + 16000;
  _53 = _54 - j_66;
  _52 = _53 + -1;
  vect__51.1721_75 = MEM[(float *)vectp_b.1719_73];
  _51 = b[_52];
  vect__50.1722_77 = vect__51.1721_75 * vect_cst__76;
  _50 = _51 * _64;
  vect__48.1723_78 = vect__55.1718_68 + vect__50.1722_77;
  _48 = _55 + _50;
  MEM[(float *)vectp_a.1724_79] = vect__48.1723_78;
  i_44 = i_57 + 1;
  ivtmp_40 = ivtmp_42 - 1;
  vectp_a.1716_67 = vectp_a.1716_58 + 16;
  vectp_b.1719_74 = vectp_b.1719_73 + 16;
  vectp_a.1724_80 = vectp_a.1724_79 + 16;
  ivtmp_83 = ivtmp_82 + 1;
  if (ivtmp_83 < 4000)
    goto <bb 14>; [96.00%]
  else
    goto <bb 15>; [4.00%]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 3
;;    pred:       13
  goto <bb 13>; [100.00%]
;;    succ:       13

;;   basic block 15, loop depth 2
;;    pred:       13
  j_43 = j_66 + 1;
  if (j_43 != 16000)
    goto <bb 16>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       16
;;                6

;;   basic block 16, loop depth 2
;;    pred:       15
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 5, loop depth 2
;;    pred:       7
;;                27
  # j_36 = PHI <0(7), j_63(27)>
  # ivtmp_62 = PHI <1(7), ivtmp_60(27)>
  # ivtmp_32 = PHI <7999(7), ivtmp_34(27)>
  _6 = c[j_36];
  _88 = (sizetype) j_36;
  _89 = _88 * 18446744073709551612;
  _90 = _89 + 63996;
  vectp_b.1730_87 = &b + _90;
  vect_cst__94 = {_6, _6, _6, _6};
  _101 = (sizetype) j_36;
  _102 = _101 + 1;
  _103 = _102 * 4;
  vectp_c.1737_100 = &c + _103;
  j_21 = j_36 + 1;
  _107 = c[j_21];
  vect_cst__108 = {_107, _107, _107, _107};
  _113 = (sizetype) j_36;
  _114 = _113 * 18446744073709551612;
  _115 = _114 + 63992;
  vectp_b.1743_112 = &b + _115;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       15
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_35 + 1;
  ivtmp_59 = ivtmp_39 - 1;
  if (ivtmp_59 != 0)
    goto <bb 9>; [75.00%]
  else
    goto <bb 8>; [25.00%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_35 = PHI <0(2), nl_23(9)>
  # ivtmp_39 = PHI <4(2), ivtmp_59(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_18;
  printf ("S176\t %.3f \t\t", clock_dif_26);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s211 (s211, funcdef_no=599, decl_uid=8987, cgraph_uid=599, symbol_order=620)

s211 ()
{
  int i;
  int D.16579;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  int _7;
  float _8;
  float _9;
  float _10;
  float _11;
  unsigned int ivtmp_58;
  unsigned int ivtmp_62;
  unsigned int ivtmp_63;
  unsigned int ivtmp_64;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s211 ");
  start_t_19 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_34 = PHI <1(5), _7(8)>
  # ivtmp_64 = PHI <31998(5), ivtmp_63(8)>
  _1 = i_34 + -1;
  _2 = b[_1];
  _3 = c[i_34];
  _4 = d[i_34];
  _5 = _3 * _4;
  _6 = _2 + _5;
  a[i_34] = _6;
  _7 = i_34 + 1;
  _8 = b[_7];
  _9 = e[i_34];
  _10 = _4 * _9;
  _11 = _8 - _10;
  b[i_34] = _11;
  ivtmp_63 = ivtmp_64 - 1;
  if (ivtmp_63 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_33 + 1;
  ivtmp_58 = ivtmp_62 - 1;
  if (ivtmp_58 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_23(7)>
  # ivtmp_62 = PHI <10000(2), ivtmp_58(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_19;
  printf ("S211\t %.3f \t\t", clock_dif_26);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s212 (s212, funcdef_no=600, decl_uid=9000, cgraph_uid=600, symbol_order=621)

s212 ()
{
  int i;
  int D.16611;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  int _5;
  float _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_29;
  unsigned int ivtmp_30;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s212 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_32 = PHI <0(5), _5(8)>
  # ivtmp_41 = PHI <31999(5), ivtmp_40(8)>
  _1 = a[i_32];
  _2 = c[i_32];
  _3 = _1 * _2;
  a[i_32] = _3;
  _4 = b[i_32];
  _5 = i_32 + 1;
  _6 = a[_5];
  _7 = d[i_32];
  _8 = _6 * _7;
  _9 = _4 + _8;
  b[i_32] = _9;
  ivtmp_40 = ivtmp_41 - 1;
  if (ivtmp_40 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_31 + 1;
  ivtmp_29 = ivtmp_30 - 1;
  if (ivtmp_29 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_31 = PHI <0(2), nl_21(7)>
  # ivtmp_30 = PHI <10000(2), ivtmp_29(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_17;
  printf ("S212\t %.3f \t\t", clock_dif_24);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s1213 (s1213, funcdef_no=601, decl_uid=9013, cgraph_uid=601, symbol_order=622)

s1213 ()
{
  int i;
  int D.16635;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  int _5;
  float _6;
  float _7;
  float _8;
  unsigned int ivtmp_28;
  unsigned int ivtmp_29;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s212 ");
  start_t_16 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_31 = PHI <1(5), _5(8)>
  # ivtmp_40 = PHI <31998(5), ivtmp_39(8)>
  _1 = i_31 + -1;
  _2 = b[_1];
  _3 = c[i_31];
  _4 = _2 + _3;
  a[i_31] = _4;
  _5 = i_31 + 1;
  _6 = a[_5];
  _7 = d[i_31];
  _8 = _6 * _7;
  b[i_31] = _8;
  ivtmp_39 = ivtmp_40 - 1;
  if (ivtmp_39 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_30 + 1;
  ivtmp_28 = ivtmp_29 - 1;
  if (ivtmp_28 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_30 = PHI <0(2), nl_20(7)>
  # ivtmp_29 = PHI <10000(2), ivtmp_28(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_16;
  printf ("S1213\t %.3f \t\t", clock_dif_23);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s221 (s221, funcdef_no=602, decl_uid=9026, cgraph_uid=602, symbol_order=623)

s221 ()
{
  int i;
  int D.16665;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  int _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s221 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_33 = PHI <1(5), i_20(8)>
  # ivtmp_61 = PHI <31999(5), ivtmp_60(8)>
  _1 = a[i_33];
  _2 = c[i_33];
  _3 = d[i_33];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_33] = _5;
  _6 = i_33 + -1;
  _7 = b[_6];
  _8 = _5 + _7;
  _9 = _3 + _8;
  b[i_33] = _9;
  i_20 = i_33 + 1;
  ivtmp_60 = ivtmp_61 - 1;
  if (ivtmp_60 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_22(7)>
  # ivtmp_56 = PHI <5000(2), ivtmp_55(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_17;
  printf ("S221\t %.3f \t\t", clock_dif_25);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s1221 (s1221, funcdef_no=603, decl_uid=9039, cgraph_uid=603, symbol_order=624)

Merging blocks 5 and 9
s1221 ()
{
  vector(4) float * vectp_b.1898;
  vector(4) float * vectp_b.1897;
  vector(4) float vect__4.1896;
  vector(4) float vect__3.1895;
  vector(4) float * vectp_a.1894;
  vector(4) float * vectp_a.1893;
  vector(4) float vect__2.1892;
  vector(4) float * vectp_b.1891;
  vector(4) float * vectp_b.1890;
  int i;
  int D.16694;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  unsigned int ivtmp_24;
  unsigned int ivtmp_25;
  unsigned int ivtmp_33;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s221 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_27 = PHI <i_14(8), 4(5)>
  # ivtmp_36 = PHI <ivtmp_35(8), 31996(5)>
  # vectp_b.1890_23 = PHI <vectp_b.1890_8(8), &b(5)>
  # vectp_a.1893_5 = PHI <vectp_a.1893_38(8), vectp_a.1894_6(5)>
  # vectp_b.1897_31 = PHI <vectp_b.1897_39(8), vectp_b.1898_30(5)>
  # ivtmp_33 = PHI <ivtmp_40(8), 0(5)>
  _1 = i_27 + -4;
  vect__2.1892_7 = MEM[(float *)vectp_b.1890_23];
  _2 = b[_1];
  vect__3.1895_34 = MEM[(float *)vectp_a.1893_5];
  _3 = a[i_27];
  vect__4.1896_29 = vect__2.1892_7 + vect__3.1895_34;
  _4 = _2 + _3;
  MEM[(float *)vectp_b.1897_31] = vect__4.1896_29;
  i_14 = i_27 + 1;
  ivtmp_35 = ivtmp_36 - 1;
  vectp_b.1890_8 = vectp_b.1890_23 + 16;
  vectp_a.1893_38 = vectp_a.1893_5 + 16;
  vectp_b.1897_39 = vectp_b.1897_31 + 16;
  ivtmp_40 = ivtmp_33 + 1;
  if (ivtmp_40 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_26 + 1;
  ivtmp_24 = ivtmp_25 - 1;
  if (ivtmp_24 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_26 = PHI <0(2), nl_16(7)>
  # ivtmp_25 = PHI <10000(2), ivtmp_24(7)>
  vectp_a.1894_6 = &a + 16;
  vectp_b.1898_30 = &b + 16;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_12;
  printf ("S1221\t %.3f \t\t", clock_dif_19);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s222 (s222, funcdef_no=604, decl_uid=9052, cgraph_uid=604, symbol_order=625)

s222 ()
{
  int i;
  int D.16726;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  int _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s222 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_33 = PHI <1(5), i_20(8)>
  # ivtmp_57 = PHI <31999(5), ivtmp_56(8)>
  _1 = a[i_33];
  _2 = b[i_33];
  _3 = c[i_33];
  _4 = _2 * _3;
  _5 = _1 + _4;
  _6 = i_33 + -1;
  _7 = e[_6];
  _8 = _7 * _7;
  e[i_33] = _8;
  _9 = _5 - _4;
  a[i_33] = _9;
  i_20 = i_33 + 1;
  ivtmp_56 = ivtmp_57 - 1;
  if (ivtmp_56 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_51 = ivtmp_52 - 1;
  if (ivtmp_51 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_22(7)>
  # ivtmp_52 = PHI <5000(2), ivtmp_51(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_17;
  printf ("S222\t %.3f \t\t", clock_dif_25);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s231 (s231, funcdef_no=605, decl_uid=9065, cgraph_uid=605, symbol_order=626)

Merging blocks 5 and 12
s231 ()
{
  vector(4) float * vectp_aa.1947;
  vector(4) float * vectp_aa.1946;
  vector(4) float vect__4.1945;
  vector(4) float vect__3.1944;
  vector(4) float * vectp_bb.1943;
  vector(4) float * vectp_bb.1942;
  vector(4) float vect__2.1941;
  vector(4) float * vectp_aa.1940;
  vector(4) float * vectp_aa.1939;
  int i;
  int D.16755;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_8;
  unsigned int ivtmp_9;
  sizetype _16;
  sizetype _17;
  sizetype _25;
  unsigned int ivtmp_26;
  unsigned int ivtmp_28;
  unsigned int ivtmp_29;
  sizetype _30;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_43;
  sizetype _44;
  sizetype _50;
  sizetype _51;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s231 ");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       11
;;                5
  # i_27 = PHI <i_10(11), 0(5)>
  # ivtmp_9 = PHI <ivtmp_8(11), 256(5)>
  # ivtmp_26 = PHI <ivtmp_43(11), 256(5)>
  # vectp_aa.1939_40 = PHI <vectp_aa.1939_41(11), vectp_aa.1940_39(5)>
  # vectp_bb.1942_12 = PHI <vectp_bb.1942_46(11), vectp_bb.1943_32(5)>
  # vectp_aa.1946_52 = PHI <vectp_aa.1946_53(11), vectp_aa.1947_49(5)>
  # ivtmp_55 = PHI <ivtmp_56(11), 0(5)>
  _1 = j_7 + -1;
  vect__2.1941_38 = MEM[(float *)vectp_aa.1939_40];
  _2 = aa[_1][i_27];
  vect__3.1944_47 = MEM[(float *)vectp_bb.1942_12];
  _3 = bb[j_7][i_27];
  vect__4.1945_48 = vect__2.1941_38 + vect__3.1944_47;
  _4 = _2 + _3;
  MEM[(float *)vectp_aa.1946_52] = vect__4.1945_48;
  ivtmp_8 = ivtmp_9 - 1;
  i_10 = i_27 + 1;
  ivtmp_43 = ivtmp_26 - 1;
  vectp_aa.1939_41 = vectp_aa.1939_40 + 16;
  vectp_bb.1942_46 = vectp_bb.1942_12 + 16;
  vectp_aa.1946_53 = vectp_aa.1946_52 + 16;
  ivtmp_56 = ivtmp_55 + 1;
  if (ivtmp_56 < 64)
    goto <bb 11>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  ivtmp_37 = ivtmp_5 - 1;
  j_6 = j_7 + 1;
  ivtmp_35 = ivtmp_36 - 1;
  if (ivtmp_35 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # j_7 = PHI <1(7), j_6(10)>
  # ivtmp_5 = PHI <255(7), ivtmp_37(10)>
  # ivtmp_36 = PHI <255(7), ivtmp_35(10)>
  _30 = (sizetype) j_7;
  _17 = _30 * 1024;
  _16 = _17 + 18446744073709550592;
  vectp_aa.1940_39 = &aa + _16;
  _25 = (sizetype) j_7;
  _44 = _25 * 1024;
  vectp_bb.1943_32 = &bb + _44;
  _50 = (sizetype) j_7;
  _51 = _50 * 1024;
  vectp_aa.1947_49 = &aa + _51;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_19 = nl_31 + 1;
  ivtmp_28 = ivtmp_29 - 1;
  if (ivtmp_28 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_31 = PHI <0(2), nl_19(9)>
  # ivtmp_29 = PHI <3900(2), ivtmp_28(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_21 = mysecond ();
  clock_dif_22 = end_t_21 - start_t_14;
  printf ("S231\t %.3f \t\t", clock_dif_22);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s232 (s232, funcdef_no=606, decl_uid=9082, cgraph_uid=606, symbol_order=627)

s232 ()
{
  int i;
  int D.16798;
  int i;
  int j;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_44;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s232 ");
  start_t_15 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # i_35 = PHI <1(5), i_17(11)>
  _1 = i_35 + -1;
  _2 = aa[j_34][_1];
  _3 = _2 * _2;
  _4 = bb[j_34][i_35];
  _5 = _3 + _4;
  aa[j_34][i_35] = _5;
  i_17 = i_35 + 1;
  if (i_17 <= j_34)
    goto <bb 11>; [87.64%]
  else
    goto <bb 4>; [12.36%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  j_18 = j_34 + 1;
  ivtmp_41 = ivtmp_44 - 1;
  if (ivtmp_41 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # j_34 = PHI <1(7), j_18(10)>
  # ivtmp_44 = PHI <255(7), ivtmp_41(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_20 = nl_42 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  if (ivtmp_39 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_42 = PHI <0(2), nl_20(9)>
  # ivtmp_40 = PHI <3900(2), ivtmp_39(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_15;
  printf ("S232\t %.3f \t\t", clock_dif_23);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s1232 (s1232, funcdef_no=607, decl_uid=9099, cgraph_uid=607, symbol_order=628)

s1232 ()
{
  int i;
  int D.16835;
  int i;
  int j;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_34;
  unsigned int ivtmp_35;
  unsigned int ivtmp_38;
  unsigned int ivtmp_39;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s232 ");
  start_t_13 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # i_40 = PHI <j_31(5), i_15(11)>
  _1 = bb[i_40][j_31];
  _2 = cc[i_40][j_31];
  _3 = _1 + _2;
  aa[i_40][j_31] = _3;
  i_15 = i_40 + 1;
  if (i_15 != 256)
    goto <bb 11>; [87.64%]
  else
    goto <bb 4>; [12.36%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  j_16 = j_31 + 1;
  ivtmp_38 = ivtmp_39 - 1;
  if (ivtmp_38 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # j_31 = PHI <0(7), j_16(10)>
  # ivtmp_39 = PHI <256(7), ivtmp_38(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_18 = nl_30 + 1;
  ivtmp_34 = ivtmp_35 - 1;
  if (ivtmp_34 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_30 = PHI <0(2), nl_18(9)>
  # ivtmp_35 = PHI <3900(2), ivtmp_34(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_13;
  printf ("S1232\t %.3f \t\t", clock_dif_21);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s233 (s233, funcdef_no=608, decl_uid=9116, cgraph_uid=608, symbol_order=629)

s233 ()
{
  int j;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _6;
  float _7;
  float _8;
  unsigned int ivtmp_38;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_53;
  int _59;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s233 ");
  start_t_20 = mysecond ();
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 14, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       7
;;                14
  # j_47 = PHI <1(7), j_22(14)>
  # ivtmp_43 = PHI <255(7), ivtmp_42(14)>
  _1 = j_47 + -1;
  _2 = aa[_1][i_46];
  _3 = cc[j_47][i_46];
  _4 = _2 + _3;
  aa[j_47][i_46] = _4;
  j_22 = j_47 + 1;
  ivtmp_42 = ivtmp_43 - 1;
  if (ivtmp_42 != 0)
    goto <bb 14>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       14
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  _59 = i_46 + -1;
;;    succ:       5

;;   basic block 5, loop depth 3
;;    pred:       4
;;                13
  # j_48 = PHI <1(4), j_24(13)>
  # ivtmp_53 = PHI <255(4), ivtmp_44(13)>
  _6 = bb[j_48][_59];
  _7 = cc[j_48][i_46];
  _8 = _6 + _7;
  bb[j_48][i_46] = _8;
  j_24 = j_48 + 1;
  ivtmp_44 = ivtmp_53 - 1;
  if (ivtmp_44 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       13
;;                6

;;   basic block 13, loop depth 3
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 6, loop depth 2
;;    pred:       5
  i_25 = i_46 + 1;
  ivtmp_40 = ivtmp_41 - 1;
  if (ivtmp_40 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 2
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       9
;;                12
  # i_46 = PHI <1(9), i_25(12)>
  # ivtmp_41 = PHI <255(9), ivtmp_40(12)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_27 = nl_45 + 1;
  ivtmp_38 = ivtmp_39 - 1;
  if (ivtmp_38 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       8
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       2
;;                11
  # nl_45 = PHI <0(2), nl_27(11)>
  # ivtmp_39 = PHI <3900(2), ivtmp_38(11)>
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 0
;;    pred:       8
  end_t_29 = mysecond ();
  clock_dif_30 = end_t_29 - start_t_20;
  printf ("S233\t %.3f \t\t", clock_dif_30);
  check (1122);
  return 0;
;;    succ:       EXIT

}



;; Function s2233 (s2233, funcdef_no=609, decl_uid=9137, cgraph_uid=609, symbol_order=630)

Removing basic block 15
Merging blocks 4 and 19
s2233 ()
{
  vector(4) float * vectp_bb.2092;
  vector(4) float * vectp_bb.2091;
  vector(4) float vect__8.2090;
  vector(4) float vect__7.2089;
  vector(4) float * vectp_cc.2088;
  vector(4) float * vectp_cc.2087;
  vector(4) float vect__6.2086;
  vector(4) float * vectp_bb.2085;
  vector(4) float * vectp_bb.2084;
  unsigned int tmp.2083;
  int tmp.2082;
  int j;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  sizetype _5;
  float _6;
  float _7;
  float _8;
  sizetype _9;
  sizetype _10;
  sizetype _11;
  unsigned int ivtmp_14;
  float _33;
  float _34;
  float _35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_53;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;
  sizetype _56;
  sizetype _57;
  int _61;
  sizetype _68;
  sizetype _69;
  sizetype _70;
  unsigned int ivtmp_74;
  unsigned int ivtmp_75;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s233 ");
  start_t_20 = mysecond ();
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 14, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       7
;;                14
  # j_47 = PHI <1(7), j_22(14)>
  # ivtmp_53 = PHI <255(7), ivtmp_44(14)>
  _1 = j_47 + -1;
  _2 = aa[_1][i_46];
  _3 = cc[j_47][i_46];
  _4 = _2 + _3;
  aa[j_47][i_46] = _4;
  j_22 = j_47 + 1;
  ivtmp_44 = ivtmp_53 - 1;
  if (ivtmp_44 != 0)
    goto <bb 14>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       14
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  _61 = i_46 + -1;
  _11 = (sizetype) i_46;
  _10 = _11 * 1024;
  _9 = _10 + 18446744073709550596;
  vectp_bb.2085_12 = &bb + _9;
  _57 = (sizetype) i_46;
  _56 = _57 * 1024;
  _5 = _56 + 4;
  vectp_cc.2088_58 = &cc + _5;
  _68 = (sizetype) i_46;
  _69 = _68 * 1024;
  _70 = _69 + 4;
  vectp_bb.2092_67 = &bb + _70;
;;    succ:       5

;;   basic block 5, loop depth 3
;;    pred:       13
;;                4
  # j_48 = PHI <j_24(13), 1(4)>
  # ivtmp_55 = PHI <ivtmp_54(13), 255(4)>
  # vectp_bb.2084_62 = PHI <vectp_bb.2084_60(13), vectp_bb.2085_12(4)>
  # vectp_cc.2087_63 = PHI <vectp_cc.2087_64(13), vectp_cc.2088_58(4)>
  # vectp_bb.2091_71 = PHI <vectp_bb.2091_72(13), vectp_bb.2092_67(4)>
  # ivtmp_74 = PHI <ivtmp_75(13), 0(4)>
  vect__6.2086_59 = MEM[(float *)vectp_bb.2084_62];
  _6 = bb[_61][j_48];
  vect__7.2089_65 = MEM[(float *)vectp_cc.2087_63];
  _7 = cc[i_46][j_48];
  vect__8.2090_66 = vect__6.2086_59 + vect__7.2089_65;
  _8 = _6 + _7;
  MEM[(float *)vectp_bb.2091_71] = vect__8.2090_66;
  j_24 = j_48 + 1;
  ivtmp_54 = ivtmp_55 - 1;
  vectp_bb.2084_60 = vectp_bb.2084_62 + 16;
  vectp_cc.2087_64 = vectp_cc.2087_63 + 16;
  vectp_bb.2091_72 = vectp_bb.2091_71 + 16;
  ivtmp_75 = ivtmp_74 + 1;
  if (ivtmp_75 < 63)
    goto <bb 13>; [96.00%]
  else
    goto <bb 16>; [4.00%]
;;    succ:       13
;;                16

;;   basic block 13, loop depth 3
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 16, loop depth 2
;;    pred:       5
;;    succ:       17

;;   basic block 17, loop depth 3
;;    pred:       16
;;                18
  # j_38 = PHI <253(16), j_15(18)>
  # ivtmp_36 = PHI <3(16), ivtmp_14(18)>
  _35 = bb[_61][j_38];
  _34 = cc[i_46][j_38];
  _33 = _35 + _34;
  bb[i_46][j_38] = _33;
  j_15 = j_38 + 1;
  ivtmp_14 = ivtmp_36 - 1;
  if (ivtmp_14 != 0)
    goto <bb 18>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       18
;;                6

;;   basic block 18, loop depth 3
;;    pred:       17
  goto <bb 17>; [100.00%]
;;    succ:       17

;;   basic block 6, loop depth 2
;;    pred:       17
  i_25 = i_46 + 1;
  ivtmp_42 = ivtmp_43 - 1;
  if (ivtmp_42 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 2
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       9
;;                12
  # i_46 = PHI <1(9), i_25(12)>
  # ivtmp_43 = PHI <255(9), ivtmp_42(12)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_27 = nl_45 + 1;
  ivtmp_40 = ivtmp_41 - 1;
  if (ivtmp_40 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       8
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       2
;;                11
  # nl_45 = PHI <0(2), nl_27(11)>
  # ivtmp_41 = PHI <3900(2), ivtmp_40(11)>
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 0
;;    pred:       8
  end_t_29 = mysecond ();
  clock_dif_30 = end_t_29 - start_t_20;
  printf ("S2233\t %.3f \t\t", clock_dif_30);
  check (1122);
  return 0;
;;    succ:       EXIT

}



;; Function s235 (s235, funcdef_no=610, decl_uid=9158, cgraph_uid=610, symbol_order=631)

Merging blocks 7 and 12
s235 ()
{
  vector(4) float * vectp_aa.2166;
  vector(4) float * vectp_aa.2165;
  vector(4) float vect__10.2164;
  vector(4) float vect__9.2163;
  vector(4) float vect__8.2162;
  vector(4) float * vectp_bb.2161;
  vector(4) float * vectp_bb.2160;
  vector(4) float vect__7.2159;
  vector(4) float * vectp_aa.2158;
  vector(4) float * vectp_aa.2157;
  vector(4) float * vectp_a.2156;
  vector(4) float * vectp_a.2155;
  vector(4) float vect__5.2154;
  vector(4) float vect__4.2153;
  vector(4) float vect__3.2152;
  vector(4) float * vectp_c.2151;
  vector(4) float * vectp_c.2150;
  vector(4) float vect__2.2149;
  vector(4) float * vectp_b.2148;
  vector(4) float * vectp_b.2147;
  vector(4) float vect__1.2146;
  vector(4) float * vectp_a.2145;
  vector(4) float * vectp_a.2144;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  int _6;
  float _7;
  float _8;
  float _9;
  float _10;
  unsigned int ivtmp_11;
  unsigned int ivtmp_66;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;
  unsigned int ivtmp_69;
  unsigned int ivtmp_70;
  unsigned int ivtmp_74;
  unsigned int ivtmp_75;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s235 ");
  start_t_20 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       10
;;                7
  # i_42 = PHI <i_24(10), 0(7)>
  # ivtmp_69 = PHI <ivtmp_68(10), 256(7)>
  # vectp_a.2144_65 = PHI <vectp_a.2144_64(10), &a(7)>
  # vectp_b.2147_62 = PHI <vectp_b.2147_61(10), &b(7)>
  # vectp_c.2150_59 = PHI <vectp_c.2150_58(10), &c(7)>
  # vectp_a.2155_54 = PHI <vectp_a.2155_53(10), &a(7)>
  # vectp_aa.2157_51 = PHI <vectp_aa.2157_50(10), &aa(7)>
  # vectp_bb.2160_39 = PHI <vectp_bb.2160_38(10), vectp_bb.2161_40(7)>
  # vectp_aa.2165_16 = PHI <vectp_aa.2165_15(10), vectp_aa.2166_32(7)>
  # ivtmp_11 = PHI <ivtmp_74(10), 0(7)>
  vect__1.2146_63 = MEM[(float *)vectp_a.2144_65];
  _1 = a[i_42];
  vect__2.2149_60 = MEM[(float *)vectp_b.2147_62];
  _2 = b[i_42];
  vect__3.2152_57 = MEM[(float *)vectp_c.2150_59];
  _3 = c[i_42];
  vect__4.2153_56 = vect__2.2149_60 * vect__3.2152_57;
  _4 = _2 * _3;
  vect__5.2154_55 = vect__1.2146_63 + vect__4.2153_56;
  _5 = _1 + _4;
  MEM[(float *)vectp_a.2155_54] = vect__5.2154_55;
;;    succ:       4

;;   basic block 4, loop depth 3
;;    pred:       3
;;                11
  # j_43 = PHI <1(3), j_23(11)>
  # ivtmp_75 = PHI <255(3), ivtmp_70(11)>
  # vectp_aa.2157_49 = PHI <vectp_aa.2157_51(3), vectp_aa.2157_48(11)>
  # vectp_bb.2160_37 = PHI <vectp_bb.2160_39(3), vectp_bb.2160_36(11)>
  # vectp_aa.2165_14 = PHI <vectp_aa.2165_16(3), vectp_aa.2165_13(11)>
  _6 = j_43 + -1;
  vect__7.2159_47 = MEM[(float *)vectp_aa.2157_49];
  _7 = aa[_6][i_42];
  vect__8.2162_35 = MEM[(float *)vectp_bb.2160_37];
  _8 = bb[j_43][i_42];
  vect__9.2163_34 = vect__5.2154_55 * vect__8.2162_35;
  _9 = _5 * _8;
  vect__10.2164_33 = vect__7.2159_47 + vect__9.2163_34;
  _10 = _7 + _9;
  MEM[(float *)vectp_aa.2165_14] = vect__10.2164_33;
  j_23 = j_43 + 1;
  ivtmp_70 = ivtmp_75 - 1;
  vectp_aa.2157_48 = vectp_aa.2157_49 + 1024;
  vectp_bb.2160_36 = vectp_bb.2160_37 + 1024;
  vectp_aa.2165_13 = vectp_aa.2165_14 + 1024;
  if (ivtmp_70 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 5>; [1.01%]
;;    succ:       11
;;                5

;;   basic block 11, loop depth 3
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 2
;;    pred:       4
  i_24 = i_42 + 1;
  ivtmp_68 = ivtmp_69 - 1;
  vectp_a.2144_64 = vectp_a.2144_65 + 16;
  vectp_b.2147_61 = vectp_b.2147_62 + 16;
  vectp_c.2150_58 = vectp_c.2150_59 + 16;
  vectp_a.2155_53 = vectp_a.2155_54 + 16;
  vectp_aa.2157_50 = vectp_aa.2157_51 + 16;
  vectp_bb.2160_38 = vectp_bb.2160_39 + 16;
  vectp_aa.2165_15 = vectp_aa.2165_16 + 16;
  ivtmp_74 = ivtmp_11 + 1;
  if (ivtmp_74 < 64)
    goto <bb 10>; [96.00%]
  else
    goto <bb 6>; [4.00%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_26 = nl_41 + 1;
  ivtmp_66 = ivtmp_67 - 1;
  if (ivtmp_66 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_41 = PHI <0(2), nl_26(9)>
  # ivtmp_67 = PHI <7800(2), ivtmp_66(9)>
  vectp_bb.2161_40 = &bb + 1024;
  vectp_aa.2166_32 = &aa + 1024;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_28 = mysecond ();
  clock_dif_29 = end_t_28 - start_t_20;
  printf ("S235\t %.3f \t\t", clock_dif_29);
  check (111);
  return 0;
;;    succ:       EXIT

}



;; Function s241 (s241, funcdef_no=611, decl_uid=9175, cgraph_uid=611, symbol_order=632)

s241 ()
{
  int i;
  int D.17045;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  int _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_41;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s241 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_32 = PHI <0(5), _6(8)>
  # ivtmp_45 = PHI <31999(5), ivtmp_44(8)>
  _1 = b[i_32];
  _2 = c[i_32];
  _3 = _1 * _2;
  _4 = d[i_32];
  _5 = _3 * _4;
  a[i_32] = _5;
  _6 = i_32 + 1;
  _7 = a[_6];
  _8 = _5 * _7;
  _9 = _4 * _8;
  b[i_32] = _9;
  ivtmp_44 = ivtmp_45 - 1;
  if (ivtmp_44 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_31 + 1;
  ivtmp_41 = ivtmp_43 - 1;
  if (ivtmp_41 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_31 = PHI <0(2), nl_21(7)>
  # ivtmp_43 = PHI <20000(2), ivtmp_41(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_17;
  printf ("S241\t %.3f \t\t", clock_dif_24);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s242 (s242, funcdef_no=612, decl_uid=9190, cgraph_uid=612, symbol_order=633)

s242 (float s1, float s2)
{
  int i;
  int D.17068;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _10;
  unsigned int ivtmp_59;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s242 ");
  start_t_18 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_35 = PHI <1(5), i_22(8)>
  # ivtmp_62 = PHI <31999(5), ivtmp_61(8)>
  _1 = i_35 + -1;
  _2 = a[_1];
  _3 = _2 + s1_19(D);
  _4 = _3 + s2_20(D);
  _5 = b[i_35];
  _6 = _4 + _5;
  _7 = c[i_35];
  _8 = _6 + _7;
  _9 = d[i_35];
  _10 = _8 + _9;
  a[i_35] = _10;
  i_22 = i_35 + 1;
  ivtmp_61 = ivtmp_62 - 1;
  if (ivtmp_61 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_34 + 1;
  ivtmp_59 = ivtmp_60 - 1;
  if (ivtmp_59 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_34 = PHI <0(2), nl_24(7)>
  # ivtmp_60 = PHI <2000(2), ivtmp_59(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_18;
  printf ("S242\t %.3f \t\t", clock_dif_27);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s243 (s243, funcdef_no=613, decl_uid=9203, cgraph_uid=613, symbol_order=634)

s243 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  int _9;
  float _10;
  float _11;
  float _12;
  unsigned int ivtmp_60;
  unsigned int ivtmp_63;
  unsigned int ivtmp_64;
  unsigned int ivtmp_65;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s243 ");
  start_t_20 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_38 = PHI <0(5), _9(8)>
  # ivtmp_65 = PHI <31999(5), ivtmp_64(8)>
  _1 = b[i_38];
  _2 = c[i_38];
  _3 = d[i_38];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_38] = _5;
  _6 = e[i_38];
  _7 = _3 * _6;
  _8 = _5 + _7;
  b[i_38] = _8;
  _9 = i_38 + 1;
  _10 = a[_9];
  _11 = _3 * _10;
  _12 = _8 + _11;
  a[i_38] = _12;
  ivtmp_64 = ivtmp_65 - 1;
  if (ivtmp_64 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_25 = nl_37 + 1;
  ivtmp_60 = ivtmp_63 - 1;
  if (ivtmp_60 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_37 = PHI <0(2), nl_25(7)>
  # ivtmp_63 = PHI <10000(2), ivtmp_60(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_20;
  printf ("S243\t %.3f \t\t", clock_dif_28);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s244 (s244, funcdef_no=614, decl_uid=9216, cgraph_uid=614, symbol_order=635)

s244 ()
{
  int i;
  int D.17118;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  int _7;
  float _8;
  float _9;
  float _10;
  unsigned int ivtmp_45;
  unsigned int ivtmp_46;
  unsigned int ivtmp_47;
  unsigned int ivtmp_50;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s244 ");
  start_t_18 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_34 = PHI <0(5), _7(8)>
  # ivtmp_50 = PHI <31999(5), ivtmp_47(8)>
  _1 = b[i_34];
  _2 = c[i_34];
  _3 = d[i_34];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_34] = _5;
  _6 = _1 + _2;
  b[i_34] = _6;
  _7 = i_34 + 1;
  _8 = a[_7];
  _9 = _3 * _8;
  _10 = _6 + _9;
  a[_7] = _10;
  ivtmp_47 = ivtmp_50 - 1;
  if (ivtmp_47 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_33 + 1;
  ivtmp_45 = ivtmp_46 - 1;
  if (ivtmp_45 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_23(7)>
  # ivtmp_46 = PHI <10000(2), ivtmp_45(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_18;
  printf ("S244\t %.3f \t\t", clock_dif_26);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s1244 (s1244, funcdef_no=615, decl_uid=9229, cgraph_uid=615, symbol_order=636)

s1244 ()
{
  int i;
  int D.17141;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  int _8;
  float _9;
  float _10;
  unsigned int ivtmp_58;
  unsigned int ivtmp_59;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s244 ");
  start_t_18 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_33 = PHI <0(5), _8(8)>
  # ivtmp_61 = PHI <31999(5), ivtmp_60(8)>
  _1 = b[i_33];
  _2 = c[i_33];
  _3 = _2 * _2;
  _4 = _1 + _3;
  _5 = _1 * _1;
  _6 = _4 + _5;
  _7 = _2 + _6;
  a[i_33] = _7;
  _8 = i_33 + 1;
  _9 = a[_8];
  _10 = _7 + _9;
  d[i_33] = _10;
  ivtmp_60 = ivtmp_61 - 1;
  if (ivtmp_60 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_58 = ivtmp_59 - 1;
  if (ivtmp_58 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_22(7)>
  # ivtmp_59 = PHI <10000(2), ivtmp_58(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_18;
  printf ("S1244\t %.3f \t\t", clock_dif_25);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s2244 (s2244, funcdef_no=616, decl_uid=9242, cgraph_uid=616, symbol_order=637)

Removing basic block 9
Merging blocks 5 and 13
s2244 ()
{
  vector(4) float * vectp_a.2310;
  vector(4) float * vectp_a.2309;
  vector(4) float vect__6.2308;
  vector(4) float vect__5.2307;
  vector(4) float * vectp_c.2306;
  vector(4) float * vectp_c.2305;
  vector(4) float * vectp_a.2304;
  vector(4) float * vectp_a.2303;
  vector(4) float vect__4.2302;
  vector(4) float vect__2.2301;
  vector(4) float * vectp_e.2300;
  vector(4) float * vectp_e.2299;
  vector(4) float vect__1.2298;
  vector(4) float * vectp_b.2297;
  vector(4) float * vectp_b.2296;
  unsigned int tmp.2295;
  int tmp.2294;
  int i;
  int D.17164;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _10;
  int _25;
  float _26;
  float _27;
  unsigned int ivtmp_31;
  unsigned int ivtmp_32;
  unsigned int ivtmp_37;
  unsigned int ivtmp_38;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s244 ");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_35 = PHI <31996(10), _25(12)>
  # ivtmp_31 = PHI <3(10), ivtmp_32(12)>
  _27 = b[i_35];
  _26 = e[i_35];
  _25 = i_35 + 1;
  _10 = _27 + _26;
  a[_25] = _10;
  _8 = c[i_35];
  _7 = _27 + _8;
  a[i_35] = _7;
  ivtmp_32 = ivtmp_31 - 1;
  if (ivtmp_32 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_29 = PHI <_3(8), 0(5)>
  # ivtmp_41 = PHI <ivtmp_40(8), 31999(5)>
  # vectp_b.2296_24 = PHI <vectp_b.2296_43(8), &b(5)>
  # vectp_e.2299_45 = PHI <vectp_e.2299_46(8), &e(5)>
  # vectp_a.2303_50 = PHI <vectp_a.2303_51(8), vectp_a.2304_49(5)>
  # vectp_c.2305_53 = PHI <vectp_c.2305_54(8), &c(5)>
  # vectp_a.2309_57 = PHI <vectp_a.2309_58(8), &a(5)>
  # ivtmp_60 = PHI <ivtmp_61(8), 0(5)>
  vect__1.2298_12 = MEM[(float *)vectp_b.2296_24];
  _1 = b[i_29];
  vect__2.2301_47 = MEM[(float *)vectp_e.2299_45];
  _2 = e[i_29];
  _3 = i_29 + 1;
  vect__4.2302_48 = vect__1.2298_12 + vect__2.2301_47;
  _4 = _1 + _2;
  MEM[(float *)vectp_a.2303_50] = vect__4.2302_48;
  vect__5.2307_55 = MEM[(float *)vectp_c.2305_53];
  _5 = c[i_29];
  vect__6.2308_56 = vect__1.2298_12 + vect__5.2307_55;
  _6 = _1 + _5;
  MEM[(float *)vectp_a.2309_57] = vect__6.2308_56;
  ivtmp_40 = ivtmp_41 - 1;
  vectp_b.2296_43 = vectp_b.2296_24 + 16;
  vectp_e.2299_46 = vectp_e.2299_45 + 16;
  vectp_a.2303_51 = vectp_a.2303_50 + 16;
  vectp_c.2305_54 = vectp_c.2305_53 + 16;
  vectp_a.2309_58 = vectp_a.2309_57 + 16;
  ivtmp_61 = ivtmp_60 + 1;
  if (ivtmp_61 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_37 = ivtmp_38 - 1;
  if (ivtmp_37 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_38 = PHI <10000(2), ivtmp_37(7)>
  vectp_a.2304_49 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S2244\t %.3f \t\t", clock_dif_21);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s251 (s251, funcdef_no=617, decl_uid=9255, cgraph_uid=617, symbol_order=638)

Merging blocks 5 and 9
s251 ()
{
  vector(4) float * vectp_a.2344;
  vector(4) float * vectp_a.2343;
  vector(4) float vect__5.2342;
  vector(4) float vect_s_14.2341;
  vector(4) float vect__4.2340;
  vector(4) float vect__3.2339;
  vector(4) float * vectp_d.2338;
  vector(4) float * vectp_d.2337;
  vector(4) float vect__2.2336;
  vector(4) float * vectp_c.2335;
  vector(4) float * vectp_c.2334;
  vector(4) float vect__1.2333;
  vector(4) float * vectp_b.2332;
  vector(4) float * vectp_b.2331;
  int i;
  int D.17207;
  int i;
  int nl;
  float s;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_24;
  unsigned int ivtmp_25;
  unsigned int ivtmp_47;
  unsigned int ivtmp_48;
  unsigned int ivtmp_49;
  unsigned int ivtmp_50;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s251 ");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_29 = PHI <i_16(8), 0(5)>
  # ivtmp_50 = PHI <ivtmp_49(8), 32000(5)>
  # vectp_b.2331_46 = PHI <vectp_b.2331_43(8), &b(5)>
  # vectp_c.2334_41 = PHI <vectp_c.2334_40(8), &c(5)>
  # vectp_d.2337_37 = PHI <vectp_d.2337_36(8), &d(5)>
  # vectp_a.2343_31 = PHI <vectp_a.2343_27(8), &a(5)>
  # ivtmp_25 = PHI <ivtmp_24(8), 0(5)>
  vect__1.2333_42 = MEM[(float *)vectp_b.2331_46];
  _1 = b[i_29];
  vect__2.2336_38 = MEM[(float *)vectp_c.2334_41];
  _2 = c[i_29];
  vect__3.2339_35 = MEM[(float *)vectp_d.2337_37];
  _3 = d[i_29];
  vect__4.2340_34 = vect__2.2336_38 * vect__3.2339_35;
  _4 = _2 * _3;
  vect_s_14.2341_33 = vect__1.2333_42 + vect__4.2340_34;
  s_14 = _1 + _4;
  vect__5.2342_32 = vect_s_14.2341_33 * vect_s_14.2341_33;
  _5 = s_14 * s_14;
  MEM[(float *)vectp_a.2343_31] = vect__5.2342_32;
  i_16 = i_29 + 1;
  ivtmp_49 = ivtmp_50 - 1;
  vectp_b.2331_43 = vectp_b.2331_46 + 16;
  vectp_c.2334_40 = vectp_c.2334_41 + 16;
  vectp_d.2337_36 = vectp_d.2337_37 + 16;
  vectp_a.2343_27 = vectp_a.2343_31 + 16;
  ivtmp_24 = ivtmp_25 + 1;
  if (ivtmp_24 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_47 = ivtmp_48 - 1;
  if (ivtmp_47 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_48 = PHI <40000(2), ivtmp_47(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_13;
  printf ("S251\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s1251 (s1251, funcdef_no=618, decl_uid=9269, cgraph_uid=618, symbol_order=639)

Merging blocks 5 and 9
s1251 ()
{
  vector(4) float * vectp_a.2383;
  vector(4) float * vectp_a.2382;
  vector(4) float vect__7.2381;
  vector(4) float vect__6.2380;
  vector(4) float * vectp_e.2379;
  vector(4) float * vectp_e.2378;
  vector(4) float * vectp_b.2377;
  vector(4) float * vectp_b.2376;
  vector(4) float vect__5.2375;
  vector(4) float vect__4.2374;
  vector(4) float * vectp_d.2373;
  vector(4) float * vectp_d.2372;
  vector(4) float vect__3.2371;
  vector(4) float * vectp_a.2370;
  vector(4) float * vectp_a.2369;
  vector(4) float vect_s_16.2368;
  vector(4) float vect__2.2367;
  vector(4) float * vectp_c.2366;
  vector(4) float * vectp_c.2365;
  vector(4) float vect__1.2364;
  vector(4) float * vectp_b.2363;
  vector(4) float * vectp_b.2362;
  int i;
  int D.17244;
  int i;
  int nl;
  float s;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_46;
  unsigned int ivtmp_48;
  unsigned int ivtmp_49;
  unsigned int ivtmp_50;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s251 ");
  start_t_15 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_32 = PHI <i_19(8), 0(5)>
  # ivtmp_50 = PHI <ivtmp_49(8), 32000(5)>
  # vectp_b.2362_45 = PHI <vectp_b.2362_44(8), &b(5)>
  # vectp_c.2365_41 = PHI <vectp_c.2365_40(8), &c(5)>
  # vectp_a.2369_37 = PHI <vectp_a.2369_36(8), &a(5)>
  # vectp_d.2372_34 = PHI <vectp_d.2372_30(8), &d(5)>
  # vectp_b.2376_27 = PHI <vectp_b.2376_13(8), &b(5)>
  # vectp_e.2378_10 = PHI <vectp_e.2378_9(8), &e(5)>
  # vectp_a.2382_51 = PHI <vectp_a.2382_53(8), &a(5)>
  # ivtmp_55 = PHI <ivtmp_56(8), 0(5)>
  vect__1.2364_43 = MEM[(float *)vectp_b.2362_45];
  _1 = b[i_32];
  vect__2.2367_39 = MEM[(float *)vectp_c.2365_41];
  _2 = c[i_32];
  vect_s_16.2368_38 = vect__1.2364_43 + vect__2.2367_39;
  s_16 = _1 + _2;
  vect__3.2371_35 = MEM[(float *)vectp_a.2369_37];
  _3 = a[i_32];
  vect__4.2374_29 = MEM[(float *)vectp_d.2372_34];
  _4 = d[i_32];
  vect__5.2375_28 = vect__3.2371_35 + vect__4.2374_29;
  _5 = _3 + _4;
  MEM[(float *)vectp_b.2376_27] = vect__5.2375_28;
  vect__6.2380_8 = MEM[(float *)vectp_e.2378_10];
  _6 = e[i_32];
  vect__7.2381_52 = vect__6.2380_8 * vect_s_16.2368_38;
  _7 = _6 * s_16;
  MEM[(float *)vectp_a.2382_51] = vect__7.2381_52;
  i_19 = i_32 + 1;
  ivtmp_49 = ivtmp_50 - 1;
  vectp_b.2362_44 = vectp_b.2362_45 + 16;
  vectp_c.2365_40 = vectp_c.2365_41 + 16;
  vectp_a.2369_36 = vectp_a.2369_37 + 16;
  vectp_d.2372_30 = vectp_d.2372_34 + 16;
  vectp_b.2376_13 = vectp_b.2376_27 + 16;
  vectp_e.2378_9 = vectp_e.2378_10 + 16;
  vectp_a.2382_53 = vectp_a.2382_51 + 16;
  ivtmp_56 = ivtmp_55 + 1;
  if (ivtmp_56 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_31 + 1;
  ivtmp_46 = ivtmp_48 - 1;
  if (ivtmp_46 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_31 = PHI <0(2), nl_21(7)>
  # ivtmp_48 = PHI <40000(2), ivtmp_46(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_15;
  printf ("S1251\t %.3f \t\t", clock_dif_24);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s2251 (s2251, funcdef_no=619, decl_uid=9283, cgraph_uid=619, symbol_order=640)

s2251 ()
{
  int i;
  int D.17291;
  int i;
  float s;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_49;
  unsigned int ivtmp_50;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s251 ");
  start_t_15 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # s_42 = PHI <0.0(5), s_17(8)>
  # i_33 = PHI <0(5), i_19(8)>
  # ivtmp_52 = PHI <32000(5), ivtmp_51(8)>
  _1 = e[i_33];
  _2 = _1 * s_42;
  a[i_33] = _2;
  _3 = b[i_33];
  _4 = c[i_33];
  s_17 = _3 + _4;
  _5 = d[i_33];
  _6 = _2 + _5;
  b[i_33] = _6;
  i_19 = i_33 + 1;
  ivtmp_51 = ivtmp_52 - 1;
  if (ivtmp_51 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_32 + 1;
  ivtmp_49 = ivtmp_50 - 1;
  if (ivtmp_49 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_21(7)>
  # ivtmp_50 = PHI <10000(2), ivtmp_49(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_15;
  printf ("S2251\t %.3f \t\t", clock_dif_24);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s3251 (s3251, funcdef_no=620, decl_uid=9297, cgraph_uid=620, symbol_order=641)

Removing basic block 9
Merging blocks 5 and 13
s3251 ()
{
  vector(4) float * vectp_d.2442;
  vector(4) float * vectp_d.2441;
  vector(4) float vect__8.2440;
  vector(4) float vect__7.2439;
  vector(4) float * vectp_a.2438;
  vector(4) float * vectp_a.2437;
  vector(4) float * vectp_b.2436;
  vector(4) float * vectp_b.2435;
  vector(4) float vect__6.2434;
  vector(4) float vect__5.2433;
  vector(4) float * vectp_e.2432;
  vector(4) float * vectp_e.2431;
  vector(4) float * vectp_a.2430;
  vector(4) float * vectp_a.2429;
  vector(4) float vect__4.2428;
  vector(4) float vect__2.2427;
  vector(4) float * vectp_c.2426;
  vector(4) float * vectp_c.2425;
  vector(4) float vect__1.2424;
  vector(4) float * vectp_b.2423;
  vector(4) float * vectp_b.2422;
  unsigned int tmp.2421;
  int tmp.2420;
  int i;
  int D.17314;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _11;
  int _12;
  float _28;
  float _29;
  unsigned int ivtmp_30;
  float _36;
  float _38;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  float _45;
  unsigned int ivtmp_46;
  unsigned int ivtmp_73;
  unsigned int ivtmp_74;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s251 ");
  start_t_16 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_37 = PHI <31996(10), _12(12)>
  # ivtmp_30 = PHI <3(10), ivtmp_46(12)>
  _29 = b[i_37];
  _28 = c[i_37];
  _12 = i_37 + 1;
  _11 = _29 + _28;
  a[_12] = _11;
  _9 = e[i_37];
  _36 = _28 * _9;
  b[i_37] = _36;
  _38 = a[i_37];
  _45 = _9 * _38;
  d[i_37] = _45;
  ivtmp_46 = ivtmp_30 - 1;
  if (ivtmp_46 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_32 = PHI <_3(8), 0(5)>
  # ivtmp_44 = PHI <ivtmp_43(8), 31999(5)>
  # vectp_b.2422_48 = PHI <vectp_b.2422_49(8), &b(5)>
  # vectp_c.2425_51 = PHI <vectp_c.2425_52(8), &c(5)>
  # vectp_a.2429_56 = PHI <vectp_a.2429_57(8), vectp_a.2430_55(5)>
  # vectp_e.2431_59 = PHI <vectp_e.2431_60(8), &e(5)>
  # vectp_b.2435_63 = PHI <vectp_b.2435_64(8), &b(5)>
  # vectp_a.2437_66 = PHI <vectp_a.2437_67(8), &a(5)>
  # vectp_d.2441_70 = PHI <vectp_d.2441_71(8), &d(5)>
  # ivtmp_73 = PHI <ivtmp_74(8), 0(5)>
  vect__1.2424_50 = MEM[(float *)vectp_b.2422_48];
  _1 = b[i_32];
  vect__2.2427_53 = MEM[(float *)vectp_c.2425_51];
  _2 = c[i_32];
  _3 = i_32 + 1;
  vect__4.2428_54 = vect__1.2424_50 + vect__2.2427_53;
  _4 = _1 + _2;
  MEM[(float *)vectp_a.2429_56] = vect__4.2428_54;
  vect__5.2433_61 = MEM[(float *)vectp_e.2431_59];
  _5 = e[i_32];
  vect__6.2434_62 = vect__2.2427_53 * vect__5.2433_61;
  _6 = _2 * _5;
  MEM[(float *)vectp_b.2435_63] = vect__6.2434_62;
  vect__7.2439_68 = MEM[(float *)vectp_a.2437_66];
  _7 = a[i_32];
  vect__8.2440_69 = vect__5.2433_61 * vect__7.2439_68;
  _8 = _5 * _7;
  MEM[(float *)vectp_d.2441_70] = vect__8.2440_69;
  ivtmp_43 = ivtmp_44 - 1;
  vectp_b.2422_49 = vectp_b.2422_48 + 16;
  vectp_c.2425_52 = vectp_c.2425_51 + 16;
  vectp_a.2429_57 = vectp_a.2429_56 + 16;
  vectp_e.2431_60 = vectp_e.2431_59 + 16;
  vectp_b.2435_64 = vectp_b.2435_63 + 16;
  vectp_a.2437_67 = vectp_a.2437_66 + 16;
  vectp_d.2441_71 = vectp_d.2441_70 + 16;
  ivtmp_74 = ivtmp_73 + 1;
  if (ivtmp_74 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_31 + 1;
  ivtmp_40 = ivtmp_41 - 1;
  if (ivtmp_40 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_31 = PHI <0(2), nl_21(7)>
  # ivtmp_41 = PHI <10000(2), ivtmp_40(7)>
  vectp_a.2430_55 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_16;
  printf ("S3251\t %.3f \t\t", clock_dif_24);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s252 (s252, funcdef_no=621, decl_uid=9310, cgraph_uid=621, symbol_order=642)

s252 ()
{
  int i;
  int D.17366;
  int i;
  int nl;
  float s;
  float t;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s252 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # t_28 = PHI <0.0(5), s_13(8)>
  # i_29 = PHI <0(5), i_15(8)>
  # ivtmp_40 = PHI <32000(5), ivtmp_37(8)>
  _1 = b[i_29];
  _2 = c[i_29];
  s_13 = _1 * _2;
  _3 = s_13 + t_28;
  a[i_29] = _3;
  i_15 = i_29 + 1;
  ivtmp_37 = ivtmp_40 - 1;
  if (ivtmp_37 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_38 + 1;
  ivtmp_35 = ivtmp_36 - 1;
  if (ivtmp_35 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_38 = PHI <0(2), nl_17(7)>
  # ivtmp_36 = PHI <10000(2), ivtmp_35(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_12;
  printf ("S252\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s253 (s253, funcdef_no=622, decl_uid=9325, cgraph_uid=622, symbol_order=643)

s253 ()
{
  int i;
  int D.17387;
  int i;
  int nl;
  float s;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_11;
  unsigned int ivtmp_29;
  unsigned int ivtmp_30;
  unsigned int ivtmp_41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s253 ");
  start_t_15 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_32 = PHI <0(7), i_19(10)>
  # ivtmp_41 = PHI <32000(7), ivtmp_30(10)>
  _1 = a[i_32];
  _2 = b[i_32];
  if (_1 > _2)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _3 = d[i_32];
  _4 = _2 * _3;
  s_16 = _1 - _4;
  _5 = c[i_32];
  _6 = _5 + s_16;
  c[i_32] = _6;
  a[i_32] = s_16;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  i_19 = i_32 + 1;
  ivtmp_30 = ivtmp_41 - 1;
  if (ivtmp_30 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_31 + 1;
  ivtmp_11 = ivtmp_29 - 1;
  if (ivtmp_11 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_31 = PHI <0(2), nl_21(9)>
  # ivtmp_29 = PHI <10000(2), ivtmp_11(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_15;
  printf ("S253\t %.3f \t\t", clock_dif_24);
  check (13);
  return 0;
;;    succ:       EXIT

}



;; Function s254 (s254, funcdef_no=623, decl_uid=9339, cgraph_uid=623, symbol_order=644)

s254 ()
{
  int i;
  int D.17409;
  int i;
  int nl;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_27;
  unsigned int ivtmp_31;
  unsigned int ivtmp_32;
  unsigned int ivtmp_37;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s254 ");
  start_t_12 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # nl_38 = PHI <0(2), nl_17(7)>
  # ivtmp_31 = PHI <40000(2), ivtmp_27(7)>
  x_13 = b[31999];
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       3
;;                8
  # x_28 = PHI <x_13(3), _1(8)>
  # i_29 = PHI <0(3), i_15(8)>
  # ivtmp_37 = PHI <32000(3), ivtmp_32(8)>
  _1 = b[i_29];
  _2 = _1 + x_28;
  _3 = _2 * 5.0e-1;
  a[i_29] = _3;
  i_15 = i_29 + 1;
  ivtmp_32 = ivtmp_37 - 1;
  if (ivtmp_32 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 5>; [1.01%]
;;    succ:       8
;;                5

;;   basic block 8, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_38 + 1;
  ivtmp_27 = ivtmp_31 - 1;
  if (ivtmp_27 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_12;
  printf ("S254\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s255 (s255, funcdef_no=624, decl_uid=9353, cgraph_uid=624, symbol_order=645)

s255 ()
{
  int i;
  int D.17429;
  int i;
  int nl;
  float y;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_43;
  unsigned int ivtmp_45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s255 ");
  start_t_14 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_20(7)>
  # ivtmp_40 = PHI <10000(2), ivtmp_39(7)>
  x_15 = b[31999];
  y_16 = b[31998];
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       3
;;                8
  # x_41 = PHI <x_15(3), _1(8)>
  # y_32 = PHI <y_16(3), x_41(8)>
  # i_42 = PHI <0(3), i_18(8)>
  # ivtmp_45 = PHI <32000(3), ivtmp_43(8)>
  _1 = b[i_42];
  _2 = _1 + x_41;
  _3 = _2 + y_32;
  _4 = _3 * 3.33000004291534423828125e-1;
  a[i_42] = _4;
  i_18 = i_42 + 1;
  ivtmp_43 = ivtmp_45 - 1;
  if (ivtmp_43 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 5>; [1.01%]
;;    succ:       8
;;                5

;;   basic block 8, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_33 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  if (ivtmp_39 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_14;
  printf ("S255\t %.3f \t\t", clock_dif_23);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s256 (s256, funcdef_no=625, decl_uid=9368, cgraph_uid=625, symbol_order=646)

s256 ()
{
  int i;
  int D.17449;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_62;
  unsigned int ivtmp_63;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s256 ");
  start_t_17 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # j_45 = PHI <1(5), j_20(11)>
  # ivtmp_63 = PHI <255(5), ivtmp_62(11)>
  _1 = j_45 + -1;
  _2 = a[_1];
  _3 = 1.0e+0 - _2;
  a[j_45] = _3;
  _4 = bb[j_45][i_36];
  _5 = d[j_45];
  _6 = _4 * _5;
  _7 = _3 + _6;
  cc[j_45][i_36] = _7;
  j_20 = j_45 + 1;
  ivtmp_62 = ivtmp_63 - 1;
  if (ivtmp_62 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  i_21 = i_36 + 1;
  ivtmp_56 = ivtmp_57 - 1;
  if (ivtmp_56 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # i_36 = PHI <0(7), i_21(10)>
  # ivtmp_57 = PHI <256(7), ivtmp_56(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_35 + 1;
  ivtmp_54 = ivtmp_55 - 1;
  if (ivtmp_54 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_35 = PHI <0(2), nl_23(9)>
  # ivtmp_55 = PHI <390(2), ivtmp_54(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_17;
  printf ("S256\t %.3f \t\t", clock_dif_26);
  check (111);
  return 0;
;;    succ:       EXIT

}



;; Function s257 (s257, funcdef_no=626, decl_uid=9385, cgraph_uid=626, symbol_order=647)

s257 ()
{
  float a_I_lsm.2559;
  int i;
  int D.17489;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _42;
  unsigned int ivtmp_47;
  unsigned int ivtmp_49;
  unsigned int ivtmp_50;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;
  unsigned int ivtmp_53;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s257 ");
  start_t_16 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # j_44 = PHI <0(5), j_19(11)>
  # ivtmp_53 = PHI <256(5), ivtmp_52(11)>
  _1 = aa[j_44][i_35];
  _4 = _1 - _3;
  _5 = bb[j_44][i_35];
  _6 = _4 + _5;
  aa[j_44][i_35] = _6;
  j_19 = j_44 + 1;
  ivtmp_52 = ivtmp_53 - 1;
  if (ivtmp_52 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  # _42 = PHI <_4(3)>
  a[i_35] = _42;
  i_20 = i_35 + 1;
  ivtmp_50 = ivtmp_51 - 1;
  if (ivtmp_50 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # i_35 = PHI <1(7), i_20(10)>
  # ivtmp_51 = PHI <255(7), ivtmp_50(10)>
  _2 = i_35 + -1;
  _3 = a[_2];
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_34 + 1;
  ivtmp_47 = ivtmp_49 - 1;
  if (ivtmp_47 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_34 = PHI <0(2), nl_22(9)>
  # ivtmp_49 = PHI <390(2), ivtmp_47(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_16;
  printf ("S257\t %.3f \t\t", clock_dif_25);
  check (111);
  return 0;
;;    succ:       EXIT

}



;; Function s258 (s258, funcdef_no=627, decl_uid=9402, cgraph_uid=627, symbol_order=648)

s258 ()
{
  int i;
  int nl;
  float s;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _3;
  float _4;
  float _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_34;
  unsigned int ivtmp_35;
  unsigned int ivtmp_37;
  unsigned int ivtmp_43;
  float pretmp_44;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s258 ");
  start_t_19 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # s_38 = PHI <0.0(7), s_10(10)>
  # i_40 = PHI <0(7), i_23(10)>
  # ivtmp_43 = PHI <256(7), ivtmp_37(10)>
  _1 = a[i_40];
  pretmp_44 = d[i_40];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  s_20 = pretmp_44 * pretmp_44;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  # s_10 = PHI <s_20(4), s_38(3)>
  _3 = c[i_40];
  _4 = _3 * s_10;
  _6 = _4 + pretmp_44;
  b[i_40] = _6;
  _7 = s_10 + 1.0e+0;
  _8 = aa[0][i_40];
  _9 = _7 * _8;
  e[i_40] = _9;
  i_23 = i_40 + 1;
  ivtmp_37 = ivtmp_43 - 1;
  if (ivtmp_37 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_25 = nl_39 + 1;
  ivtmp_34 = ivtmp_35 - 1;
  if (ivtmp_34 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_39 = PHI <0(2), nl_25(9)>
  # ivtmp_35 = PHI <10000(2), ivtmp_34(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_19;
  printf ("S258\t %.3f \t\t", clock_dif_28);
  check (25);
  return 0;
;;    succ:       EXIT

}



;; Function s261 (s261, funcdef_no=628, decl_uid=9416, cgraph_uid=628, symbol_order=649)

s261 ()
{
  int i;
  int D.17544;
  int i;
  int nl;
  float t;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_49;
  unsigned int ivtmp_50;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s261 ");
  start_t_15 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_33 = PHI <1(5), i_20(8)>
  # ivtmp_52 = PHI <31999(5), ivtmp_51(8)>
  _1 = a[i_33];
  _2 = b[i_33];
  t_16 = _1 + _2;
  _3 = i_33 + -1;
  _4 = c[_3];
  _5 = _4 + t_16;
  a[i_33] = _5;
  _6 = c[i_33];
  _7 = d[i_33];
  t_18 = _6 * _7;
  c[i_33] = t_18;
  i_20 = i_33 + 1;
  ivtmp_51 = ivtmp_52 - 1;
  if (ivtmp_51 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_49 = ivtmp_50 - 1;
  if (ivtmp_49 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_22(7)>
  # ivtmp_50 = PHI <10000(2), ivtmp_49(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_15;
  printf ("S261\t %.3f \t\t", clock_dif_25);
  check (13);
  return 0;
;;    succ:       EXIT

}



;; Function s271 (s271, funcdef_no=629, decl_uid=9430, cgraph_uid=629, symbol_order=650)

s271 ()
{
  int i;
  int D.17573;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_7;
  unsigned int ivtmp_26;
  unsigned int ivtmp_27;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s271 ");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_29 = PHI <0(7), i_16(10)>
  # ivtmp_38 = PHI <32000(7), ivtmp_27(10)>
  _1 = b[i_29];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _2 = a[i_29];
  _3 = c[i_29];
  _4 = _1 * _3;
  _5 = _2 + _4;
  a[i_29] = _5;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  i_16 = i_29 + 1;
  ivtmp_27 = ivtmp_38 - 1;
  if (ivtmp_27 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_7 = ivtmp_26 - 1;
  if (ivtmp_7 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_28 = PHI <0(2), nl_18(9)>
  # ivtmp_26 = PHI <40000(2), ivtmp_7(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S271\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s272 (s272, funcdef_no=630, decl_uid=9444, cgraph_uid=630, symbol_order=651)

s272 (float t)
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_14;
  unsigned int ivtmp_33;
  unsigned int ivtmp_34;
  unsigned int ivtmp_35;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s272 ");
  start_t_18 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_37 = PHI <0(7), i_22(10)>
  # ivtmp_35 = PHI <32000(7), ivtmp_34(10)>
  _1 = e[i_37];
  if (_1 >= t_19(D))
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _2 = a[i_37];
  _3 = c[i_37];
  _4 = d[i_37];
  _5 = _3 * _4;
  _6 = _2 + _5;
  a[i_37] = _6;
  _7 = b[i_37];
  _8 = _3 * _3;
  _9 = _7 + _8;
  b[i_37] = _9;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  i_22 = i_37 + 1;
  ivtmp_34 = ivtmp_35 - 1;
  if (ivtmp_34 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_36 + 1;
  ivtmp_14 = ivtmp_33 - 1;
  if (ivtmp_14 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_36 = PHI <0(2), nl_24(9)>
  # ivtmp_33 = PHI <10000(2), ivtmp_14(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_18;
  printf ("S272\t %.3f \t\t", clock_dif_27);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s273 (s273, funcdef_no=631, decl_uid=9457, cgraph_uid=631, symbol_order=652)

s273 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _10;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  unsigned int ivtmp_61;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s273 ");
  start_t_19 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_38 = PHI <0(7), i_23(10)>
  # ivtmp_61 = PHI <32000(7), ivtmp_58(10)>
  _1 = a[i_38];
  _2 = d[i_38];
  _3 = e[i_38];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_38] = _5;
  if (_5 < 0.0)
    goto <bb 4>; [41.00%]
  else
    goto <bb 5>; [59.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _6 = b[i_38];
  _7 = _4 + _6;
  b[i_38] = _7;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  _8 = c[i_38];
  _9 = _2 * _5;
  _10 = _8 + _9;
  c[i_38] = _10;
  i_23 = i_38 + 1;
  ivtmp_58 = ivtmp_61 - 1;
  if (ivtmp_58 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_25 = nl_37 + 1;
  ivtmp_56 = ivtmp_57 - 1;
  if (ivtmp_56 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_37 = PHI <0(2), nl_25(9)>
  # ivtmp_57 = PHI <10000(2), ivtmp_56(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_19;
  printf ("S273\t %.3f \t\t", clock_dif_28);
  check (123);
  return 0;
;;    succ:       EXIT

}



;; Function s274 (s274, funcdef_no=632, decl_uid=9470, cgraph_uid=632, symbol_order=653)

s274 ()
{
  int i;
  int D.17634;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_42;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;
  unsigned int ivtmp_47;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s274 ");
  start_t_16 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 11, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                11
  # i_33 = PHI <0(8), i_20(11)>
  # ivtmp_47 = PHI <32000(8), ivtmp_45(11)>
  _1 = c[i_33];
  _2 = e[i_33];
  _3 = d[i_33];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_33] = _5;
  if (_5 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _6 = b[i_33];
  _7 = _5 + _6;
  b[i_33] = _7;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       3
  a[i_33] = _4;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       4
;;                5
  i_20 = i_33 + 1;
  ivtmp_45 = ivtmp_47 - 1;
  if (ivtmp_45 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_42 = ivtmp_44 - 1;
  if (ivtmp_42 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                10
  # nl_32 = PHI <0(2), nl_22(10)>
  # ivtmp_44 = PHI <10000(2), ivtmp_42(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_16;
  printf ("S274\t %.3f \t\t", clock_dif_25);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s275 (s275, funcdef_no=633, decl_uid=9483, cgraph_uid=633, symbol_order=654)

s275 ()
{
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_12;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_47;
  unsigned int ivtmp_48;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s275 ");
  start_t_18 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                11
  # i_39 = PHI <0(7), i_21(11)>
  # ivtmp_47 = PHI <256(7), ivtmp_37(11)>
  _1 = aa[0][i_39];
  if (_1 > 0.0)
    goto <bb 9>; [34.74%]
  else
    goto <bb 5>; [65.26%]
;;    succ:       9
;;                5

;;   basic block 9, loop depth 2
;;    pred:       3
;;    succ:       4

;;   basic block 4, loop depth 3
;;    pred:       9
;;                12
  # j_40 = PHI <1(9), j_20(12)>
  # ivtmp_12 = PHI <255(9), ivtmp_48(12)>
  _2 = j_40 + -1;
  _3 = aa[_2][i_39];
  _4 = bb[j_40][i_39];
  _5 = cc[j_40][i_39];
  _6 = _4 * _5;
  _7 = _3 + _6;
  aa[j_40][i_39] = _7;
  j_20 = j_40 + 1;
  ivtmp_48 = ivtmp_12 - 1;
  if (ivtmp_48 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 5>; [1.01%]
;;    succ:       12
;;                5

;;   basic block 12, loop depth 3
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 2
;;    pred:       3
;;                4
  i_21 = i_39 + 1;
  ivtmp_37 = ivtmp_47 - 1;
  if (ivtmp_37 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       11
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_38 + 1;
  ivtmp_35 = ivtmp_36 - 1;
  if (ivtmp_35 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       10
;;                8

;;   basic block 10, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                10
  # nl_38 = PHI <0(2), nl_23(10)>
  # ivtmp_36 = PHI <390(2), ivtmp_35(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_18;
  printf ("S275\t %.3f \t\t", clock_dif_26);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s2275 (s2275, funcdef_no=634, decl_uid=9500, cgraph_uid=634, symbol_order=655)

Merging blocks 7 and 12
s2275 ()
{
  vector(4) float * vectp_a.2751;
  vector(4) float * vectp_a.2750;
  vector(4) float vect__10.2749;
  vector(4) float vect__9.2748;
  vector(4) float vect__8.2747;
  vector(4) float * vectp_d.2746;
  vector(4) float * vectp_d.2745;
  vector(4) float vect__7.2744;
  vector(4) float * vectp_c.2743;
  vector(4) float * vectp_c.2742;
  vector(4) float vect__6.2741;
  vector(4) float * vectp_b.2740;
  vector(4) float * vectp_b.2739;
  vector(4) float * vectp_aa.2738;
  vector(4) float * vectp_aa.2737;
  vector(4) float vect__5.2736;
  vector(4) float vect__4.2735;
  vector(4) float vect__3.2734;
  vector(4) float * vectp_cc.2733;
  vector(4) float * vectp_cc.2732;
  vector(4) float vect__2.2731;
  vector(4) float * vectp_bb.2730;
  vector(4) float * vectp_bb.2729;
  vector(4) float vect__1.2728;
  vector(4) float * vectp_aa.2727;
  vector(4) float * vectp_aa.2726;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _10;
  unsigned int ivtmp_68;
  unsigned int ivtmp_69;
  unsigned int ivtmp_70;
  unsigned int ivtmp_71;
  unsigned int ivtmp_73;
  unsigned int ivtmp_74;
  unsigned int ivtmp_75;
  unsigned int ivtmp_76;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s275 ");
  start_t_20 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # j_43 = PHI <0(5), j_22(11)>
  # ivtmp_76 = PHI <256(5), ivtmp_75(11)>
  # vectp_aa.2726_65 = PHI <vectp_aa.2726_67(5), vectp_aa.2726_64(11)>
  # vectp_bb.2729_60 = PHI <vectp_bb.2729_62(5), vectp_bb.2729_59(11)>
  # vectp_cc.2732_55 = PHI <vectp_cc.2732_57(5), vectp_cc.2732_54(11)>
  # vectp_aa.2737_48 = PHI <vectp_aa.2737_50(5), vectp_aa.2737_47(11)>
  vect__1.2728_63 = MEM[(float *)vectp_aa.2726_65];
  _1 = aa[j_43][i_42];
  vect__2.2731_58 = MEM[(float *)vectp_bb.2729_60];
  _2 = bb[j_43][i_42];
  vect__3.2734_53 = MEM[(float *)vectp_cc.2732_55];
  _3 = cc[j_43][i_42];
  vect__4.2735_52 = vect__2.2731_58 * vect__3.2734_53;
  _4 = _2 * _3;
  vect__5.2736_51 = vect__1.2728_63 + vect__4.2735_52;
  _5 = _1 + _4;
  MEM[(float *)vectp_aa.2737_48] = vect__5.2736_51;
  j_22 = j_43 + 1;
  ivtmp_75 = ivtmp_76 - 1;
  vectp_aa.2726_64 = vectp_aa.2726_65 + 1024;
  vectp_bb.2729_59 = vectp_bb.2729_60 + 1024;
  vectp_cc.2732_54 = vectp_cc.2732_55 + 1024;
  vectp_aa.2737_47 = vectp_aa.2737_48 + 1024;
  if (ivtmp_75 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  vect__6.2741_37 = MEM[(float *)vectp_b.2739_39];
  _6 = b[i_42];
  vect__7.2744_34 = MEM[(float *)vectp_c.2742_36];
  _7 = c[i_42];
  vect__8.2747_16 = MEM[(float *)vectp_d.2745_33];
  _8 = d[i_42];
  vect__9.2748_15 = vect__7.2744_34 * vect__8.2747_16;
  _9 = _7 * _8;
  vect__10.2749_14 = vect__6.2741_37 + vect__9.2748_15;
  _10 = _6 + _9;
  MEM[(float *)vectp_a.2750_13] = vect__10.2749_14;
  i_24 = i_42 + 1;
  ivtmp_70 = ivtmp_71 - 1;
  vectp_aa.2726_66 = vectp_aa.2726_67 + 16;
  vectp_bb.2729_61 = vectp_bb.2729_62 + 16;
  vectp_cc.2732_56 = vectp_cc.2732_57 + 16;
  vectp_aa.2737_49 = vectp_aa.2737_50 + 16;
  vectp_b.2739_38 = vectp_b.2739_39 + 16;
  vectp_c.2742_35 = vectp_c.2742_36 + 16;
  vectp_d.2745_32 = vectp_d.2745_33 + 16;
  vectp_a.2750_12 = vectp_a.2750_13 + 16;
  ivtmp_73 = ivtmp_74 + 1;
  if (ivtmp_73 < 64)
    goto <bb 10>; [96.00%]
  else
    goto <bb 6>; [4.00%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       10
;;                7
  # i_42 = PHI <i_24(10), 0(7)>
  # ivtmp_71 = PHI <ivtmp_70(10), 256(7)>
  # vectp_aa.2726_67 = PHI <vectp_aa.2726_66(10), &aa(7)>
  # vectp_bb.2729_62 = PHI <vectp_bb.2729_61(10), &bb(7)>
  # vectp_cc.2732_57 = PHI <vectp_cc.2732_56(10), &cc(7)>
  # vectp_aa.2737_50 = PHI <vectp_aa.2737_49(10), &aa(7)>
  # vectp_b.2739_39 = PHI <vectp_b.2739_38(10), &b(7)>
  # vectp_c.2742_36 = PHI <vectp_c.2742_35(10), &c(7)>
  # vectp_d.2745_33 = PHI <vectp_d.2745_32(10), &d(7)>
  # vectp_a.2750_13 = PHI <vectp_a.2750_12(10), &a(7)>
  # ivtmp_74 = PHI <ivtmp_73(10), 0(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_26 = nl_41 + 1;
  ivtmp_68 = ivtmp_69 - 1;
  if (ivtmp_68 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_41 = PHI <0(2), nl_26(9)>
  # ivtmp_69 = PHI <3900(2), ivtmp_68(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_28 = mysecond ();
  clock_dif_29 = end_t_28 - start_t_20;
  printf ("S2275\t %.3f \t\t", clock_dif_29);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s276 (s276, funcdef_no=635, decl_uid=9517, cgraph_uid=635, symbol_order=656)

s276 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _4;
  float _5;
  float _6;
  float _9;
  float _10;
  float _11;
  float pretmp_15;
  float pretmp_16;
  unsigned int ivtmp_22;
  float cstore_35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s276 ");
  start_t_20 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 11, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                11
  # i_40 = PHI <0(8), _1(11)>
  # ivtmp_38 = PHI <32000(8), ivtmp_37(11)>
  _1 = i_40 + 1;
  pretmp_16 = a[i_40];
  pretmp_15 = b[i_40];
  if (i_40 <= 15998)
    goto <bb 4>; [49.99%]
  else
    goto <bb 5>; [50.01%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _4 = c[i_40];
  _5 = _4 * pretmp_15;
  _6 = _5 + pretmp_16;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       3
  _9 = d[i_40];
  _10 = _9 * pretmp_15;
  _11 = _10 + pretmp_16;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       4
;;                5
  # cstore_35 = PHI <_6(4), _11(5)>
  a[i_40] = cstore_35;
  ivtmp_37 = ivtmp_38 - 1;
  if (ivtmp_37 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_25 = nl_39 + 1;
  ivtmp_22 = ivtmp_36 - 1;
  if (ivtmp_22 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                10
  # nl_39 = PHI <0(2), nl_25(10)>
  # ivtmp_36 = PHI <40000(2), ivtmp_22(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_20;
  printf ("S276\t %.3f \t\t", clock_dif_28);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s277 (s277, funcdef_no=636, decl_uid=9531, cgraph_uid=636, symbol_order=657)

s277 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _5;
  float _6;
  float _9;
  float _10;
  float _12;
  unsigned int ivtmp_18;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_38;
  float pretmp_43;
  float pretmp_44;
  int _45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s277 ");
  start_t_22 = mysecond ();
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 12, loop depth 2
;;    pred:       7
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       9
;;                12
  # i_40 = PHI <0(9), _45(12)>
  # ivtmp_38 = PHI <31999(9), ivtmp_37(12)>
  _1 = a[i_40];
  _45 = i_40 + 1;
  if (_1 >= 0.0)
    goto <bb 7>; [42.57%]
  else
    goto <bb 4>; [57.43%]
;;    succ:       7
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  _2 = b[i_40];
  pretmp_43 = c[i_40];
  pretmp_44 = d[i_40];
  if (_2 >= 0.0)
    goto <bb 6>; [42.57%]
  else
    goto <bb 5>; [57.43%]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 2
;;    pred:       4
  _5 = pretmp_43 * pretmp_44;
  _6 = _1 + _5;
  a[i_40] = _6;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                4
L30:
  _9 = e[i_40];
  _10 = _9 * pretmp_44;
  _12 = _10 + pretmp_43;
  b[_45] = _12;
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       6
;;                3
L20:
  ivtmp_37 = ivtmp_38 - 1;
  if (ivtmp_37 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 8, loop depth 1
;;    pred:       7
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_27 = nl_39 + 1;
  ivtmp_18 = ivtmp_36 - 1;
  if (ivtmp_18 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       8
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       2
;;                11
  # nl_39 = PHI <0(2), nl_27(11)>
  # ivtmp_36 = PHI <10000(2), ivtmp_18(11)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 0
;;    pred:       8
  end_t_29 = mysecond ();
  clock_dif_30 = end_t_29 - start_t_22;
  printf ("S277\t %.3f \t\t", clock_dif_30);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s278 (s278, funcdef_no=637, decl_uid=9546, cgraph_uid=637, symbol_order=658)

s278 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _6;
  float _11;
  float _15;
  float _16;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  float pretmp_58;
  float pretmp_59;
  float _60;
  float pretmp_61;
  float pretmp_62;
  float prephitmp_64;
  float prephitmp_66;
  unsigned int ivtmp_68;
  unsigned int ivtmp_69;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s278 ");
  start_t_25 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 11, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                11
  # i_44 = PHI <0(8), i_29(11)>
  # ivtmp_69 = PHI <32000(8), ivtmp_68(11)>
  _1 = a[i_44];
  pretmp_58 = d[i_44];
  pretmp_59 = e[i_44];
  _60 = pretmp_58 * pretmp_59;
  pretmp_61 = b[i_44];
  pretmp_62 = c[i_44];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _11 = _60 - pretmp_62;
  c[i_44] = _11;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       3
  _6 = _60 - pretmp_61;
  b[i_44] = _6;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                4
  # prephitmp_64 = PHI <_6(5), pretmp_61(4)>
  # prephitmp_66 = PHI <pretmp_62(5), _11(4)>
L30:
  _15 = pretmp_58 * prephitmp_66;
  _16 = _15 + prephitmp_64;
  a[i_44] = _16;
  i_29 = i_44 + 1;
  ivtmp_68 = ivtmp_69 - 1;
  if (ivtmp_68 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_31 = nl_43 + 1;
  ivtmp_56 = ivtmp_57 - 1;
  if (ivtmp_56 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                10
  # nl_43 = PHI <0(2), nl_31(10)>
  # ivtmp_57 = PHI <10000(2), ivtmp_56(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_33 = mysecond ();
  clock_dif_34 = end_t_33 - start_t_25;
  printf ("S278\t %.3f \t\t", clock_dif_34);
  check (123);
  return 0;
;;    succ:       EXIT

}



;; Function s279 (s279, funcdef_no=638, decl_uid=9561, cgraph_uid=638, symbol_order=659)

s279 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _3;
  float _5;
  float _7;
  float _8;
  float _9;
  float _10;
  float _11;
  float _13;
  float _17;
  float _18;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  unsigned int ivtmp_59;
  unsigned int ivtmp_60;
  float pretmp_61;
  float pretmp_62;
  float pretmp_63;
  float prephitmp_65;
  float prephitmp_67;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s279 ");
  start_t_27 = mysecond ();
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 12, loop depth 2
;;    pred:       7
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       9
;;                12
  # i_47 = PHI <0(9), i_32(12)>
  # ivtmp_60 = PHI <32000(9), ivtmp_59(12)>
  _1 = a[i_47];
  pretmp_61 = d[i_47];
  pretmp_62 = b[i_47];
  pretmp_63 = c[i_47];
  if (_1 > 0.0)
    goto <bb 4>; [42.57%]
  else
    goto <bb 5>; [57.43%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _10 = e[i_47];
  _11 = _10 * _10;
  _13 = _11 - pretmp_63;
  c[i_47] = _13;
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 5, loop depth 2
;;    pred:       3
  _3 = pretmp_61 * pretmp_61;
  _5 = _3 - pretmp_62;
  b[i_47] = _5;
  if (_1 >= _5)
    goto <bb 14>; [50.00%]
  else
    goto <bb 6>; [50.00%]
;;    succ:       14
;;                6

;;   basic block 14, loop depth 2
;;    pred:       5
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 6, loop depth 2
;;    pred:       5
  _7 = e[i_47];
  _8 = _7 * pretmp_61;
  _9 = _8 + pretmp_63;
  c[i_47] = _9;
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       4
;;                6
;;                14
  # prephitmp_65 = PHI <pretmp_62(4), _5(6), _5(14)>
  # prephitmp_67 = PHI <_13(4), _9(6), pretmp_63(14)>
L30:
  _17 = pretmp_61 * prephitmp_67;
  _18 = _17 + prephitmp_65;
  a[i_47] = _18;
  i_32 = i_47 + 1;
  ivtmp_59 = ivtmp_60 - 1;
  if (ivtmp_59 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 8, loop depth 1
;;    pred:       7
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_34 = nl_46 + 1;
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       8
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       2
;;                11
  # nl_46 = PHI <0(2), nl_34(11)>
  # ivtmp_58 = PHI <5000(2), ivtmp_57(11)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 0
;;    pred:       8
  end_t_36 = mysecond ();
  clock_dif_37 = end_t_36 - start_t_27;
  printf ("S279\t %.3f \t\t", clock_dif_37);
  check (123);
  return 0;
;;    succ:       EXIT

}



;; Function s1279 (s1279, funcdef_no=639, decl_uid=9576, cgraph_uid=639, symbol_order=660)

s1279 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_9;
  unsigned int ivtmp_29;
  unsigned int ivtmp_30;
  unsigned int ivtmp_31;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s279 ");
  start_t_16 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 11, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                11
  # i_33 = PHI <0(8), i_18(11)>
  # ivtmp_31 = PHI <32000(8), ivtmp_30(11)>
  _1 = a[i_33];
  if (_1 < 0.0)
    goto <bb 4>; [41.00%]
  else
    goto <bb 17>; [59.00%]
;;    succ:       4
;;                17

;;   basic block 17, loop depth 2
;;    pred:       3
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 4, loop depth 2
;;    pred:       3
  _2 = b[i_33];
  if (_1 < _2)
    goto <bb 5>; [50.00%]
  else
    goto <bb 16>; [50.00%]
;;    succ:       5
;;                16

;;   basic block 16, loop depth 2
;;    pred:       4
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       4
  _3 = c[i_33];
  _4 = d[i_33];
  _5 = e[i_33];
  _6 = _4 * _5;
  _7 = _3 + _6;
  c[i_33] = _7;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                16
;;                17
  i_18 = i_33 + 1;
  ivtmp_30 = ivtmp_31 - 1;
  if (ivtmp_30 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_32 + 1;
  ivtmp_9 = ivtmp_29 - 1;
  if (ivtmp_9 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                10
  # nl_32 = PHI <0(2), nl_20(10)>
  # ivtmp_29 = PHI <10000(2), ivtmp_9(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_16;
  printf ("S1279\t %.3f \t\t", clock_dif_23);
  check (123);
  return 0;
;;    succ:       EXIT

}



;; Function s2710 (s2710, funcdef_no=640, decl_uid=9590, cgraph_uid=640, symbol_order=661)

s2710 (float x)
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _12;
  float _13;
  float _14;
  float _15;
  float _16;
  float _17;
  float _18;
  unsigned int ivtmp_19;
  unsigned int ivtmp_20;
  float _21;
  unsigned int ivtmp_31;
  float _40;
  float _41;
  float _42;
  float _43;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;
  unsigned int ivtmp_53;
  float _55;
  float _56;
  float _57;
  float _59;
  float _60;
  float _61;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s2710");
  start_t_25 = mysecond ();
  goto <bb 10>; [100.00%]
;;    succ:       10

;;   basic block 13, loop depth 2
;;    pred:       8
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       13
;;                22
  # i_47 = PHI <i_32(13), 0(22)>
  # ivtmp_31 = PHI <ivtmp_51(13), 32000(22)>
  _1 = a[i_47];
  _2 = b[i_47];
  if (_1 > _2)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _3 = d[i_47];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_47] = _5;
  _6 = c[i_47];
  _7 = _3 * _3;
  _8 = _6 + _7;
  c[i_47] = _8;
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 5, loop depth 2
;;    pred:       3
  _13 = e[i_47];
  _14 = _13 * _13;
  _15 = _1 + _14;
  b[i_47] = _15;
  _16 = d[i_47];
  _17 = _16 * _16;
  _18 = _1 + _17;
  c[i_47] = _18;
;;    succ:       8

;;   basic block 8, loop depth 2
;;    pred:       4
;;                5
  i_32 = i_47 + 1;
  ivtmp_51 = ivtmp_31 - 1;
  if (ivtmp_51 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       13
;;                9

;;   basic block 9, loop depth 1
;;    pred:       19
;;                8
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_34 = nl_46 + 1;
  ivtmp_53 = ivtmp_52 - 1;
  if (ivtmp_53 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 11>; [1.01%]
;;    succ:       12
;;                11

;;   basic block 12, loop depth 1
;;    pred:       9
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       2
;;                12
  # nl_46 = PHI <0(2), nl_34(12)>
  # ivtmp_52 = PHI <5000(2), ivtmp_53(12)>
  if (x_29(D) > 0.0)
    goto <bb 22>; [59.00%]
  else
    goto <bb 23>; [41.00%]
;;    succ:       23
;;                22

;;   basic block 22, loop depth 1
;;    pred:       10
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 23, loop depth 1
;;    pred:       10
;;    succ:       14

;;   basic block 14, loop depth 2
;;    pred:       20
;;                23
  # i_45 = PHI <i_64(20), 0(23)>
  # ivtmp_19 = PHI <ivtmp_20(20), 32000(23)>
  _43 = a[i_45];
  _41 = b[i_45];
  if (_43 > _41)
    goto <bb 18>; [50.00%]
  else
    goto <bb 15>; [50.00%]
;;    succ:       18
;;                15

;;   basic block 15, loop depth 2
;;    pred:       14
  _40 = e[i_45];
  _21 = _40 * _40;
  _12 = _43 + _21;
  b[i_45] = _12;
  _42 = c[i_45];
  _9 = _21 + _42;
  c[i_45] = _9;
  goto <bb 19>; [100.00%]
;;    succ:       19

;;   basic block 18, loop depth 2
;;    pred:       14
  _55 = d[i_45];
  _56 = _41 * _55;
  _57 = _43 + _56;
  a[i_45] = _57;
  _59 = c[i_45];
  _60 = _55 * _55;
  _61 = _59 + _60;
  c[i_45] = _61;
;;    succ:       19

;;   basic block 19, loop depth 2
;;    pred:       15
;;                18
  i_64 = i_45 + 1;
  ivtmp_20 = ivtmp_19 - 1;
  if (ivtmp_20 != 0)
    goto <bb 20>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       20
;;                9

;;   basic block 20, loop depth 2
;;    pred:       19
  goto <bb 14>; [100.00%]
;;    succ:       14

;;   basic block 11, loop depth 0
;;    pred:       9
  end_t_36 = mysecond ();
  clock_dif_37 = end_t_36 - start_t_25;
  printf ("S2710\t %.3f \t\t", clock_dif_37);
  check (123);
  return 0;
;;    succ:       EXIT

}



;; Function s2711 (s2711, funcdef_no=641, decl_uid=9603, cgraph_uid=641, symbol_order=662)

s2711 ()
{
  int i;
  int D.17890;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_7;
  unsigned int ivtmp_26;
  unsigned int ivtmp_27;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s2711");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_29 = PHI <0(7), i_16(10)>
  # ivtmp_38 = PHI <32000(7), ivtmp_27(10)>
  _1 = b[i_29];
  if (_1 != 0.0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _2 = a[i_29];
  _3 = c[i_29];
  _4 = _1 * _3;
  _5 = _2 + _4;
  a[i_29] = _5;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  i_16 = i_29 + 1;
  ivtmp_27 = ivtmp_38 - 1;
  if (ivtmp_27 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_7 = ivtmp_26 - 1;
  if (ivtmp_7 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_28 = PHI <0(2), nl_18(9)>
  # ivtmp_26 = PHI <40000(2), ivtmp_7(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S2711\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s2712 (s2712, funcdef_no=642, decl_uid=9616, cgraph_uid=642, symbol_order=663)

s2712 ()
{
  int i;
  int D.17911;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_7;
  unsigned int ivtmp_26;
  unsigned int ivtmp_27;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s2712");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_29 = PHI <0(7), i_16(10)>
  # ivtmp_38 = PHI <32000(7), ivtmp_27(10)>
  _1 = a[i_29];
  _2 = b[i_29];
  if (_1 > _2)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _3 = c[i_29];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_29] = _5;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  i_16 = i_29 + 1;
  ivtmp_27 = ivtmp_38 - 1;
  if (ivtmp_27 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_7 = ivtmp_26 - 1;
  if (ivtmp_7 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_28 = PHI <0(2), nl_18(9)>
  # ivtmp_26 = PHI <40000(2), ivtmp_7(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S2712\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s281 (s281, funcdef_no=643, decl_uid=9629, cgraph_uid=643, symbol_order=664)

s281 ()
{
  int i;
  int D.17932;
  int i;
  int nl;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s281 ");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_31 = PHI <0(5), i_18(8)>
  # ivtmp_45 = PHI <32000(5), ivtmp_44(8)>
  _1 = 31999 - i_31;
  _2 = a[_1];
  _3 = b[i_31];
  _4 = c[i_31];
  _5 = _3 * _4;
  x_15 = _2 + _5;
  _6 = x_15 - 1.0e+0;
  a[i_31] = _6;
  b[i_31] = x_15;
  i_18 = i_31 + 1;
  ivtmp_44 = ivtmp_45 - 1;
  if (ivtmp_44 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_30 + 1;
  ivtmp_42 = ivtmp_43 - 1;
  if (ivtmp_42 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_30 = PHI <0(2), nl_20(7)>
  # ivtmp_43 = PHI <10000(2), ivtmp_42(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_14;
  printf ("S281\t %.3f \t\t", clock_dif_23);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s1281 (s1281, funcdef_no=644, decl_uid=9643, cgraph_uid=644, symbol_order=665)

Merging blocks 5 and 9
s1281 ()
{
  vector(4) float * vectp_b.2974;
  vector(4) float * vectp_b.2973;
  vector(4) float * vectp_a.2972;
  vector(4) float * vectp_a.2971;
  vector(4) float vect__9.2970;
  vector(4) float vect_x_18.2969;
  vector(4) float vect__8.2968;
  vector(4) float * vectp_e.2967;
  vector(4) float * vectp_e.2966;
  vector(4) float vect__7.2965;
  vector(4) float vect__6.2964;
  vector(4) float vect__5.2963;
  vector(4) float * vectp_d.2962;
  vector(4) float * vectp_d.2961;
  vector(4) float vect__4.2960;
  vector(4) float * vectp_a.2959;
  vector(4) float * vectp_a.2958;
  vector(4) float vect__3.2957;
  vector(4) float vect__2.2956;
  vector(4) float * vectp_c.2955;
  vector(4) float * vectp_c.2954;
  vector(4) float vect__1.2953;
  vector(4) float * vectp_b.2952;
  vector(4) float * vectp_b.2951;
  int i;
  int D.17956;
  int i;
  int nl;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_13;
  unsigned int ivtmp_15;
  vector(4) float vect_cst__39;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;
  unsigned int ivtmp_63;
  unsigned int ivtmp_64;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s281 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_34 = PHI <i_21(8), 0(5)>
  # ivtmp_64 = PHI <ivtmp_63(8), 32000(5)>
  # vectp_b.2951_60 = PHI <vectp_b.2951_59(8), &b(5)>
  # vectp_c.2954_57 = PHI <vectp_c.2954_56(8), &c(5)>
  # vectp_a.2958_53 = PHI <vectp_a.2958_52(8), &a(5)>
  # vectp_d.2961_50 = PHI <vectp_d.2961_48(8), &d(5)>
  # vectp_e.2966_43 = PHI <vectp_e.2966_42(8), &e(5)>
  # vectp_a.2971_37 = PHI <vectp_a.2971_36(8), &a(5)>
  # vectp_b.2973_31 = PHI <vectp_b.2973_30(8), &b(5)>
  # ivtmp_15 = PHI <ivtmp_13(8), 0(5)>
  vect__1.2953_58 = MEM[(float *)vectp_b.2951_60];
  _1 = b[i_34];
  vect__2.2956_55 = MEM[(float *)vectp_c.2954_57];
  _2 = c[i_34];
  vect__3.2957_54 = vect__1.2953_58 * vect__2.2956_55;
  _3 = _1 * _2;
  vect__4.2960_51 = MEM[(float *)vectp_a.2958_53];
  _4 = a[i_34];
  vect__5.2963_47 = MEM[(float *)vectp_d.2961_50];
  _5 = d[i_34];
  vect__6.2964_46 = vect__4.2960_51 * vect__5.2963_47;
  _6 = _4 * _5;
  vect__7.2965_45 = vect__3.2957_54 + vect__6.2964_46;
  _7 = _3 + _6;
  vect__8.2968_41 = MEM[(float *)vectp_e.2966_43];
  _8 = e[i_34];
  vect_x_18.2969_40 = vect__7.2965_45 + vect__8.2968_41;
  x_18 = _7 + _8;
  vect__9.2970_38 = vect_x_18.2969_40 - vect_cst__39;
  _9 = x_18 - 1.0e+0;
  MEM[(float *)vectp_a.2971_37] = vect__9.2970_38;
  MEM[(float *)vectp_b.2973_31] = vect_x_18.2969_40;
  i_21 = i_34 + 1;
  ivtmp_63 = ivtmp_64 - 1;
  vectp_b.2951_59 = vectp_b.2951_60 + 16;
  vectp_c.2954_56 = vectp_c.2954_57 + 16;
  vectp_a.2958_52 = vectp_a.2958_53 + 16;
  vectp_d.2961_48 = vectp_d.2961_50 + 16;
  vectp_e.2966_42 = vectp_e.2966_43 + 16;
  vectp_a.2971_36 = vectp_a.2971_37 + 16;
  vectp_b.2973_30 = vectp_b.2973_31 + 16;
  ivtmp_13 = ivtmp_15 + 1;
  if (ivtmp_13 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_33 + 1;
  ivtmp_61 = ivtmp_62 - 1;
  if (ivtmp_61 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_23(7)>
  # ivtmp_62 = PHI <40000(2), ivtmp_61(7)>
  vect_cst__39 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_17;
  printf ("S1281\t %.3f \t\t", clock_dif_26);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s291 (s291, funcdef_no=645, decl_uid=9657, cgraph_uid=645, symbol_order=666)

s291 ()
{
  int i;
  int D.18005;
  int i;
  int nl;
  int im1;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _3;
  float _4;
  unsigned int ivtmp_28;
  float pretmp_31;
  float prephitmp_32;
  unsigned int ivtmp_34;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s291 ");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_29 = PHI <0(5), i_15(8)>
  # prephitmp_32 = PHI <pretmp_31(5), _1(8)>
  # ivtmp_28 = PHI <32000(5), ivtmp_37(8)>
  _1 = b[i_29];
  _3 = _1 + prephitmp_32;
  _4 = _3 * 5.0e-1;
  a[i_29] = _4;
  i_15 = i_29 + 1;
  ivtmp_37 = ivtmp_28 - 1;
  if (ivtmp_37 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_38 + 1;
  ivtmp_34 = ivtmp_36 - 1;
  if (ivtmp_34 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_38 = PHI <0(2), nl_17(7)>
  # ivtmp_36 = PHI <20000(2), ivtmp_34(7)>
  pretmp_31 = b[31999];
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_13;
  printf ("S291\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s292 (s292, funcdef_no=646, decl_uid=9671, cgraph_uid=646, symbol_order=667)

s292 ()
{
  int i;
  int D.18025;
  int i;
  int nl;
  int im2;
  int im1;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _3;
  float _5;
  float _6;
  float prephitmp_14;
  unsigned int ivtmp_32;
  unsigned int ivtmp_41;
  float pretmp_45;
  float pretmp_47;
  float prephitmp_48;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s292 ");
  start_t_16 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_42 = PHI <0(5), i_18(8)>
  # prephitmp_14 = PHI <pretmp_45(5), _1(8)>
  # prephitmp_48 = PHI <pretmp_47(5), prephitmp_14(8)>
  # ivtmp_32 = PHI <32000(5), ivtmp_41(8)>
  _1 = b[i_42];
  _3 = _1 + prephitmp_14;
  _5 = _3 + prephitmp_48;
  _6 = _5 * 3.33000004291534423828125e-1;
  a[i_42] = _6;
  i_18 = i_42 + 1;
  ivtmp_41 = ivtmp_32 - 1;
  if (ivtmp_41 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_33 + 1;
  ivtmp_51 = ivtmp_52 - 1;
  if (ivtmp_51 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_20(7)>
  # ivtmp_52 = PHI <10000(2), ivtmp_51(7)>
  pretmp_45 = b[31999];
  pretmp_47 = b[31998];
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_16;
  printf ("S292\t %.3f \t\t", clock_dif_23);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s293 (s293, funcdef_no=647, decl_uid=9686, cgraph_uid=647, symbol_order=668)

s293 ()
{
  int i;
  int D.18045;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_20;
  unsigned int ivtmp_22;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s293 ");
  start_t_9 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_24 = PHI <0(5), i_11(8)>
  # ivtmp_20 = PHI <32000(5), ivtmp_2(8)>
  _1 = a[0];
  a[i_24] = _1;
  i_11 = i_24 + 1;
  ivtmp_2 = ivtmp_20 - 1;
  if (ivtmp_2 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_13 = nl_23 + 1;
  ivtmp_22 = ivtmp_3 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_23 = PHI <0(2), nl_13(7)>
  # ivtmp_3 = PHI <40000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_15 = mysecond ();
  clock_dif_16 = end_t_15 - start_t_9;
  printf ("S293\t %.3f \t\t", clock_dif_16);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s2101 (s2101, funcdef_no=648, decl_uid=9699, cgraph_uid=648, symbol_order=669)

s2101 ()
{
  int i;
  int D.18063;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s2101");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_28 = PHI <0(5), i_15(8)>
  # ivtmp_42 = PHI <256(5), ivtmp_40(8)>
  _1 = aa[i_28][i_28];
  _2 = bb[i_28][i_28];
  _3 = cc[i_28][i_28];
  _4 = _2 * _3;
  _5 = _1 + _4;
  aa[i_28][i_28] = _5;
  i_15 = i_28 + 1;
  ivtmp_40 = ivtmp_42 - 1;
  if (ivtmp_40 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_37 = ivtmp_39 - 1;
  if (ivtmp_37 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_39 = PHI <100000(2), ivtmp_37(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_13;
  printf ("S2101\t %.3f \t\t", clock_dif_20);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s2102 (s2102, funcdef_no=649, decl_uid=9712, cgraph_uid=649, symbol_order=670)

s2102 ()
{
  int i;
  int D.18084;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  unsigned int ivtmp_1;
  unsigned int ivtmp_2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_24;
  unsigned int ivtmp_27;
  unsigned int ivtmp_36;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s2102");
  start_t_10 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # j_38 = PHI <0(5), j_12(11)>
  # ivtmp_36 = PHI <256(5), ivtmp_24(11)>
  aa[j_38][i_29] = 0.0;
  j_12 = j_38 + 1;
  ivtmp_24 = ivtmp_36 - 1;
  if (ivtmp_24 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  aa[i_29][i_29] = 1.0e+0;
  i_14 = i_29 + 1;
  ivtmp_2 = ivtmp_1 - 1;
  if (ivtmp_2 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # i_29 = PHI <0(7), i_14(10)>
  # ivtmp_1 = PHI <256(7), ivtmp_2(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_28 + 1;
  ivtmp_27 = ivtmp_3 - 1;
  if (ivtmp_27 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_28 = PHI <0(2), nl_16(9)>
  # ivtmp_3 = PHI <3900(2), ivtmp_27(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_10;
  printf ("S2102\t %.3f \t\t", clock_dif_19);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s2111 (s2111, funcdef_no=650, decl_uid=9729, cgraph_uid=650, symbol_order=671)

Merging blocks 11 and 21
s2111 ()
{
  float stmp__8.3075;
  vector(4) float vect__6.3074;
  vector(4) float * vectp_aa.3073;
  vector(4) float * vectp_aa.3072;
  float temp_lsm.3071;
  int j;
  int i;
  int i;
  int j;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  unsigned int ivtmp_3;
  float _4;
  float _5;
  float _6;
  float _8;
  sizetype _19;
  sizetype _35;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_46;
  unsigned int ivtmp_48;
  unsigned int ivtmp_50;
  unsigned int ivtmp_52;
  unsigned int ivtmp_53;
  unsigned int ivtmp_54;
  unsigned int ivtmp_65;
  int _69;
  float _73;
  float _74;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s2111");
  start_t_24 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 19, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                19
  # i_57 = PHI <1(5), i_26(19)>
  # ivtmp_48 = PHI <255(5), ivtmp_46(19)>
  _1 = i_57 + -1;
  _2 = aa[j_56][_1];
  _4 = aa[_69][i_57];
  _5 = _2 + _4;
  aa[j_56][i_57] = _5;
  i_26 = i_57 + 1;
  ivtmp_46 = ivtmp_48 - 1;
  if (ivtmp_46 != 0)
    goto <bb 19>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       19
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  j_27 = j_56 + 1;
  ivtmp_43 = ivtmp_44 - 1;
  if (ivtmp_43 != 0)
    goto <bb 18>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       18
;;                6

;;   basic block 18, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                18
  # j_56 = PHI <1(7), j_27(18)>
  # ivtmp_44 = PHI <255(7), ivtmp_43(18)>
  _69 = j_56 + -1;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_29 = nl_55 + 1;
  ivtmp_41 = ivtmp_42 - 1;
  if (ivtmp_41 != 0)
    goto <bb 17>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       17
;;                8

;;   basic block 17, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                17
  # nl_55 = PHI <0(2), nl_29(17)>
  # ivtmp_42 = PHI <3900(2), ivtmp_41(17)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_31 = mysecond ();
  clock_dif_32 = end_t_31 - start_t_24;
  printf ("S2111\t %.3f \t\t", clock_dif_32);
  temp = 0.0;
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 16, loop depth 2
;;    pred:       9
;;    succ:       9

;;   basic block 9, loop depth 2
;;    pred:       16
;;                11
  # j_59 = PHI <j_36(16), 0(11)>
  # temp_lsm.3071_9 = PHI <_8(16), temp_lsm.3071_45(11)>
  # ivtmp_54 = PHI <ivtmp_53(16), 256(11)>
  # vectp_aa.3072_18 = PHI <vectp_aa.3072_17(16), vectp_aa.3073_40(11)>
  # ivtmp_65 = PHI <ivtmp_3(16), 0(11)>
  vect__6.3074_16 = MEM[(float *)vectp_aa.3072_18];
  _6 = aa[i_58][j_59];
  stmp__8.3075_15 = BIT_FIELD_REF <vect__6.3074_16, 32, 0>;
  stmp__8.3075_12 = temp_lsm.3071_9 + stmp__8.3075_15;
  stmp__8.3075_72 = BIT_FIELD_REF <vect__6.3074_16, 32, 32>;
  stmp__8.3075_71 = stmp__8.3075_12 + stmp__8.3075_72;
  stmp__8.3075_70 = BIT_FIELD_REF <vect__6.3074_16, 32, 64>;
  stmp__8.3075_68 = stmp__8.3075_71 + stmp__8.3075_70;
  stmp__8.3075_67 = BIT_FIELD_REF <vect__6.3074_16, 32, 96>;
  _8 = stmp__8.3075_68 + stmp__8.3075_67;
  j_36 = j_59 + 1;
  ivtmp_53 = ivtmp_54 - 1;
  vectp_aa.3072_17 = vectp_aa.3072_18 + 16;
  ivtmp_3 = ivtmp_65 + 1;
  if (ivtmp_3 < 64)
    goto <bb 16>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       16
;;                10

;;   basic block 10, loop depth 1
;;    pred:       9
  # _74 = PHI <_8(9)>
  i_37 = i_58 + 1;
  ivtmp_50 = ivtmp_52 - 1;
  if (ivtmp_50 != 0)
    goto <bb 15>; [98.99%]
  else
    goto <bb 12>; [1.01%]
;;    succ:       15
;;                12

;;   basic block 15, loop depth 1
;;    pred:       10
;;    succ:       11

;;   basic block 11, loop depth 1
;;    pred:       8
;;                15
  # i_58 = PHI <0(8), i_37(15)>
  # temp_lsm.3071_45 = PHI <0.0(8), _74(15)>
  # ivtmp_52 = PHI <256(8), ivtmp_50(15)>
  _35 = (sizetype) i_58;
  _19 = _35 * 1024;
  vectp_aa.3073_40 = &aa + _19;
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 12, loop depth 0
;;    pred:       10
  # _73 = PHI <_74(10)>
  if (_73 == 0.0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 20>; [50.00%]
;;    succ:       13
;;                20

;;   basic block 20, loop depth 0
;;    pred:       12
  temp = _73;
  goto <bb 14>; [100.00%]
;;    succ:       14

;;   basic block 13, loop depth 0
;;    pred:       12
  temp = 3.0e+0;
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       13
;;                20
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s311 (s311, funcdef_no=651, decl_uid=9754, cgraph_uid=651, symbol_order=672)

Merging blocks 5 and 9
s311 ()
{
  float stmp_sum_11.3126;
  vector(4) float vect__1.3125;
  vector(4) float * vectp_a.3124;
  vector(4) float * vectp_a.3123;
  int i;
  int D.18167;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_31;
  unsigned int ivtmp_33;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s311 ");
  start_t_9 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # sum_25 = PHI <sum_11(8), 0.0(5)>
  # i_26 = PHI <i_12(8), 0(5)>
  # ivtmp_33 = PHI <ivtmp_24(8), 32000(5)>
  # vectp_a.3123_3 = PHI <vectp_a.3123_4(8), &a(5)>
  # ivtmp_31 = PHI <ivtmp_38(8), 0(5)>
  vect__1.3125_2 = MEM[(float *)vectp_a.3123_3];
  _1 = a[i_26];
  stmp_sum_11.3126_5 = BIT_FIELD_REF <vect__1.3125_2, 32, 0>;
  stmp_sum_11.3126_32 = sum_25 + stmp_sum_11.3126_5;
  stmp_sum_11.3126_21 = BIT_FIELD_REF <vect__1.3125_2, 32, 32>;
  stmp_sum_11.3126_36 = stmp_sum_11.3126_32 + stmp_sum_11.3126_21;
  stmp_sum_11.3126_28 = BIT_FIELD_REF <vect__1.3125_2, 32, 64>;
  stmp_sum_11.3126_29 = stmp_sum_11.3126_36 + stmp_sum_11.3126_28;
  stmp_sum_11.3126_37 = BIT_FIELD_REF <vect__1.3125_2, 32, 96>;
  sum_11 = stmp_sum_11.3126_29 + stmp_sum_11.3126_37;
  i_12 = i_26 + 1;
  ivtmp_24 = ivtmp_33 - 1;
  vectp_a.3123_4 = vectp_a.3123_3 + 16;
  ivtmp_38 = ivtmp_31 + 1;
  if (ivtmp_38 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # sum_34 = PHI <sum_11(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, sum_34);
  nl_14 = nl_35 + 1;
  ivtmp_22 = ivtmp_23 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_35 = PHI <0(2), nl_14(7)>
  # ivtmp_23 = PHI <100000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_16 = mysecond ();
  clock_dif_17 = end_t_16 - start_t_9;
  printf ("S311\t %.3f \t\t", clock_dif_17);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function test (test, funcdef_no=652, decl_uid=9769, cgraph_uid=652, symbol_order=673)

Merging blocks 2 and 6
test (float * A)
{
  float stmp_s_10.3141;
  vector(4) float vect__4.3140;
  vector(4) float * vectp_A.3139;
  vector(4) float * vectp_A.3138;
  int i;
  float s;
  long unsigned int _1;
  long unsigned int _2;
  float * _3;
  float _4;
  unsigned int ivtmp_21;
  unsigned int ivtmp_22;
  unsigned int ivtmp_25;
  unsigned int ivtmp_26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       5
;;                2
  # s_15 = PHI <s_10(5), 0.0(2)>
  # i_16 = PHI <i_11(5), 0(2)>
  # ivtmp_22 = PHI <ivtmp_21(5), 4(2)>
  # vectp_A.3138_20 = PHI <vectp_A.3138_14(5), A_8(D)(2)>
  # ivtmp_25 = PHI <ivtmp_26(5), 0(2)>
  _1 = (long unsigned int) i_16;
  _2 = _1 * 4;
  _3 = A_8(D) + _2;
  vect__4.3140_13 = MEM[(float *)vectp_A.3138_20];
  _4 = *_3;
  stmp_s_10.3141_7 = BIT_FIELD_REF <vect__4.3140_13, 32, 0>;
  stmp_s_10.3141_6 = s_15 + stmp_s_10.3141_7;
  stmp_s_10.3141_5 = BIT_FIELD_REF <vect__4.3140_13, 32, 32>;
  stmp_s_10.3141_19 = stmp_s_10.3141_6 + stmp_s_10.3141_5;
  stmp_s_10.3141_12 = BIT_FIELD_REF <vect__4.3140_13, 32, 64>;
  stmp_s_10.3141_17 = stmp_s_10.3141_19 + stmp_s_10.3141_12;
  stmp_s_10.3141_18 = BIT_FIELD_REF <vect__4.3140_13, 32, 96>;
  s_10 = stmp_s_10.3141_17 + stmp_s_10.3141_18;
  i_11 = i_16 + 1;
  ivtmp_21 = ivtmp_22 - 1;
  vectp_A.3138_14 = vectp_A.3138_20 + 16;
  ivtmp_26 = ivtmp_25 + 1;
  if (ivtmp_26 < 1)
    goto <bb 5>; [0.00%]
  else
    goto <bb 4>; [100.00%]
;;    succ:       5
;;                4

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  # s_23 = PHI <s_10(3)>
  return s_23;
;;    succ:       EXIT

}



;; Function s31111 (s31111, funcdef_no=653, decl_uid=9776, cgraph_uid=653, symbol_order=674)

s31111 ()
{
  float s;
  int i;
  float s;
  int i;
  float s;
  int i;
  float s;
  int i;
  float s;
  int i;
  float s;
  int i;
  float s;
  int i;
  float s;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _8;
  float _99;
  float _107;
  float _115;
  float _123;
  float _131;
  float _139;
  float _147;
  float _155;
  float _163;
  float _171;
  float _179;
  float _187;
  float _195;
  float _203;
  float _211;
  float _219;
  float _227;
  float _235;
  float _243;
  float _251;
  float _259;
  float _267;
  float _275;
  float _283;
  float _291;
  float _299;
  float _307;
  float _315;
  float _323;
  float _331;
  unsigned int ivtmp_334;
  unsigned int ivtmp_338;
  float _339;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s311 ");
  start_t_6 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
  # nl_91 = PHI <0(2), nl_27(5)>
  # ivtmp_338 = PHI <20000000(2), ivtmp_334(5)>
  _315 = MEM[(float *)&a];
  s_316 = _315 + 0.0;
  _323 = MEM[(float *)&a + 4B];
  s_324 = s_316 + _323;
  _331 = MEM[(float *)&a + 8B];
  s_332 = s_324 + _331;
  _339 = MEM[(float *)&a + 12B];
  s_340 = s_332 + _339;
  sum_11 = s_340 + 0.0;
  _283 = MEM[(float *)&a + 16B];
  s_284 = _283 + 0.0;
  _291 = MEM[(float *)&a + 20B];
  s_292 = s_284 + _291;
  _299 = MEM[(float *)&a + 24B];
  s_300 = s_292 + _299;
  _307 = MEM[(float *)&a + 28B];
  s_308 = s_300 + _307;
  sum_13 = sum_11 + s_308;
  _251 = MEM[(float *)&a + 32B];
  s_252 = _251 + 0.0;
  _259 = MEM[(float *)&a + 36B];
  s_260 = s_252 + _259;
  _267 = MEM[(float *)&a + 40B];
  s_268 = s_260 + _267;
  _275 = MEM[(float *)&a + 44B];
  s_276 = s_268 + _275;
  sum_15 = sum_13 + s_276;
  _219 = MEM[(float *)&a + 48B];
  s_220 = _219 + 0.0;
  _227 = MEM[(float *)&a + 52B];
  s_228 = s_220 + _227;
  _235 = MEM[(float *)&a + 56B];
  s_236 = s_228 + _235;
  _243 = MEM[(float *)&a + 60B];
  s_244 = s_236 + _243;
  sum_17 = sum_15 + s_244;
  _187 = MEM[(float *)&a + 64B];
  s_188 = _187 + 0.0;
  _195 = MEM[(float *)&a + 68B];
  s_196 = s_188 + _195;
  _203 = MEM[(float *)&a + 72B];
  s_204 = s_196 + _203;
  _211 = MEM[(float *)&a + 76B];
  s_212 = s_204 + _211;
  sum_19 = sum_17 + s_212;
  _155 = MEM[(float *)&a + 80B];
  s_156 = _155 + 0.0;
  _163 = MEM[(float *)&a + 84B];
  s_164 = s_156 + _163;
  _171 = MEM[(float *)&a + 88B];
  s_172 = s_164 + _171;
  _179 = MEM[(float *)&a + 92B];
  s_180 = s_172 + _179;
  sum_21 = sum_19 + s_180;
  _123 = MEM[(float *)&a + 96B];
  s_124 = _123 + 0.0;
  _131 = MEM[(float *)&a + 100B];
  s_132 = s_124 + _131;
  _139 = MEM[(float *)&a + 104B];
  s_140 = s_132 + _139;
  _147 = MEM[(float *)&a + 108B];
  s_148 = s_140 + _147;
  sum_23 = sum_21 + s_148;
  _8 = MEM[(float *)&a + 112B];
  s_33 = _8 + 0.0;
  _99 = MEM[(float *)&a + 116B];
  s_100 = s_33 + _99;
  _107 = MEM[(float *)&a + 120B];
  s_108 = s_100 + _107;
  _115 = MEM[(float *)&a + 124B];
  s_116 = s_108 + _115;
  sum_25 = sum_23 + s_116;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, sum_25);
  nl_27 = nl_91 + 1;
  ivtmp_334 = ivtmp_338 - 1;
  if (ivtmp_334 != 0)
    goto <bb 5>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       5
;;                4

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  end_t_29 = mysecond ();
  clock_dif_30 = end_t_29 - start_t_6;
  printf ("S31111\t %.3f \t\t", clock_dif_30);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s312 (s312, funcdef_no=654, decl_uid=9786, cgraph_uid=654, symbol_order=675)

s312 ()
{
  int i;
  int D.18202;
  int i;
  int nl;
  float prod;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_3;
  unsigned int ivtmp_4;
  unsigned int ivtmp_27;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s312 ");
  start_t_10 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # prod_30 = PHI <1.0e+0(5), prod_13(8)>
  # i_40 = PHI <0(5), i_14(8)>
  # ivtmp_4 = PHI <32000(5), ivtmp_38(8)>
  _1 = a[i_40];
  prod_13 = _1 * prod_30;
  i_14 = i_40 + 1;
  ivtmp_38 = ivtmp_4 - 1;
  if (ivtmp_38 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # prod_37 = PHI <prod_13(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, prod_37);
  nl_16 = nl_31 + 1;
  ivtmp_3 = ivtmp_27 - 1;
  if (ivtmp_3 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_31 = PHI <0(2), nl_16(7)>
  # ivtmp_27 = PHI <100000(2), ivtmp_3(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # prod_36 = PHI <prod_37(4)>
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_10;
  printf ("S312\t %.3f \t\t", clock_dif_19);
  temp = prod_36;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s313 (s313, funcdef_no=655, decl_uid=9800, cgraph_uid=655, symbol_order=676)

Merging blocks 5 and 9
s313 ()
{
  float stmp_dot_15.3166;
  vector(4) float vect__3.3165;
  vector(4) float vect__2.3164;
  vector(4) float * vectp_b.3163;
  vector(4) float * vectp_b.3162;
  vector(4) float vect__1.3161;
  vector(4) float * vectp_a.3160;
  vector(4) float * vectp_a.3159;
  int i;
  int D.18220;
  int i;
  int nl;
  float dot;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_13;
  unsigned int ivtmp_25;
  unsigned int ivtmp_37;
  unsigned int ivtmp_38;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s313 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # dot_32 = PHI <dot_15(8), 0.0(5)>
  # i_42 = PHI <i_16(8), 0(5)>
  # ivtmp_40 = PHI <ivtmp_39(8), 32000(5)>
  # vectp_a.3159_36 = PHI <vectp_a.3159_35(8), &a(5)>
  # vectp_b.3162_30 = PHI <vectp_b.3162_29(8), &b(5)>
  # ivtmp_25 = PHI <ivtmp_13(8), 0(5)>
  vect__1.3161_31 = MEM[(float *)vectp_a.3159_36];
  _1 = a[i_42];
  vect__2.3164_8 = MEM[(float *)vectp_b.3162_30];
  _2 = b[i_42];
  vect__3.3165_7 = vect__1.3161_31 * vect__2.3164_8;
  _3 = _1 * _2;
  stmp_dot_15.3166_6 = BIT_FIELD_REF <vect__3.3165_7, 32, 0>;
  stmp_dot_15.3166_5 = dot_32 + stmp_dot_15.3166_6;
  stmp_dot_15.3166_4 = BIT_FIELD_REF <vect__3.3165_7, 32, 32>;
  stmp_dot_15.3166_28 = stmp_dot_15.3166_5 + stmp_dot_15.3166_4;
  stmp_dot_15.3166_27 = BIT_FIELD_REF <vect__3.3165_7, 32, 64>;
  stmp_dot_15.3166_44 = stmp_dot_15.3166_28 + stmp_dot_15.3166_27;
  stmp_dot_15.3166_26 = BIT_FIELD_REF <vect__3.3165_7, 32, 96>;
  dot_15 = stmp_dot_15.3166_44 + stmp_dot_15.3166_26;
  i_16 = i_42 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  vectp_a.3159_35 = vectp_a.3159_36 + 16;
  vectp_b.3162_29 = vectp_b.3162_30 + 16;
  ivtmp_13 = ivtmp_25 + 1;
  if (ivtmp_13 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # dot_43 = PHI <dot_15(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, dot_43);
  nl_18 = nl_33 + 1;
  ivtmp_37 = ivtmp_38 - 1;
  if (ivtmp_37 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_18(7)>
  # ivtmp_38 = PHI <50000(2), ivtmp_37(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # dot_41 = PHI <dot_43(4)>
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_12;
  printf ("S313\t %.3f \t\t", clock_dif_21);
  temp = dot_41;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s314 (s314, funcdef_no=656, decl_uid=9814, cgraph_uid=656, symbol_order=677)

Removing basic block 14
Removing basic block 4
Removing basic block 20
Merging blocks 19 and 21
s314 ()
{
  int i;
  int D.18247;
  int i;
  int nl;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  unsigned int ivtmp_3;
  float _28;
  unsigned int ivtmp_29;
  unsigned int ivtmp_30;
  _Bool _31;
  unsigned int ivtmp_38;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s314 ");
  start_t_11 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                10
  # nl_32 = PHI <0(2), nl_18(10)>
  # ivtmp_38 = PHI <50000(2), ivtmp_3(10)>
  x_14 = a[0];
  i_40 = 1;
  ivtmp_29 = 31999;
  if (ivtmp_29 != 0)
    goto <bb 19>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       19
;;                8

;;   basic block 19, loop depth 1
;;    pred:       3
  _31 = 0;
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       18
;;                19
  # x_6 = PHI <x_39(18), x_14(19)>
  # i_2 = PHI <i_34(18), i_40(19)>
  # ivtmp_30 = PHI <ivtmp_42(18), ivtmp_29(19)>
  _28 = a[i_2];
  if (_28 > x_6)
    goto <bb 17>; [50.51%]
  else
    goto <bb 16>; [49.49%]
;;    succ:       17
;;                16

;;   basic block 16, loop depth 2
;;    pred:       15
;;    succ:       17

;;   basic block 17, loop depth 2
;;    pred:       15
;;                16
  # x_39 = PHI <_28(15), x_6(16)>
  i_34 = i_2 + 1;
  ivtmp_42 = ivtmp_30 + 4294967295;
  if (ivtmp_42 != 0)
    goto <bb 18>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       18
;;                8

;;   basic block 18, loop depth 2
;;    pred:       17
  goto <bb 15>; [100.00%]
;;    succ:       15

;;   basic block 8, loop depth 1
;;    pred:       17
;;                3
  # x_41 = PHI <x_39(17), x_14(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, x_41);
  nl_18 = nl_32 + 1;
  ivtmp_3 = ivtmp_38 - 1;
  if (ivtmp_3 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       8
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       8
  # x_5 = PHI <x_41(8)>
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_11;
  printf ("S314\t %.3f \t\t", clock_dif_21);
  temp = x_5;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s315 (s315, funcdef_no=657, decl_uid=9828, cgraph_uid=657, symbol_order=678)

Removing basic block 17
Removing basic block 6
Removing basic block 23
Merging blocks 2 and 25
Merging blocks 22 and 24
s315 ()
{
  vector(4) float * vectp_a.3203;
  vector(4) float * vectp_a.3202;
  vector(4) float vect__3.3201;
  vector(4) int vect_patt_45.3200;
  vector(4) int vect_patt_18.3199;
  vector(4) int vect_patt_19.3198;
  vector(4) int vect_patt_49.3197;
  vector(4) int vect__1.3196;
  vector(4) int vect_vec_iv_.3195;
  int i;
  int nl;
  int i;
  int index;
  float chksum;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  int _2;
  float _3;
  float _5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_7;
  float _8;
  unsigned int ivtmp_10;
  unsigned int ivtmp_11;
  unsigned int ivtmp_14;
  unsigned int ivtmp_22;
  float _32;
  vector(4) int vect_cst__44;
  _Bool _48;
  unsigned int ivtmp_50;
  vector(4) int vect_cst__63;
  vector(4) int vect_cst__65;
  vector(4) int vect_cst__68;
  unsigned int ivtmp_75;
  unsigned int ivtmp_76;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s315 ");
  vect_cst__44 = { 4, 4, 4, 4 };
  vect_cst__63 = { 7, 7, 7, 7 };
  vect_cst__65 = { 274877907, 274877907, 274877907, 274877907 };
  vect_cst__68 = { 32000, 32000, 32000, 32000 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       13
;;                2
  # i_55 = PHI <i_24(13), 0(2)>
  # ivtmp_7 = PHI <ivtmp_6(13), 32000(2)>
  # vect_vec_iv_.3195_43 = PHI <vect_vec_iv_.3195_62(13), { 0, 1, 2, 3 }(2)>
  # vectp_a.3202_72 = PHI <vectp_a.3202_73(13), &a(2)>
  # ivtmp_75 = PHI <ivtmp_76(13), 0(2)>
  vect_vec_iv_.3195_62 = vect_vec_iv_.3195_43 + vect_cst__44;
  vect__1.3196_64 = vect_vec_iv_.3195_43 * vect_cst__63;
  _1 = i_55 * 7;
  vect_patt_49.3197_66 = vect__1.3196_64 h* vect_cst__65;
  vect_patt_19.3198_67 = vect_patt_49.3197_66 >> 11;
  vect_patt_18.3199_69 = vect_patt_19.3198_67 * vect_cst__68;
  vect_patt_45.3200_70 = vect__1.3196_64 - vect_patt_18.3199_69;
  _2 = _1 % 32000;
  vect__3.3201_71 = (vector(4) float) vect_patt_45.3200_70;
  _3 = (float) _2;
  MEM[(float *)vectp_a.3202_72] = vect__3.3201_71;
  i_24 = i_55 + 1;
  ivtmp_6 = ivtmp_7 - 1;
  vectp_a.3202_73 = vectp_a.3202_72 + 16;
  ivtmp_76 = ivtmp_75 + 1;
  if (ivtmp_76 < 8000)
    goto <bb 13>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       13
;;                4

;;   basic block 13, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  start_t_26 = mysecond ();
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       4
;;                12
  # nl_58 = PHI <0(4), nl_36(12)>
  # ivtmp_22 = PHI <10000(4), ivtmp_11(12)>
  x_30 = a[0];
  i_17 = 1;
  ivtmp_14 = 31999;
  if (ivtmp_14 != 0)
    goto <bb 22>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       22
;;                10

;;   basic block 22, loop depth 1
;;    pred:       5
  _48 = 0;
;;    succ:       18

;;   basic block 18, loop depth 2
;;    pred:       21
;;                22
  # x_12 = PHI <x_46(21), x_30(22)>
  # index_13 = PHI <index_47(21), 0(22)>
  # ivtmp_10 = PHI <ivtmp_50(21), ivtmp_14(22)>
  # i_27 = PHI <i_52(21), i_17(22)>
  _32 = a[i_27];
  if (_32 > x_12)
    goto <bb 20>; [50.51%]
  else
    goto <bb 19>; [49.49%]
;;    succ:       20
;;                19

;;   basic block 19, loop depth 2
;;    pred:       18
;;    succ:       20

;;   basic block 20, loop depth 2
;;    pred:       18
;;                19
  # x_46 = PHI <_32(18), x_12(19)>
  # index_47 = PHI <i_27(18), index_13(19)>
  i_52 = i_27 + 1;
  ivtmp_50 = ivtmp_10 + 4294967295;
  if (ivtmp_50 != 0)
    goto <bb 21>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       21
;;                10

;;   basic block 21, loop depth 2
;;    pred:       20
  goto <bb 18>; [100.00%]
;;    succ:       18

;;   basic block 10, loop depth 1
;;    pred:       20
;;                5
  # x_59 = PHI <x_46(20), x_30(5)>
  # index_57 = PHI <index_47(20), 0(5)>
  _5 = (float) index_57;
  chksum_34 = _5 + x_59;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, chksum_34);
  nl_36 = nl_58 + 1;
  ivtmp_11 = ivtmp_22 - 1;
  if (ivtmp_11 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 11>; [1.01%]
;;    succ:       12
;;                11

;;   basic block 12, loop depth 1
;;    pred:       10
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 11, loop depth 0
;;    pred:       10
  # chksum_56 = PHI <chksum_34(10)>
  end_t_38 = mysecond ();
  clock_dif_39 = end_t_38 - start_t_26;
  printf ("S315\t %.3f \t\t", clock_dif_39);
  _8 = chksum_56 + 1.0e+0;
  temp = _8;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s316 (s316, funcdef_no=658, decl_uid=9848, cgraph_uid=658, symbol_order=679)

Removing basic block 9
Removing basic block 10
Removing basic block 7
Removing basic block 4
Removing basic block 3
Removing basic block 20
Removing basic block 16
Removing basic block 13
Removing basic block 27
Merging blocks 2 and 21
Merging blocks 12 and 28
s316 ()
{
  int i;
  int D.18302;
  int i;
  int nl;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  _Bool _9;
  unsigned int ivtmp_12;
  _Bool _39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_48;
  float _49;
  unsigned int ivtmp_52;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s316 ");
  start_t_11 = mysecond ();
  _39 = 0;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       18
;;                2
  # nl_28 = PHI <nl_44(18), 0(2)>
  # ivtmp_40 = PHI <ivtmp_12(18), 50000(2)>
  x_29 = a[0];
  _9 = 0;
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       25
;;                12
  # x_46 = PHI <x_50(25), x_29(12)>
  # i_47 = PHI <i_51(25), 1(12)>
  # ivtmp_48 = PHI <ivtmp_52(25), 31999(12)>
  _49 = a[i_47];
  if (_49 < x_46)
    goto <bb 24>; [50.00%]
  else
    goto <bb 23>; [50.00%]
;;    succ:       24
;;                23

;;   basic block 23, loop depth 2
;;    pred:       22
;;    succ:       24

;;   basic block 24, loop depth 2
;;    pred:       22
;;                23
  # x_50 = PHI <_49(22), x_46(23)>
  i_51 = i_47 + 1;
  ivtmp_52 = ivtmp_48 - 1;
  if (ivtmp_52 != 0)
    goto <bb 25>; [98.99%]
  else
    goto <bb 17>; [1.01%]
;;    succ:       25
;;                17

;;   basic block 25, loop depth 2
;;    pred:       24
  goto <bb 22>; [100.00%]
;;    succ:       22

;;   basic block 17, loop depth 1
;;    pred:       24
  # x_43 = PHI <x_50(24)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, x_43);
  nl_44 = nl_28 + 1;
  ivtmp_12 = ivtmp_40 - 1;
  if (ivtmp_12 != 0)
    goto <bb 18>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       18
;;                8

;;   basic block 18, loop depth 1
;;    pred:       17
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 8, loop depth 0
;;    pred:       17
  # x_37 = PHI <x_43(17)>
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_11;
  printf ("S316\t %.3f \t\t", clock_dif_21);
  temp = x_37;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s317 (s317, funcdef_no=659, decl_uid=9862, cgraph_uid=659, symbol_order=680)

s317 ()
{
  int i;
  int D.18323;
  int i;
  int nl;
  float q;
  double clock_dif;
  double end_t;
  double start_t;
  unsigned int ivtmp_2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_26;
  unsigned int ivtmp_35;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s317 ");
  start_t_9 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # q_29 = PHI <1.0e+0(5), q_12(8)>
  # i_39 = PHI <0(5), i_13(8)>
  # ivtmp_35 = PHI <16000(5), ivtmp_26(8)>
  q_12 = q_29 * 9.900000095367431640625e-1;
  i_13 = i_39 + 1;
  ivtmp_26 = ivtmp_35 - 1;
  if (ivtmp_26 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # q_37 = PHI <q_12(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, q_37);
  nl_15 = nl_30 + 1;
  ivtmp_2 = ivtmp_3 - 1;
  if (ivtmp_2 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_30 = PHI <0(2), nl_15(7)>
  # ivtmp_3 = PHI <50000(2), ivtmp_2(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # q_36 = PHI <q_37(4)>
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_9;
  printf ("S317\t %.3f \t\t", clock_dif_18);
  temp = q_36;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s318 (s318, funcdef_no=660, decl_uid=9877, cgraph_uid=660, symbol_order=681)

Removing basic block 9
Removing basic block 10
Removing basic block 7
Removing basic block 4
Removing basic block 3
Removing basic block 20
Removing basic block 16
Removing basic block 13
Removing basic block 27
Merging blocks 2 and 21
Merging blocks 12 and 28
s318 (int inc)
{
  int i;
  int nl;
  float chksum;
  float max;
  int index;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  float _14;
  int _18;
  int _20;
  float _21;
  unsigned int ivtmp_22;
  _Bool _46;
  float _68;
  unsigned int ivtmp_72;
  _Bool _74;
  unsigned int ivtmp_79;
  float _80;
  int _81;
  int _82;
  float _83;
  unsigned int ivtmp_88;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s318 ");
  start_t_28 = mysecond ();
  _46 = 0;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       18
;;                2
  # nl_33 = PHI <nl_71(18), 0(2)>
  # ivtmp_22 = PHI <ivtmp_72(18), 5000(2)>
  _21 = a[0];
  _20 = (int) _21;
  _18 = ABS_EXPR <_20>;
  max_17 = (float) _18;
  _74 = 0;
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       25
;;                12
  # k_75 = PHI <k_86(25), inc_32(D)(12)>
  # index_76 = PHI <index_84(25), 0(12)>
  # max_77 = PHI <max_85(25), max_17(12)>
  # i_78 = PHI <i_87(25), 1(12)>
  # ivtmp_79 = PHI <ivtmp_88(25), 31999(12)>
  _80 = a[k_75];
  _81 = (int) _80;
  _82 = ABS_EXPR <_81>;
  _83 = (float) _82;
  if (_83 <= max_77)
    goto <bb 24>; [34.00%]
  else
    goto <bb 23>; [66.00%]
;;    succ:       24
;;                23

;;   basic block 23, loop depth 2
;;    pred:       22
;;    succ:       24

;;   basic block 24, loop depth 2
;;    pred:       22
;;                23
  # index_84 = PHI <index_76(22), i_78(23)>
  # max_85 = PHI <max_77(22), _83(23)>
  k_86 = inc_32(D) + k_75;
  i_87 = i_78 + 1;
  ivtmp_88 = ivtmp_79 - 1;
  if (ivtmp_88 != 0)
    goto <bb 25>; [98.99%]
  else
    goto <bb 17>; [1.01%]
;;    succ:       25
;;                17

;;   basic block 25, loop depth 2
;;    pred:       24
  goto <bb 22>; [100.00%]
;;    succ:       22

;;   basic block 17, loop depth 1
;;    pred:       24
  # index_66 = PHI <index_84(24)>
  # max_67 = PHI <max_85(24)>
  _68 = (float) index_66;
  chksum_69 = _68 + max_67;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, chksum_69);
  nl_71 = nl_33 + 1;
  ivtmp_72 = ivtmp_22 - 1;
  if (ivtmp_72 != 0)
    goto <bb 18>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       18
;;                8

;;   basic block 18, loop depth 1
;;    pred:       17
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 8, loop depth 0
;;    pred:       17
  # chksum_52 = PHI <chksum_69(17)>
  end_t_40 = mysecond ();
  clock_dif_41 = end_t_40 - start_t_28;
  printf ("S318\t %.3f \t\t", clock_dif_41);
  _14 = chksum_52 + 1.0e+0;
  temp = _14;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s319 (s319, funcdef_no=661, decl_uid=9895, cgraph_uid=661, symbol_order=682)

s319 ()
{
  int i;
  int D.18358;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _6;
  float _7;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  unsigned int ivtmp_59;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s319 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # sum_39 = PHI <0.0(5), sum_22(8)>
  # i_40 = PHI <0(5), i_23(8)>
  # ivtmp_59 = PHI <32000(5), ivtmp_58(8)>
  _1 = c[i_40];
  _2 = d[i_40];
  _3 = _1 + _2;
  a[i_40] = _3;
  sum_20 = _3 + sum_39;
  _6 = e[i_40];
  _7 = _1 + _6;
  b[i_40] = _7;
  sum_22 = _7 + sum_20;
  i_23 = i_40 + 1;
  ivtmp_58 = ivtmp_59 - 1;
  if (ivtmp_58 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # sum_61 = PHI <sum_22(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, sum_61);
  nl_25 = nl_48 + 1;
  ivtmp_56 = ivtmp_57 - 1;
  if (ivtmp_56 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_48 = PHI <0(2), nl_25(7)>
  # ivtmp_57 = PHI <20000(2), ivtmp_56(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # sum_60 = PHI <sum_61(4)>
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_17;
  printf ("S319\t %.3f \t\t", clock_dif_28);
  temp = sum_60;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s3110 (s3110, funcdef_no=662, decl_uid=9909, cgraph_uid=662, symbol_order=683)

Removing basic block 12
Removing basic block 13
Removing basic block 7
Removing basic block 4
Removing basic block 8
Removing basic block 23
Removing basic block 19
Removing basic block 16
Removing basic block 30
Merging blocks 3 and 24
Merging blocks 15 and 31
s3110 ()
{
  int j;
  int i;
  int nl;
  float chksum;
  float max;
  int yindex;
  int xindex;
  double clock_dif;
  double end_t;
  double start_t;
  float _2;
  float _3;
  float _4;
  float _7;
  float _9;
  float _10;
  _Bool _31;
  unsigned int ivtmp_37;
  unsigned int ivtmp_38;
  float _54;
  unsigned int ivtmp_58;
  float _61;
  _Bool _66;
  unsigned int ivtmp_67;
  unsigned int ivtmp_81;
  float _82;
  unsigned int ivtmp_87;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s3110");
  start_t_30 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                11
  # nl_77 = PHI <0(2), nl_47(11)>
  # ivtmp_38 = PHI <3900(2), ivtmp_37(11)>
  max_35 = aa[0][0];
  _31 = 0;
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       21
;;                3
  # xindex_23 = PHI <xindex_62(21), 0(3)>
  # yindex_22 = PHI <yindex_69(21), 0(3)>
  # max_60 = PHI <max_70(21), max_35(3)>
  # i_59 = PHI <i_68(21), 0(3)>
  # ivtmp_58 = PHI <ivtmp_67(21), 256(3)>
  _66 = 0;
;;    succ:       25

;;   basic block 25, loop depth 3
;;    pred:       28
;;                15
  # xindex_26 = PHI <xindex_83(28), xindex_23(15)>
  # yindex_56 = PHI <yindex_84(28), yindex_22(15)>
  # max_57 = PHI <max_85(28), max_60(15)>
  # j_55 = PHI <j_86(28), 0(15)>
  # ivtmp_81 = PHI <ivtmp_87(28), 256(15)>
  _82 = aa[i_59][j_55];
  if (_82 > max_57)
    goto <bb 27>; [50.00%]
  else
    goto <bb 26>; [50.00%]
;;    succ:       27
;;                26

;;   basic block 26, loop depth 3
;;    pred:       25
;;    succ:       27

;;   basic block 27, loop depth 3
;;    pred:       25
;;                26
  # xindex_83 = PHI <i_59(25), xindex_26(26)>
  # yindex_84 = PHI <j_55(25), yindex_56(26)>
  # max_85 = PHI <_82(25), max_57(26)>
  j_86 = j_55 + 1;
  ivtmp_87 = ivtmp_81 - 1;
  if (ivtmp_87 != 0)
    goto <bb 28>; [98.99%]
  else
    goto <bb 20>; [1.01%]
;;    succ:       28
;;                20

;;   basic block 28, loop depth 3
;;    pred:       27
  goto <bb 25>; [100.00%]
;;    succ:       25

;;   basic block 20, loop depth 2
;;    pred:       27
  # xindex_62 = PHI <xindex_83(27)>
  # yindex_69 = PHI <yindex_84(27)>
  # max_70 = PHI <max_85(27)>
  i_68 = i_59 + 1;
  ivtmp_67 = ivtmp_58 - 1;
  if (ivtmp_67 != 0)
    goto <bb 21>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       21
;;                9

;;   basic block 21, loop depth 2
;;    pred:       20
  goto <bb 15>; [100.00%]
;;    succ:       15

;;   basic block 9, loop depth 1
;;    pred:       20
  # xindex_39 = PHI <xindex_62(20)>
  # yindex_18 = PHI <yindex_69(20)>
  # max_8 = PHI <max_70(20)>
  _2 = (float) xindex_39;
  _3 = _2 + max_8;
  _4 = (float) yindex_18;
  chksum_45 = _3 + _4;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, chksum_45);
  nl_47 = nl_77 + 1;
  ivtmp_37 = ivtmp_38 - 1;
  if (ivtmp_37 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       9
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 0
;;    pred:       9
  # _61 = PHI <_3(9)>
  # _54 = PHI <_4(9)>
  end_t_49 = mysecond ();
  clock_dif_50 = end_t_49 - start_t_30;
  printf ("S3110\t %.3f \t\t", clock_dif_50);
  _7 = _61 + 1.0e+0;
  _9 = _54 + _7;
  _10 = _9 + 1.0e+0;
  temp = _10;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s13110 (s13110, funcdef_no=663, decl_uid=9930, cgraph_uid=663, symbol_order=684)

Removing basic block 12
Removing basic block 13
Removing basic block 7
Removing basic block 4
Removing basic block 8
Removing basic block 23
Removing basic block 19
Removing basic block 16
Removing basic block 30
Merging blocks 3 and 24
Merging blocks 15 and 31
s13110 ()
{
  int j;
  int i;
  int nl;
  float chksum;
  float max;
  double clock_dif;
  double end_t;
  double start_t;
  float _2;
  float _4;
  float _5;
  float _6;
  float _14;
  _Bool _20;
  unsigned int ivtmp_23;
  unsigned int ivtmp_38;
  unsigned int ivtmp_41;
  unsigned int ivtmp_52;
  _Bool _53;
  unsigned int ivtmp_56;
  float _57;
  unsigned int ivtmp_60;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s3110");
  start_t_19 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                11
  # nl_47 = PHI <0(2), nl_28(11)>
  # ivtmp_38 = PHI <3900(2), ivtmp_23(11)>
  max_22 = aa[0][0];
  _20 = 0;
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       21
;;                3
  # max_13 = PHI <max_35(21), max_22(3)>
  # i_9 = PHI <i_51(21), 0(3)>
  # ivtmp_41 = PHI <ivtmp_52(21), 256(3)>
  _53 = 0;
;;    succ:       25

;;   basic block 25, loop depth 3
;;    pred:       28
;;                15
  # max_54 = PHI <max_58(28), max_13(15)>
  # j_55 = PHI <j_59(28), 0(15)>
  # ivtmp_56 = PHI <ivtmp_60(28), 256(15)>
  _57 = aa[i_9][j_55];
  if (_57 > max_54)
    goto <bb 27>; [50.00%]
  else
    goto <bb 26>; [50.00%]
;;    succ:       27
;;                26

;;   basic block 26, loop depth 3
;;    pred:       25
;;    succ:       27

;;   basic block 27, loop depth 3
;;    pred:       25
;;                26
  # max_58 = PHI <_57(25), max_54(26)>
  j_59 = j_55 + 1;
  ivtmp_60 = ivtmp_56 - 1;
  if (ivtmp_60 != 0)
    goto <bb 28>; [98.99%]
  else
    goto <bb 20>; [1.01%]
;;    succ:       28
;;                20

;;   basic block 28, loop depth 3
;;    pred:       27
  goto <bb 25>; [100.00%]
;;    succ:       25

;;   basic block 20, loop depth 2
;;    pred:       27
  # max_35 = PHI <max_58(27)>
  i_51 = i_9 + 1;
  ivtmp_52 = ivtmp_41 - 1;
  if (ivtmp_52 != 0)
    goto <bb 21>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       21
;;                9

;;   basic block 21, loop depth 2
;;    pred:       20
  goto <bb 15>; [100.00%]
;;    succ:       15

;;   basic block 9, loop depth 1
;;    pred:       20
  # max_7 = PHI <max_35(20)>
  _2 = max_7 + 0.0;
  chksum_26 = _2 + 0.0;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, chksum_26);
  nl_28 = nl_47 + 1;
  ivtmp_23 = ivtmp_38 - 1;
  if (ivtmp_23 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       9
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 0
;;    pred:       9
  # _14 = PHI <_2(9)>
  end_t_30 = mysecond ();
  clock_dif_31 = end_t_30 - start_t_19;
  printf ("S13110\t %.3f \t\t", clock_dif_31);
  _4 = _14 + 1.0e+0;
  _5 = _4 + 0.0;
  _6 = _5 + 1.0e+0;
  temp = _6;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s3111 (s3111, funcdef_no=664, decl_uid=9951, cgraph_uid=664, symbol_order=685)

s3111 ()
{
  int i;
  int D.18427;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_28;
  unsigned int ivtmp_37;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s3111");
  start_t_12 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # sum_31 = PHI <0.0(7), sum_3(10)>
  # i_41 = PHI <0(7), i_16(10)>
  # ivtmp_37 = PHI <32000(7), ivtmp_28(10)>
  _1 = a[i_41];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  sum_15 = _1 + sum_31;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  # sum_3 = PHI <sum_15(4), sum_31(3)>
  i_16 = i_41 + 1;
  ivtmp_28 = ivtmp_37 - 1;
  if (ivtmp_28 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  # sum_39 = PHI <sum_3(5)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, sum_39);
  nl_18 = nl_32 + 1;
  ivtmp_5 = ivtmp_6 - 1;
  if (ivtmp_5 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_32 = PHI <0(2), nl_18(9)>
  # ivtmp_6 = PHI <5000(2), ivtmp_5(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  # sum_38 = PHI <sum_39(6)>
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_12;
  printf ("S3111\t %.3f \t\t", clock_dif_21);
  temp = sum_38;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s3112 (s3112, funcdef_no=665, decl_uid=9965, cgraph_uid=665, symbol_order=686)

s3112 ()
{
  int i;
  int D.18445;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_2;
  unsigned int ivtmp_5;
  unsigned int ivtmp_29;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s3112");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # sum_33 = PHI <0.0(5), sum_14(8)>
  # i_34 = PHI <0(5), i_16(8)>
  # ivtmp_38 = PHI <32000(5), ivtmp_29(8)>
  _1 = a[i_34];
  sum_14 = _1 + sum_33;
  b[i_34] = sum_14;
  i_16 = i_34 + 1;
  ivtmp_29 = ivtmp_38 - 1;
  if (ivtmp_29 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # sum_40 = PHI <sum_14(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, sum_40);
  nl_18 = nl_42 + 1;
  ivtmp_2 = ivtmp_5 - 1;
  if (ivtmp_2 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_42 = PHI <0(2), nl_18(7)>
  # ivtmp_5 = PHI <10000(2), ivtmp_2(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # sum_39 = PHI <sum_40(4)>
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_11;
  printf ("S3112\t %.3f \t\t", clock_dif_21);
  temp = sum_39;
  check (-12);
  return 0;
;;    succ:       EXIT

}



;; Function s3113 (s3113, funcdef_no=666, decl_uid=9979, cgraph_uid=666, symbol_order=687)

Removing basic block 14
Removing basic block 4
Removing basic block 20
Merging blocks 19 and 21
s3113 ()
{
  int i;
  int D.18465;
  int i;
  int nl;
  float max;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  int _3;
  unsigned int ivtmp_11;
  float _12;
  int _13;
  unsigned int ivtmp_14;
  unsigned int ivtmp_35;
  _Bool _37;
  int _40;
  unsigned int ivtmp_43;
  float _48;
  unsigned int ivtmp_49;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s3113");
  start_t_19 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                10
  # nl_38 = PHI <0(2), nl_24(10)>
  # ivtmp_35 = PHI <40000(2), ivtmp_14(10)>
  _1 = a[0];
  _2 = (int) _1;
  _3 = ABS_EXPR <_2>;
  max_21 = (float) _3;
  i_44 = 1;
  ivtmp_43 = 31999;
  if (ivtmp_43 != 0)
    goto <bb 19>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       19
;;                8

;;   basic block 19, loop depth 1
;;    pred:       3
  _37 = 0;
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       18
;;                19
  # max_34 = PHI <max_41(18), max_21(19)>
  # i_10 = PHI <i_42(18), i_44(19)>
  # ivtmp_11 = PHI <ivtmp_49(18), ivtmp_43(19)>
  _12 = a[i_10];
  _13 = (int) _12;
  _40 = ABS_EXPR <_13>;
  _48 = (float) _40;
  if (_48 > max_34)
    goto <bb 17>; [50.51%]
  else
    goto <bb 16>; [49.49%]
;;    succ:       17
;;                16

;;   basic block 16, loop depth 2
;;    pred:       15
;;    succ:       17

;;   basic block 17, loop depth 2
;;    pred:       15
;;                16
  # max_41 = PHI <_48(15), max_34(16)>
  i_42 = i_10 + 1;
  ivtmp_49 = ivtmp_11 + 4294967295;
  if (ivtmp_49 != 0)
    goto <bb 18>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       18
;;                8

;;   basic block 18, loop depth 2
;;    pred:       17
  goto <bb 15>; [100.00%]
;;    succ:       15

;;   basic block 8, loop depth 1
;;    pred:       17
;;                3
  # max_47 = PHI <max_41(17), max_21(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, max_47);
  nl_24 = nl_38 + 1;
  ivtmp_14 = ivtmp_35 - 1;
  if (ivtmp_14 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       8
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       8
  # max_46 = PHI <max_47(8)>
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_19;
  printf ("S3113\t %.3f \t\t", clock_dif_27);
  temp = max_46;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s321 (s321, funcdef_no=667, decl_uid=9993, cgraph_uid=667, symbol_order=688)

s321 ()
{
  int i;
  int D.18486;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_37;
  unsigned int ivtmp_38;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s321 ");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_29 = PHI <1(5), i_16(8)>
  # ivtmp_41 = PHI <31999(5), ivtmp_40(8)>
  _1 = a[i_29];
  _2 = i_29 + -1;
  _3 = a[_2];
  _4 = b[i_29];
  _5 = _3 * _4;
  _6 = _1 + _5;
  a[i_29] = _6;
  i_16 = i_29 + 1;
  ivtmp_40 = ivtmp_41 - 1;
  if (ivtmp_40 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_37 = ivtmp_38 - 1;
  if (ivtmp_37 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_38 = PHI <10000(2), ivtmp_37(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S321\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s322 (s322, funcdef_no=668, decl_uid=10006, cgraph_uid=668, symbol_order=689)

s322 ()
{
  int i;
  int D.18511;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  float _3;
  float _4;
  float _5;
  float _6;
  int _7;
  float _8;
  float _9;
  float _10;
  float _11;
  unsigned int ivtmp_59;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s322 ");
  start_t_19 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_34 = PHI <2(5), i_21(8)>
  # ivtmp_62 = PHI <31998(5), ivtmp_61(8)>
  _1 = a[i_34];
  _2 = i_34 + -1;
  _3 = a[_2];
  _4 = b[i_34];
  _5 = _3 * _4;
  _6 = _1 + _5;
  _7 = i_34 + -2;
  _8 = a[_7];
  _9 = c[i_34];
  _10 = _8 * _9;
  _11 = _6 + _10;
  a[i_34] = _11;
  i_21 = i_34 + 1;
  ivtmp_61 = ivtmp_62 - 1;
  if (ivtmp_61 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_33 + 1;
  ivtmp_59 = ivtmp_60 - 1;
  if (ivtmp_59 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_23(7)>
  # ivtmp_60 = PHI <5000(2), ivtmp_59(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_19;
  printf ("S322\t %.3f \t\t", clock_dif_26);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s323 (s323, funcdef_no=669, decl_uid=10019, cgraph_uid=669, symbol_order=690)

s323 ()
{
  int i;
  int D.18547;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_56;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s323 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_33 = PHI <1(5), i_20(8)>
  # ivtmp_62 = PHI <31999(5), ivtmp_61(8)>
  _1 = i_33 + -1;
  _2 = b[_1];
  _3 = c[i_33];
  _4 = d[i_33];
  _5 = _3 * _4;
  _6 = _2 + _5;
  a[i_33] = _6;
  _7 = e[i_33];
  _8 = _3 * _7;
  _9 = _6 + _8;
  b[i_33] = _9;
  i_20 = i_33 + 1;
  ivtmp_61 = ivtmp_62 - 1;
  if (ivtmp_61 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_56 = ivtmp_60 - 1;
  if (ivtmp_56 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_22(7)>
  # ivtmp_60 = PHI <5000(2), ivtmp_56(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_17;
  printf ("S323\t %.3f \t\t", clock_dif_25);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s331 (s331, funcdef_no=670, decl_uid=10032, cgraph_uid=670, symbol_order=691)

Removing basic block 9
Removing basic block 10
Removing basic block 6
Removing basic block 3
Removing basic block 7
Removing basic block 20
Removing basic block 16
Removing basic block 13
Removing basic block 27
Merging blocks 2 and 21
Merging blocks 12 and 28
s331 ()
{
  int i;
  int D.18578;
  int i;
  int nl;
  float chksum;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  int _2;
  float _3;
  _Bool _8;
  _Bool _11;
  unsigned int ivtmp_14;
  unsigned int ivtmp_42;
  unsigned int ivtmp_50;
  float _51;
  unsigned int ivtmp_54;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s331 ");
  start_t_13 = mysecond ();
  _8 = 0;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       18
;;                2
  # nl_5 = PHI <nl_46(18), 0(2)>
  # ivtmp_42 = PHI <ivtmp_14(18), 10000(2)>
  _11 = 0;
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       25
;;                12
  # j_48 = PHI <j_52(25), -1(12)>
  # i_49 = PHI <i_53(25), 0(12)>
  # ivtmp_50 = PHI <ivtmp_54(25), 32000(12)>
  _51 = a[i_49];
  if (_51 < 0.0)
    goto <bb 24>; [41.00%]
  else
    goto <bb 23>; [59.00%]
;;    succ:       24
;;                23

;;   basic block 23, loop depth 2
;;    pred:       22
;;    succ:       24

;;   basic block 24, loop depth 2
;;    pred:       22
;;                23
  # j_52 = PHI <i_49(22), j_48(23)>
  i_53 = i_49 + 1;
  ivtmp_54 = ivtmp_50 - 1;
  if (ivtmp_54 != 0)
    goto <bb 25>; [98.99%]
  else
    goto <bb 17>; [1.01%]
;;    succ:       25
;;                17

;;   basic block 25, loop depth 2
;;    pred:       24
  goto <bb 22>; [100.00%]
;;    succ:       22

;;   basic block 17, loop depth 1
;;    pred:       24
  # j_38 = PHI <j_52(24)>
  chksum_45 = (float) j_38;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, chksum_45);
  nl_46 = nl_5 + 1;
  ivtmp_14 = ivtmp_42 - 1;
  if (ivtmp_14 != 0)
    goto <bb 18>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       18
;;                8

;;   basic block 18, loop depth 1
;;    pred:       17
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 8, loop depth 0
;;    pred:       17
  # j_39 = PHI <j_38(17)>
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_13;
  printf ("S331\t %.3f \t\t", clock_dif_23);
  _2 = j_39 + 1;
  _3 = (float) _2;
  temp = _3;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s332 (s332, funcdef_no=672, decl_uid=10052, cgraph_uid=672, symbol_order=693)

s332 (float t)
{
  int i;
  int D.18598;
  int i;
  int nl;
  float chksum;
  float value;
  int index;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _3;
  unsigned int ivtmp_5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_7;
  unsigned int ivtmp_13;
  float prephitmp_29;
  float _31;
  float _41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s332 ");
  start_t_12 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_43 = PHI <0(7), i_18(10)>
  # ivtmp_13 = PHI <32000(7), ivtmp_7(10)>
  _1 = a[i_43];
  if (_1 > t_15(D))
    goto <bb 4>; [5.50%]
  else
    goto <bb 5>; [94.50%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 1
;;    pred:       3
  # _3 = PHI <_1(3)>
  # i_30 = PHI <i_43(3)>
  _31 = (float) i_30;
  _41 = _3 + _31;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       3
  i_18 = i_43 + 1;
  ivtmp_7 = ivtmp_13 - 1;
  if (ivtmp_7 != 0)
    goto <bb 10>; [98.93%]
  else
    goto <bb 6>; [1.07%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       4
;;                5
  # value_4 = PHI <_3(4), -1.0e+0(5)>
  # prephitmp_29 = PHI <_41(4), -3.0e+0(5)>
L20:
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, prephitmp_29);
  nl_21 = nl_33 + 1;
  ivtmp_5 = ivtmp_6 - 1;
  if (ivtmp_5 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_33 = PHI <0(2), nl_21(9)>
  # ivtmp_6 = PHI <10000(2), ivtmp_5(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  # value_42 = PHI <value_4(6)>
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_12;
  printf ("S332\t %.3f \t\t", clock_dif_24);
  temp = value_42;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s341 (s341, funcdef_no=673, decl_uid=10069, cgraph_uid=673, symbol_order=694)

s341 ()
{
  int i;
  int D.18616;
  int i;
  int nl;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_25;
  unsigned int ivtmp_26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init.part.3 ("s341 ");
  start_t_13 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # j_29 = PHI <-1(7), j_2(10)>
  # i_30 = PHI <0(7), i_16(10)>
  # ivtmp_26 = PHI <32000(7), ivtmp_25(10)>
  _1 = b[i_30];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  j_14 = j_29 + 1;
  a[j_14] = _1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  # j_2 = PHI <j_14(4), j_29(3)>
  i_16 = i_30 + 1;
  ivtmp_25 = ivtmp_26 - 1;
  if (ivtmp_25 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_39 + 1;
  ivtmp_5 = ivtmp_4 - 1;
  if (ivtmp_5 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_39 = PHI <0(2), nl_18(9)>
  # ivtmp_4 = PHI <10000(2), ivtmp_5(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_13;
  printf ("S341\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s342 (s342, funcdef_no=674, decl_uid=10083, cgraph_uid=674, symbol_order=695)

s342 ()
{
  int i;
  int D.18634;
  int i;
  int nl;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  unsigned int ivtmp_5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_26;
  unsigned int ivtmp_27;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init.part.3 ("s342 ");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # j_30 = PHI <-1(7), j_3(10)>
  # i_31 = PHI <0(7), i_17(10)>
  # ivtmp_27 = PHI <32000(7), ivtmp_26(10)>
  _1 = a[i_31];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  j_15 = j_30 + 1;
  _2 = b[j_15];
  a[i_31] = _2;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  # j_3 = PHI <j_15(4), j_30(3)>
  i_17 = i_31 + 1;
  ivtmp_26 = ivtmp_27 - 1;
  if (ivtmp_26 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_19 = nl_40 + 1;
  ivtmp_6 = ivtmp_5 - 1;
  if (ivtmp_6 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_40 = PHI <0(2), nl_19(9)>
  # ivtmp_5 = PHI <10000(2), ivtmp_6(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_21 = mysecond ();
  clock_dif_22 = end_t_21 - start_t_14;
  printf ("S342\t %.3f \t\t", clock_dif_22);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s343 (s343, funcdef_no=675, decl_uid=10097, cgraph_uid=675, symbol_order=696)

s343 ()
{
  int i;
  int D.18652;
  int j;
  int i;
  int nl;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  unsigned int ivtmp_6;
  unsigned int ivtmp_7;
  unsigned int ivtmp_33;
  unsigned int ivtmp_35;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init.part.3 ("s343 ");
  start_t_17 = mysecond ();
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 13, loop depth 3
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       7
;;                13
  # k_38 = PHI <k_39(7), k_3(13)>
  # j_41 = PHI <0(7), j_21(13)>
  # ivtmp_43 = PHI <256(7), ivtmp_35(13)>
  _1 = bb[j_41][i_40];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 3
;;    pred:       3
  k_19 = k_38 + 1;
  _2 = aa[j_41][i_40];
  array[k_19] = _2;
;;    succ:       5

;;   basic block 5, loop depth 3
;;    pred:       4
;;                3
  # k_3 = PHI <k_19(4), k_38(3)>
  j_21 = j_41 + 1;
  ivtmp_35 = ivtmp_43 - 1;
  if (ivtmp_35 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       13
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  # k_45 = PHI <k_3(5)>
  i_22 = i_40 + 1;
  ivtmp_44 = ivtmp_6 - 1;
  if (ivtmp_44 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 2
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       9
;;                12
  # k_39 = PHI <-1(9), k_45(12)>
  # i_40 = PHI <0(9), i_22(12)>
  # ivtmp_6 = PHI <256(9), ivtmp_44(12)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_47 + 1;
  ivtmp_7 = ivtmp_33 - 1;
  if (ivtmp_7 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       8
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       2
;;                11
  # nl_47 = PHI <0(2), nl_24(11)>
  # ivtmp_33 = PHI <390(2), ivtmp_7(11)>
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 0
;;    pred:       8
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_17;
  printf ("S343\t %.3f \t\t", clock_dif_27);
  check (0);
  return 0;
;;    succ:       EXIT

}



;; Function s351 (s351, funcdef_no=676, decl_uid=10115, cgraph_uid=676, symbol_order=697)

Merging blocks 5 and 9
s351 ()
{
  vector(4) float * vectp_a.3527;
  vector(4) float * vectp_a.3526;
  vector(4) float vect__4.3525;
  vector(4) float vect__3.3524;
  vector(4) float vect__2.3523;
  vector(4) float vect__2.3522;
  vector(4) float vect__2.3521;
  vector(4) float vect__2.3520;
  vector(4) float vect__2.3519;
  vector(4) float * vectp_b.3518;
  vector(4) float * vectp_b.3517;
  vector(4) float vect__1.3516;
  vector(4) float vect__1.3515;
  vector(4) float vect__1.3514;
  vector(4) float vect__1.3513;
  vector(4) float vect__1.3512;
  vector(4) float * vectp_a.3511;
  vector(4) float * vectp_a.3510;
  int i;
  int nl;
  float alpha;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  int _5;
  float _6;
  float _7;
  float _8;
  float _9;
  int _10;
  float _11;
  float _12;
  float _13;
  float _14;
  int _15;
  float _16;
  float _17;
  float _18;
  float _19;
  int _20;
  float _21;
  float _22;
  float _23;
  float _24;
  vector(4) float vect_cst__26;
  vector(4) float _27;
  vector(4) float vect_cst__28;
  vector(4) float _48;
  vector(4) float vect_cst__49;
  vector(4) float _50;
  vector(4) float vect_cst__51;
  vector(4) float _52;
  vector(4) float vect_cst__53;
  vector(4) float _58;
  unsigned int ivtmp_87;
  unsigned int ivtmp_88;
  unsigned int ivtmp_89;
  unsigned int ivtmp_90;
  unsigned int ivtmp_105;
  unsigned int ivtmp_106;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init ("s351 ");
  start_t_33 = mysecond ();
  alpha_34 = c[0];
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_55 = PHI <i_40(8), 0(5)>
  # ivtmp_90 = PHI <ivtmp_89(8), 6400(5)>
  # vectp_a.3510_86 = PHI <vectp_a.3510_79(8), &a(5)>
  # vectp_b.3517_69 = PHI <vectp_b.3517_68(8), &b(5)>
  # vectp_a.3526_94 = PHI <vectp_a.3526_95(8), &a(5)>
  # ivtmp_105 = PHI <ivtmp_106(8), 0(5)>
  _1 = a[i_55];
  _2 = b[i_55];
  _3 = _2 * alpha_34;
  _4 = _1 + _3;
  _5 = i_55 + 1;
  _6 = a[_5];
  _7 = b[_5];
  _8 = _7 * alpha_34;
  _9 = _6 + _8;
  _10 = i_55 + 2;
  _11 = a[_10];
  _12 = b[_10];
  _13 = _12 * alpha_34;
  _14 = _11 + _13;
  _15 = i_55 + 3;
  _16 = a[_15];
  _17 = b[_15];
  _18 = _17 * alpha_34;
  _19 = _16 + _18;
  _20 = i_55 + 4;
  vect__1.3512_78 = MEM[(float *)vectp_a.3510_86];
  vectp_a.3510_77 = vectp_a.3510_86 + 16;
  vect__1.3513_76 = MEM[(float *)vectp_a.3510_77];
  vectp_a.3510_75 = vectp_a.3510_77 + 16;
  vect__1.3514_74 = MEM[(float *)vectp_a.3510_75];
  vectp_a.3510_73 = vectp_a.3510_75 + 16;
  vect__1.3515_72 = MEM[(float *)vectp_a.3510_73];
  vectp_a.3510_71 = vectp_a.3510_73 + 16;
  vect__1.3516_70 = MEM[(float *)vectp_a.3510_71];
  _21 = a[_20];
  vect__2.3519_67 = MEM[(float *)vectp_b.3517_69];
  vectp_b.3517_66 = vectp_b.3517_69 + 16;
  vect__2.3520_65 = MEM[(float *)vectp_b.3517_66];
  vectp_b.3517_64 = vectp_b.3517_66 + 16;
  vect__2.3521_63 = MEM[(float *)vectp_b.3517_64];
  vectp_b.3517_62 = vectp_b.3517_64 + 16;
  vect__2.3522_61 = MEM[(float *)vectp_b.3517_62];
  vectp_b.3517_60 = vectp_b.3517_62 + 16;
  vect__2.3523_59 = MEM[(float *)vectp_b.3517_60];
  _22 = b[_20];
  vect__3.3524_25 = vect__2.3519_67 * vect_cst__26;
  vect__3.3524_85 = vect__2.3520_65 * vect_cst__28;
  vect__3.3524_84 = vect__2.3521_63 * vect_cst__49;
  vect__3.3524_83 = vect__2.3522_61 * vect_cst__51;
  vect__3.3524_82 = vect__2.3523_59 * vect_cst__53;
  _23 = _22 * alpha_34;
  vect__4.3525_81 = vect__1.3512_78 + vect__3.3524_25;
  vect__4.3525_80 = vect__1.3513_76 + vect__3.3524_85;
  vect__4.3525_91 = vect__1.3514_74 + vect__3.3524_84;
  vect__4.3525_92 = vect__1.3515_72 + vect__3.3524_83;
  vect__4.3525_93 = vect__1.3516_70 + vect__3.3524_82;
  _24 = _21 + _23;
  MEM[(float *)vectp_a.3526_94] = vect__4.3525_81;
  vectp_a.3526_97 = vectp_a.3526_94 + 16;
  MEM[(float *)vectp_a.3526_97] = vect__4.3525_80;
  vectp_a.3526_99 = vectp_a.3526_97 + 16;
  MEM[(float *)vectp_a.3526_99] = vect__4.3525_91;
  vectp_a.3526_101 = vectp_a.3526_99 + 16;
  MEM[(float *)vectp_a.3526_101] = vect__4.3525_92;
  vectp_a.3526_103 = vectp_a.3526_101 + 16;
  MEM[(float *)vectp_a.3526_103] = vect__4.3525_93;
  i_40 = i_55 + 5;
  ivtmp_89 = ivtmp_90 - 1;
  vectp_a.3510_79 = vectp_a.3510_71 + 16;
  vectp_b.3517_68 = vectp_b.3517_60 + 16;
  vectp_a.3526_95 = vectp_a.3526_103 + 16;
  ivtmp_106 = ivtmp_105 + 1;
  if (ivtmp_106 < 1600)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_42 = nl_54 + 1;
  ivtmp_87 = ivtmp_88 - 1;
  if (ivtmp_87 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_54 = PHI <0(2), nl_42(7)>
  # ivtmp_88 = PHI <80000(2), ivtmp_87(7)>
  _58 = {alpha_34, alpha_34, alpha_34, alpha_34};
  vect_cst__53 = _58;
  _52 = {alpha_34, alpha_34, alpha_34, alpha_34};
  vect_cst__51 = _52;
  _50 = {alpha_34, alpha_34, alpha_34, alpha_34};
  vect_cst__49 = _50;
  _48 = {alpha_34, alpha_34, alpha_34, alpha_34};
  vect_cst__28 = _48;
  _27 = {alpha_34, alpha_34, alpha_34, alpha_34};
  vect_cst__26 = _27;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_44 = mysecond ();
  clock_dif_45 = end_t_44 - start_t_33;
  printf ("S351\t %.3f \t\t", clock_dif_45);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s1351 (s1351, funcdef_no=677, decl_uid=10129, cgraph_uid=677, symbol_order=698)

Merging blocks 5 and 9
s1351 ()
{
  vector(4) float * vectp_a.3549;
  vector(4) float * vectp_a.3548;
  vector(4) float vect__3.3547;
  vector(4) float vect__2.3546;
  vector(4) float * vectp_c.3545;
  vector(4) float * vectp_c.3544;
  vector(4) float vect__1.3543;
  vector(4) float * vectp_b.3542;
  vector(4) float * vectp_b.3541;
  int i;
  int D.18715;
  int i;
  float * restrict C;
  float * restrict B;
  float * restrict A;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_34;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init.part.3 ("s351 ");
  start_t_15 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # A_37 = PHI <A_17(8), &a(5)>
  # B_45 = PHI <B_18(8), &b(5)>
  # C_38 = PHI <C_19(8), &c(5)>
  # i_39 = PHI <i_20(8), 0(5)>
  # ivtmp_44 = PHI <ivtmp_43(8), 32000(5)>
  # vectp_b.3541_33 = PHI <vectp_b.3541_32(8), &b(5)>
  # vectp_c.3544_8 = PHI <vectp_c.3544_7(8), &c(5)>
  # vectp_a.3548_35 = PHI <vectp_a.3548_5(8), &a(5)>
  # ivtmp_41 = PHI <ivtmp_40(8), 0(5)>
  vect__1.3543_10 = MEM[(float *)vectp_b.3541_33];
  _1 = *B_45;
  vect__2.3546_6 = MEM[(float *)vectp_c.3544_8];
  _2 = *C_38;
  vect__3.3547_4 = vect__1.3543_10 + vect__2.3546_6;
  _3 = _1 + _2;
  MEM[(float *)vectp_a.3548_35] = vect__3.3547_4;
  A_17 = A_37 + 4;
  B_18 = B_45 + 4;
  C_19 = C_38 + 4;
  i_20 = i_39 + 1;
  ivtmp_43 = ivtmp_44 - 1;
  vectp_b.3541_32 = vectp_b.3541_33 + 16;
  vectp_c.3544_7 = vectp_c.3544_8 + 16;
  vectp_a.3548_5 = vectp_a.3548_35 + 16;
  ivtmp_40 = ivtmp_41 + 1;
  if (ivtmp_40 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_36 + 1;
  ivtmp_34 = ivtmp_42 - 1;
  if (ivtmp_34 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_36 = PHI <0(2), nl_22(7)>
  # ivtmp_42 = PHI <80000(2), ivtmp_34(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_15;
  printf ("S1351\t %.3f \t\t", clock_dif_25);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s352 (s352, funcdef_no=678, decl_uid=10145, cgraph_uid=678, symbol_order=699)

Merging blocks 5 and 9
s352 ()
{
  float stmp_dot_37.3580;
  vector(4) float vect__3.3579;
  vector(4) float vect__2.3578;
  vector(4) float vect__2.3577;
  vector(4) float vect__2.3576;
  vector(4) float vect__2.3575;
  vector(4) float vect__2.3574;
  vector(4) float * vectp_b.3573;
  vector(4) float * vectp_b.3572;
  vector(4) float vect__1.3571;
  vector(4) float vect__1.3570;
  vector(4) float vect__1.3569;
  vector(4) float vect__1.3568;
  vector(4) float vect__1.3567;
  vector(4) float * vectp_a.3566;
  vector(4) float * vectp_a.3565;
  int i;
  int nl;
  float dot;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  int _5;
  float _6;
  float _8;
  float _9;
  float _10;
  int _11;
  float _12;
  float _14;
  float _15;
  float _16;
  int _17;
  float _18;
  float _19;
  float _20;
  float _21;
  int _22;
  float _23;
  float _24;
  float _25;
  unsigned int ivtmp_69;
  unsigned int ivtmp_70;
  unsigned int ivtmp_144;
  unsigned int ivtmp_145;
  unsigned int ivtmp_146;
  unsigned int ivtmp_147;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init ("s352 ");
  start_t_35 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # dot_54 = PHI <dot_37(8), 0.0(5)>
  # i_56 = PHI <i_38(8), 0(5)>
  # ivtmp_147 = PHI <ivtmp_146(8), 6400(5)>
  # vectp_a.3565_143 = PHI <vectp_a.3565_142(8), &a(5)>
  # vectp_b.3572_132 = PHI <vectp_b.3572_131(8), &b(5)>
  # ivtmp_70 = PHI <ivtmp_69(8), 0(5)>
  _1 = a[i_56];
  _2 = b[i_56];
  _3 = _1 * _2;
  _4 = _3 + dot_54;
  _5 = i_56 + 1;
  _6 = a[_5];
  _8 = b[_5];
  _9 = _6 * _8;
  _10 = _9 + _4;
  _11 = i_56 + 2;
  _12 = a[_11];
  _14 = b[_11];
  _15 = _12 * _14;
  _16 = _15 + _10;
  _17 = i_56 + 3;
  _18 = a[_17];
  _19 = b[_17];
  _20 = _18 * _19;
  _21 = _20 + _16;
  _22 = i_56 + 4;
  vect__1.3567_141 = MEM[(float *)vectp_a.3565_143];
  vectp_a.3565_140 = vectp_a.3565_143 + 16;
  vect__1.3568_139 = MEM[(float *)vectp_a.3565_140];
  vectp_a.3565_138 = vectp_a.3565_140 + 16;
  vect__1.3569_137 = MEM[(float *)vectp_a.3565_138];
  vectp_a.3565_136 = vectp_a.3565_138 + 16;
  vect__1.3570_135 = MEM[(float *)vectp_a.3565_136];
  vectp_a.3565_134 = vectp_a.3565_136 + 16;
  vect__1.3571_133 = MEM[(float *)vectp_a.3565_134];
  _23 = a[_22];
  vect__2.3574_130 = MEM[(float *)vectp_b.3572_132];
  vectp_b.3572_123 = vectp_b.3572_132 + 16;
  vect__2.3575_122 = MEM[(float *)vectp_b.3572_123];
  vectp_b.3572_121 = vectp_b.3572_123 + 16;
  vect__2.3576_120 = MEM[(float *)vectp_b.3572_121];
  vectp_b.3572_119 = vectp_b.3572_121 + 16;
  vect__2.3577_118 = MEM[(float *)vectp_b.3572_119];
  vectp_b.3572_117 = vectp_b.3572_119 + 16;
  vect__2.3578_116 = MEM[(float *)vectp_b.3572_117];
  _24 = b[_22];
  vect__3.3579_115 = vect__1.3567_141 * vect__2.3574_130;
  vect__3.3579_114 = vect__1.3568_139 * vect__2.3575_122;
  vect__3.3579_113 = vect__1.3569_137 * vect__2.3576_120;
  vect__3.3579_112 = vect__1.3570_135 * vect__2.3577_118;
  vect__3.3579_111 = vect__1.3571_133 * vect__2.3578_116;
  _25 = _23 * _24;
  stmp_dot_37.3580_110 = BIT_FIELD_REF <vect__3.3579_115, 32, 0>;
  stmp_dot_37.3580_109 = dot_54 + stmp_dot_37.3580_110;
  stmp_dot_37.3580_108 = BIT_FIELD_REF <vect__3.3579_115, 32, 32>;
  stmp_dot_37.3580_107 = stmp_dot_37.3580_109 + stmp_dot_37.3580_108;
  stmp_dot_37.3580_106 = BIT_FIELD_REF <vect__3.3579_115, 32, 64>;
  stmp_dot_37.3580_105 = stmp_dot_37.3580_107 + stmp_dot_37.3580_106;
  stmp_dot_37.3580_104 = BIT_FIELD_REF <vect__3.3579_115, 32, 96>;
  stmp_dot_37.3580_103 = stmp_dot_37.3580_105 + stmp_dot_37.3580_104;
  stmp_dot_37.3580_102 = BIT_FIELD_REF <vect__3.3579_114, 32, 0>;
  stmp_dot_37.3580_101 = stmp_dot_37.3580_103 + stmp_dot_37.3580_102;
  stmp_dot_37.3580_100 = BIT_FIELD_REF <vect__3.3579_114, 32, 32>;
  stmp_dot_37.3580_99 = stmp_dot_37.3580_101 + stmp_dot_37.3580_100;
  stmp_dot_37.3580_98 = BIT_FIELD_REF <vect__3.3579_114, 32, 64>;
  stmp_dot_37.3580_97 = stmp_dot_37.3580_99 + stmp_dot_37.3580_98;
  stmp_dot_37.3580_96 = BIT_FIELD_REF <vect__3.3579_114, 32, 96>;
  stmp_dot_37.3580_95 = stmp_dot_37.3580_97 + stmp_dot_37.3580_96;
  stmp_dot_37.3580_94 = BIT_FIELD_REF <vect__3.3579_113, 32, 0>;
  stmp_dot_37.3580_93 = stmp_dot_37.3580_95 + stmp_dot_37.3580_94;
  stmp_dot_37.3580_92 = BIT_FIELD_REF <vect__3.3579_113, 32, 32>;
  stmp_dot_37.3580_91 = stmp_dot_37.3580_93 + stmp_dot_37.3580_92;
  stmp_dot_37.3580_90 = BIT_FIELD_REF <vect__3.3579_113, 32, 64>;
  stmp_dot_37.3580_89 = stmp_dot_37.3580_91 + stmp_dot_37.3580_90;
  stmp_dot_37.3580_88 = BIT_FIELD_REF <vect__3.3579_113, 32, 96>;
  stmp_dot_37.3580_87 = stmp_dot_37.3580_89 + stmp_dot_37.3580_88;
  stmp_dot_37.3580_86 = BIT_FIELD_REF <vect__3.3579_112, 32, 0>;
  stmp_dot_37.3580_85 = stmp_dot_37.3580_87 + stmp_dot_37.3580_86;
  stmp_dot_37.3580_84 = BIT_FIELD_REF <vect__3.3579_112, 32, 32>;
  stmp_dot_37.3580_83 = stmp_dot_37.3580_85 + stmp_dot_37.3580_84;
  stmp_dot_37.3580_82 = BIT_FIELD_REF <vect__3.3579_112, 32, 64>;
  stmp_dot_37.3580_81 = stmp_dot_37.3580_83 + stmp_dot_37.3580_82;
  stmp_dot_37.3580_80 = BIT_FIELD_REF <vect__3.3579_112, 32, 96>;
  stmp_dot_37.3580_79 = stmp_dot_37.3580_81 + stmp_dot_37.3580_80;
  stmp_dot_37.3580_78 = BIT_FIELD_REF <vect__3.3579_111, 32, 0>;
  stmp_dot_37.3580_77 = stmp_dot_37.3580_79 + stmp_dot_37.3580_78;
  stmp_dot_37.3580_76 = BIT_FIELD_REF <vect__3.3579_111, 32, 32>;
  stmp_dot_37.3580_75 = stmp_dot_37.3580_77 + stmp_dot_37.3580_76;
  stmp_dot_37.3580_74 = BIT_FIELD_REF <vect__3.3579_111, 32, 64>;
  stmp_dot_37.3580_73 = stmp_dot_37.3580_75 + stmp_dot_37.3580_74;
  stmp_dot_37.3580_72 = BIT_FIELD_REF <vect__3.3579_111, 32, 96>;
  dot_37 = stmp_dot_37.3580_73 + stmp_dot_37.3580_72;
  i_38 = i_56 + 5;
  ivtmp_146 = ivtmp_147 - 1;
  vectp_a.3565_142 = vectp_a.3565_134 + 16;
  vectp_b.3572_131 = vectp_b.3572_117 + 16;
  ivtmp_69 = ivtmp_70 + 1;
  if (ivtmp_69 < 1600)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # dot_149 = PHI <dot_37(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, dot_149);
  nl_40 = nl_55 + 1;
  ivtmp_144 = ivtmp_145 - 1;
  if (ivtmp_144 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_55 = PHI <0(2), nl_40(7)>
  # ivtmp_145 = PHI <80000(2), ivtmp_144(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # dot_148 = PHI <dot_149(4)>
  end_t_42 = mysecond ();
  clock_dif_43 = end_t_42 - start_t_35;
  printf ("S352\t %.3f \t\t", clock_dif_43);
  temp = dot_148;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s353 (s353, funcdef_no=679, decl_uid=10160, cgraph_uid=679, symbol_order=700)

s353 (int * restrict ip)
{
  int i;
  int nl;
  float alpha;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  long unsigned int _2;
  long unsigned int _3;
  int * _4;
  int _5;
  float _6;
  float _7;
  float _8;
  int _9;
  float _10;
  sizetype _11;
  sizetype _12;
  int * _13;
  int _14;
  float _15;
  float _16;
  float _17;
  int _18;
  float _19;
  sizetype _20;
  sizetype _21;
  int * _22;
  int _23;
  float _24;
  float _25;
  float _26;
  int _27;
  float _28;
  sizetype _29;
  sizetype _30;
  int * _31;
  int _32;
  float _33;
  float _34;
  float _35;
  int _36;
  float _37;
  sizetype _38;
  sizetype _39;
  int * _40;
  int _41;
  float _42;
  float _43;
  float _44;
  unsigned int ivtmp_169;
  unsigned int ivtmp_170;
  unsigned int ivtmp_171;
  unsigned int ivtmp_172;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init ("s353 ");
  start_t_53 = mysecond ();
  alpha_54 = c[0];
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_76 = PHI <0(5), i_61(8)>
  # ivtmp_172 = PHI <6400(5), ivtmp_171(8)>
  _1 = a[i_76];
  _2 = (long unsigned int) i_76;
  _3 = _2 * 4;
  _4 = ip_55(D) + _3;
  _5 = *_4;
  _6 = b[_5];
  _7 = _6 * alpha_54;
  _8 = _1 + _7;
  a[i_76] = _8;
  _9 = i_76 + 1;
  _10 = a[_9];
  _11 = _2 + 1;
  _12 = _11 * 4;
  _13 = ip_55(D) + _12;
  _14 = *_13;
  _15 = b[_14];
  _16 = _15 * alpha_54;
  _17 = _10 + _16;
  a[_9] = _17;
  _18 = i_76 + 2;
  _19 = a[_18];
  _20 = _2 + 2;
  _21 = _20 * 4;
  _22 = ip_55(D) + _21;
  _23 = *_22;
  _24 = b[_23];
  _25 = _24 * alpha_54;
  _26 = _19 + _25;
  a[_18] = _26;
  _27 = i_76 + 3;
  _28 = a[_27];
  _29 = _2 + 3;
  _30 = _29 * 4;
  _31 = ip_55(D) + _30;
  _32 = *_31;
  _33 = b[_32];
  _34 = _33 * alpha_54;
  _35 = _28 + _34;
  a[_27] = _35;
  _36 = i_76 + 4;
  _37 = a[_36];
  _38 = _2 + 4;
  _39 = _38 * 4;
  _40 = ip_55(D) + _39;
  _41 = *_40;
  _42 = b[_41];
  _43 = _42 * alpha_54;
  _44 = _37 + _43;
  a[_36] = _44;
  i_61 = i_76 + 5;
  ivtmp_171 = ivtmp_172 - 1;
  if (ivtmp_171 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_63 = nl_75 + 1;
  ivtmp_169 = ivtmp_170 - 1;
  if (ivtmp_169 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_75 = PHI <0(2), nl_63(7)>
  # ivtmp_170 = PHI <10000(2), ivtmp_169(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_65 = mysecond ();
  clock_dif_66 = end_t_65 - start_t_53;
  printf ("S353\t %.3f \t\t", clock_dif_66);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s421 (s421, funcdef_no=680, decl_uid=10174, cgraph_uid=680, symbol_order=701)

Removing basic block 16
Merging blocks 2 and 21
Merging blocks 5 and 20
Merging blocks 8 and 15
s421 ()
{
  vector(4) float * vectp_xx.3627;
  vector(4) float * vectp_xx.3626;
  vector(4) float * vectp_xx.3625;
  vector(4) float * vectp_xx.3624;
  vector(4) float vect__11.3623;
  vector(4) float vect__8.3622;
  vector(4) float * vectp_a.3621;
  vector(4) float * vectp_a.3620;
  vector(4) float vect__7.3619;
  vector(4) float * vectp_xx.3618;
  vector(4) float * vectp_xx.3617;
  unsigned int tmp.3616;
  int tmp.3615;
  float stmp__18.3614;
  vector(4) float vect__16.3613;
  vector(4) float * vectp_xx.3612;
  vector(4) float * vectp_xx.3611;
  float temp_lsm.3610;
  int i;
  int i;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float * xx.140_1;
  float * xx.141_2;
  sizetype _3;
  sizetype _4;
  sizetype _5;
  float * _6;
  float _7;
  float _8;
  long unsigned int _9;
  float * _10;
  float _11;
  float * xx.144_12;
  long unsigned int _13;
  long unsigned int _14;
  float * _15;
  float _16;
  float _18;
  float _22;
  float _23;
  float * _24;
  sizetype _39;
  sizetype _42;
  long unsigned int _43;
  long unsigned int _44;
  float * _45;
  sizetype _47;
  unsigned int ivtmp_49;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_76;
  unsigned int ivtmp_77;
  unsigned int ivtmp_82;
  unsigned int ivtmp_84;
  unsigned int ivtmp_90;
  unsigned int ivtmp_91;
  float * _92;
  float _93;
  long unsigned int _95;
  unsigned int ivtmp_96;
  unsigned int ivtmp_97;
  unsigned int ivtmp_98;
  float _99;
  unsigned int ivtmp_100;
  vector(4) float vect_cst__101;
  unsigned int ivtmp_105;
  unsigned int ivtmp_106;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  xx.140_1 = xx;
  vect_cst__101 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       14
;;                2
  # i_67 = PHI <i_46(14), 0(2)>
  # ivtmp_77 = PHI <ivtmp_76(14), 32000(2)>
  # vectp_xx.3626_102 = PHI <vectp_xx.3626_103(14), xx.140_1(2)>
  # ivtmp_105 = PHI <ivtmp_106(14), 0(2)>
  _43 = (long unsigned int) i_67;
  _44 = _43 * 4;
  _45 = xx.140_1 + _44;
  MEM[(float *)vectp_xx.3626_102] = vect_cst__101;
  i_46 = i_67 + 1;
  ivtmp_76 = ivtmp_77 - 1;
  vectp_xx.3626_103 = vectp_xx.3626_102 + 16;
  ivtmp_106 = ivtmp_105 + 1;
  if (ivtmp_106 < 8000)
    goto <bb 14>; [83.33%]
  else
    goto <bb 4>; [16.67%]
;;    succ:       14
;;                4

;;   basic block 14, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  init ("s421 ");
  start_t_28 = mysecond ();
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       4
;;                12
  # nl_61 = PHI <0(4), nl_33(12)>
  # ivtmp_90 = PHI <40000(4), ivtmp_82(12)>
  xx.141_2 = xx;
  yy = xx.141_2;
  vectp_xx.3618_88 = xx.141_2 + 4;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       13
;;                5
  # i_62 = PHI <i_31(13), 0(5)>
  # ivtmp_96 = PHI <ivtmp_91(13), 31999(5)>
  # vectp_xx.3617_85 = PHI <vectp_xx.3617_86(13), vectp_xx.3618_88(5)>
  # vectp_a.3620_81 = PHI <vectp_a.3620_78(13), &a(5)>
  # vectp_xx.3624_53 = PHI <vectp_xx.3624_17(13), xx.141_2(5)>
  # ivtmp_55 = PHI <ivtmp_100(13), 0(5)>
  _3 = (sizetype) i_62;
  _4 = _3 + 1;
  _5 = _4 * 4;
  _6 = xx.141_2 + _5;
  vect__7.3619_83 = MEM[(float *)vectp_xx.3617_85];
  _7 = *_6;
  vect__8.3622_79 = MEM[(float *)vectp_a.3620_81];
  _8 = a[i_62];
  _9 = _3 * 4;
  _10 = xx.141_2 + _9;
  vect__11.3623_80 = vect__7.3619_83 + vect__8.3622_79;
  _11 = _7 + _8;
  MEM[(float *)vectp_xx.3624_53] = vect__11.3623_80;
  i_31 = i_62 + 1;
  ivtmp_91 = ivtmp_96 - 1;
  vectp_xx.3617_86 = vectp_xx.3617_85 + 16;
  vectp_a.3620_78 = vectp_a.3620_81 + 16;
  vectp_xx.3624_17 = vectp_xx.3624_53 + 16;
  ivtmp_100 = ivtmp_55 + 1;
  if (ivtmp_100 < 7999)
    goto <bb 13>; [96.00%]
  else
    goto <bb 17>; [4.00%]
;;    succ:       13
;;                17

;;   basic block 13, loop depth 2
;;    pred:       6
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 17, loop depth 1
;;    pred:       6
;;    succ:       18

;;   basic block 18, loop depth 2
;;    pred:       17
;;                19
  # i_51 = PHI <31996(17), i_89(19)>
  # ivtmp_49 = PHI <3(17), ivtmp_84(19)>
  _47 = (sizetype) i_51;
  _42 = _47 + 1;
  _39 = _42 * 4;
  _24 = xx.141_2 + _39;
  _23 = *_24;
  _22 = a[i_51];
  _95 = _47 * 4;
  _92 = xx.141_2 + _95;
  _93 = _23 + _22;
  *_92 = _93;
  i_89 = i_51 + 1;
  ivtmp_84 = ivtmp_49 - 1;
  if (ivtmp_84 != 0)
    goto <bb 19>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       19
;;                7

;;   basic block 19, loop depth 2
;;    pred:       18
  goto <bb 18>; [100.00%]
;;    succ:       18

;;   basic block 7, loop depth 1
;;    pred:       18
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_33 = nl_61 + 1;
  ivtmp_82 = ivtmp_90 - 1;
  if (ivtmp_82 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 1
;;    pred:       7
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       7
  end_t_35 = mysecond ();
  clock_dif_36 = end_t_35 - start_t_28;
  printf ("S421\t %.3f \t\t", clock_dif_36);
  temp = 0.0;
  xx.144_12 = xx;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       11
;;                8
  # i_63 = PHI <i_40(11), 0(8)>
  # temp_lsm.3610_21 = PHI <_18(11), 0.0(8)>
  # ivtmp_98 = PHI <ivtmp_97(11), 32000(8)>
  # vectp_xx.3611_75 = PHI <vectp_xx.3611_74(11), xx.144_12(8)>
  # ivtmp_56 = PHI <ivtmp_54(11), 0(8)>
  _13 = (long unsigned int) i_63;
  _14 = _13 * 4;
  _15 = xx.144_12 + _14;
  vect__16.3613_73 = MEM[(float *)vectp_xx.3611_75];
  _16 = *_15;
  stmp__18.3614_72 = BIT_FIELD_REF <vect__16.3613_73, 32, 0>;
  stmp__18.3614_71 = temp_lsm.3610_21 + stmp__18.3614_72;
  stmp__18.3614_70 = BIT_FIELD_REF <vect__16.3613_73, 32, 32>;
  stmp__18.3614_69 = stmp__18.3614_71 + stmp__18.3614_70;
  stmp__18.3614_60 = BIT_FIELD_REF <vect__16.3613_73, 32, 64>;
  stmp__18.3614_59 = stmp__18.3614_69 + stmp__18.3614_60;
  stmp__18.3614_58 = BIT_FIELD_REF <vect__16.3613_73, 32, 96>;
  _18 = stmp__18.3614_59 + stmp__18.3614_58;
  i_40 = i_63 + 1;
  ivtmp_97 = ivtmp_98 - 1;
  vectp_xx.3611_74 = vectp_xx.3611_75 + 16;
  ivtmp_54 = ivtmp_56 + 1;
  if (ivtmp_54 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       9
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 10, loop depth 0
;;    pred:       9
  # _99 = PHI <_18(9)>
  temp = _99;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s1421 (s1421, funcdef_no=681, decl_uid=10191, cgraph_uid=681, symbol_order=702)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

ivtmp_2 -> { ivtmp_81 }
.MEM_50 -> { .MEM_27 }
_69 -> { _8 }
.MEM_70 -> { .MEM_27 }
i_71 -> { i_28 }
_72 -> { _7 }
_76 -> { _6 }
_77 -> { _3 }
_78 -> { _4 }
_79 -> { _5 }
ivtmp_80 -> { ivtmp_86 }
i_83 -> { i_59 }
.MEM_84 -> { .MEM_61 }
Incremental SSA update started at block: 18
Number of blocks in CFG: 22
Number of blocks to update: 8 ( 36%)


Merging blocks 2 and 23
Merging blocks 8 and 18
Merging blocks 9 and 15
Removing basic block 19
Removing basic block 21
s1421 ()
{
  vector(4) float * vectp_xx.3670;
  vector(4) float * vectp_xx.3669;
  vector(4) float * vectp_b.3668;
  vector(4) float * vectp_b.3667;
  vector(4) float vect__8.3666;
  vector(4) float vect__7.3665;
  vector(4) float * vectp_a.3664;
  vector(4) float * vectp_a.3663;
  vector(4) float vect__6.3662;
  vector(4) float * vectp_prephitmp.3661;
  vector(4) float * vectp_prephitmp.3660;
  float stmp__15.3659;
  vector(4) float vect__13.3658;
  vector(4) float * vectp_xx.3657;
  vector(4) float * vectp_xx.3656;
  float temp_lsm.3655;
  int i;
  int i;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float * xx.146_1;
  unsigned int ivtmp_2;
  long unsigned int _3;
  long unsigned int _4;
  float * _5;
  float _6;
  float _7;
  float _8;
  float * xx.148_9;
  long unsigned int _10;
  long unsigned int _11;
  float * _12;
  float _13;
  float _15;
  float * _19;
  _Bool _20;
  float[32000] * _21;
  unsigned int ivtmp_36;
  unsigned int ivtmp_39;
  long unsigned int _40;
  long unsigned int _41;
  float * _42;
  unsigned int ivtmp_66;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;
  float _69;
  float _72;
  unsigned int ivtmp_73;
  float * pretmp_74;
  float * prephitmp_75;
  float _76;
  long unsigned int _77;
  long unsigned int _78;
  float * _79;
  unsigned int ivtmp_80;
  unsigned int ivtmp_81;
  _Bool _82;
  _Bool _85;
  unsigned int ivtmp_86;
  unsigned int ivtmp_87;
  unsigned int ivtmp_88;
  float _89;
  unsigned int ivtmp_97;
  unsigned int ivtmp_98;
  vector(4) float vect_cst__99;
  unsigned int ivtmp_103;
  unsigned int ivtmp_104;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  xx.146_1 = xx;
  vect_cst__99 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       14
;;                2
  # i_64 = PHI <i_43(14), 0(2)>
  # ivtmp_67 = PHI <ivtmp_66(14), 32000(2)>
  # vectp_xx.3669_100 = PHI <vectp_xx.3669_101(14), xx.146_1(2)>
  # ivtmp_103 = PHI <ivtmp_104(14), 0(2)>
  _40 = (long unsigned int) i_64;
  _41 = _40 * 4;
  _42 = xx.146_1 + _41;
  MEM[(float *)vectp_xx.3669_100] = vect_cst__99;
  i_43 = i_64 + 1;
  ivtmp_66 = ivtmp_67 - 1;
  vectp_xx.3669_101 = vectp_xx.3669_100 + 16;
  ivtmp_104 = ivtmp_103 + 1;
  if (ivtmp_104 < 8000)
    goto <bb 14>; [83.33%]
  else
    goto <bb 4>; [16.67%]
;;    succ:       14
;;                4

;;   basic block 14, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  init ("s421 ");
  start_t_25 = mysecond ();
  xx = &b[16000];
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 13, loop depth 2
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 20, loop depth 1
;;    pred:       8
;;    succ:       16

;;   basic block 16, loop depth 2
;;    pred:       17
;;                20
  # i_83 = PHI <i_71(17), 0(20)>
  # ivtmp_80 = PHI <ivtmp_2(17), 16000(20)>
  _77 = (long unsigned int) i_83;
  _78 = _77 * 4;
  _79 = prephitmp_75 + _78;
  _76 = *_79;
  _72 = a[i_83];
  _69 = _76 + _72;
  b[i_83] = _69;
  i_71 = i_83 + 1;
  ivtmp_2 = ivtmp_80 - 1;
  if (ivtmp_2 != 0)
    goto <bb 17>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       17
;;                6

;;   basic block 17, loop depth 2
;;    pred:       16
  goto <bb 16>; [100.00%]
;;    succ:       16

;;   basic block 22, loop depth 1
;;    pred:       8
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       13
;;                22
  # i_59 = PHI <i_28(13), 0(22)>
  # ivtmp_86 = PHI <ivtmp_81(13), 16000(22)>
  # vectp_prephitmp.3660_14 = PHI <vectp_prephitmp.3660_52(13), prephitmp_75(22)>
  # vectp_a.3663_90 = PHI <vectp_a.3663_91(13), &a(22)>
  # vectp_b.3667_94 = PHI <vectp_b.3667_95(13), &b(22)>
  # ivtmp_97 = PHI <ivtmp_98(13), 0(22)>
  _3 = (long unsigned int) i_59;
  _4 = _3 * 4;
  _5 = prephitmp_75 + _4;
  vect__6.3662_17 = MEM[(float *)vectp_prephitmp.3660_14];
  _6 = *_5;
  vect__7.3665_92 = MEM[(float *)vectp_a.3663_90];
  _7 = a[i_59];
  vect__8.3666_93 = vect__6.3662_17 + vect__7.3665_92;
  _8 = _6 + _7;
  MEM[(float *)vectp_b.3667_94] = vect__8.3666_93;
  i_28 = i_59 + 1;
  ivtmp_81 = ivtmp_86 - 1;
  vectp_prephitmp.3660_52 = vectp_prephitmp.3660_14 + 16;
  vectp_a.3663_91 = vectp_a.3663_90 + 16;
  vectp_b.3667_95 = vectp_b.3667_94 + 16;
  ivtmp_98 = ivtmp_97 + 1;
  if (ivtmp_98 < 4000)
    goto <bb 13>; [96.00%]
  else
    goto <bb 6>; [4.00%]
;;    succ:       13
;;                6

;;   basic block 6, loop depth 1
;;    pred:       16
;;                5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_30 = nl_58 + 1;
  ivtmp_68 = ivtmp_73 - 1;
  if (ivtmp_68 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       7
;;                9

;;   basic block 7, loop depth 1
;;    pred:       6
  pretmp_74 = xx;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       4
;;                7
  # nl_58 = PHI <0(4), nl_30(7)>
  # prephitmp_75 = PHI <&b[16000](4), pretmp_74(7)>
  # ivtmp_73 = PHI <80000(4), ivtmp_68(7)>
  _21 = &b + 16;
  _20 = _21 <= prephitmp_75;
  _19 = prephitmp_75 + 16;
  _85 = _19 <= &b;
  _82 = _20 | _85;
  if (_82 != 0)
    goto <bb 22>; [80.00%]
  else
    goto <bb 20>; [20.00%]
;;    succ:       20
;;                22

;;   basic block 9, loop depth 0
;;    pred:       6
  end_t_32 = mysecond ();
  clock_dif_33 = end_t_32 - start_t_25;
  printf ("S1421\t %.3f \t\t", clock_dif_33);
  temp = 0.0;
  xx.148_9 = xx;
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       12
;;                9
  # i_60 = PHI <i_37(12), 0(9)>
  # temp_lsm.3655_18 = PHI <_15(12), 0.0(9)>
  # ivtmp_88 = PHI <ivtmp_87(12), 16000(9)>
  # vectp_xx.3656_57 = PHI <vectp_xx.3656_56(12), xx.148_9(9)>
  # ivtmp_39 = PHI <ivtmp_36(12), 0(9)>
  _10 = (long unsigned int) i_60;
  _11 = _10 * 4;
  _12 = xx.148_9 + _11;
  vect__13.3658_55 = MEM[(float *)vectp_xx.3656_57];
  _13 = *_12;
  stmp__15.3659_54 = BIT_FIELD_REF <vect__13.3658_55, 32, 0>;
  stmp__15.3659_53 = temp_lsm.3655_18 + stmp__15.3659_54;
  stmp__15.3659_51 = BIT_FIELD_REF <vect__13.3658_55, 32, 32>;
  stmp__15.3659_49 = stmp__15.3659_53 + stmp__15.3659_51;
  stmp__15.3659_48 = BIT_FIELD_REF <vect__13.3658_55, 32, 64>;
  stmp__15.3659_47 = stmp__15.3659_49 + stmp__15.3659_48;
  stmp__15.3659_46 = BIT_FIELD_REF <vect__13.3658_55, 32, 96>;
  _15 = stmp__15.3659_47 + stmp__15.3659_46;
  i_37 = i_60 + 1;
  ivtmp_87 = ivtmp_88 - 1;
  vectp_xx.3656_56 = vectp_xx.3656_57 + 16;
  ivtmp_36 = ivtmp_39 + 1;
  if (ivtmp_36 < 4000)
    goto <bb 12>; [96.00%]
  else
    goto <bb 11>; [4.00%]
;;    succ:       12
;;                11

;;   basic block 12, loop depth 1
;;    pred:       10
  goto <bb 10>; [100.00%]
;;    succ:       10

;;   basic block 11, loop depth 0
;;    pred:       10
  # _89 = PHI <_15(10)>
  temp = _89;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s422 (s422, funcdef_no=682, decl_uid=10208, cgraph_uid=682, symbol_order=703)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_19 -> { _1 }
ivtmp_20 -> { ivtmp_84 }
.MEM_21 -> { .MEM_61 }
i_36 -> { i_59 }
.MEM_73 -> { .MEM_27 }
ivtmp_74 -> { ivtmp_79 }
_75 -> { _8 }
.MEM_76 -> { .MEM_27 }
i_77 -> { i_28 }
_78 -> { _7 }
_80 -> { _3 }
_81 -> { _5 }
_82 -> { _6 }
_83 -> { _2 }
Incremental SSA update started at block: 18
Number of blocks in CFG: 22
Number of blocks to update: 8 ( 36%)


Merging blocks 7 and 18
Merging blocks 8 and 15
Removing basic block 19
Removing basic block 21
s422 ()
{
  vector(4) float * vectp_xx.3726;
  vector(4) float * vectp_xx.3725;
  vector(4) float vect__8.3724;
  vector(4) float vect__3.3723;
  vector(4) float * vectp_a.3722;
  vector(4) float * vectp_a.3721;
  vector(4) float vect__2.3720;
  vector(4) float * vectp_array.3719;
  vector(4) float * vectp_array.3718;
  float stmp__15.3717;
  vector(4) float vect__13.3716;
  vector(4) float * vectp_xx.3715;
  vector(4) float * vectp_xx.3714;
  float temp_lsm.3713;
  int i;
  int i;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float * xx.151_4;
  long unsigned int _5;
  long unsigned int _6;
  float * _7;
  float _8;
  float * xx.152_9;
  long unsigned int _10;
  long unsigned int _11;
  float * _12;
  float _13;
  float _15;
  int _19;
  unsigned int ivtmp_20;
  _Bool _39;
  _Bool _44;
  float[65536] * _46;
  float * _47;
  _Bool _48;
  float[65536] * _49;
  unsigned int ivtmp_51;
  unsigned int ivtmp_53;
  unsigned int ivtmp_67;
  unsigned int ivtmp_72;
  unsigned int ivtmp_74;
  float _75;
  float * _78;
  unsigned int ivtmp_79;
  float _80;
  long unsigned int _81;
  long unsigned int _82;
  float _83;
  unsigned int ivtmp_84;
  unsigned int ivtmp_85;
  unsigned int ivtmp_86;
  float _87;
  unsigned int ivtmp_91;
  unsigned int ivtmp_92;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  xx = &MEM[(void *)&array + 16B];
  __builtin_memset (&MEM[(void *)&array + 16B], 0, 128000);
  init ("s422 ");
  start_t_26 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 13, loop depth 2
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 20, loop depth 1
;;    pred:       7
;;    succ:       16

;;   basic block 16, loop depth 2
;;    pred:       17
;;                20
  # i_36 = PHI <i_77(17), 0(20)>
  # ivtmp_20 = PHI <ivtmp_74(17), 32000(20)>
  _19 = i_36 + 8;
  _83 = array[_19];
  _80 = a[i_36];
  _81 = (long unsigned int) i_36;
  _82 = _81 * 4;
  _78 = xx.151_4 + _82;
  _75 = _83 + _80;
  *_78 = _75;
  i_77 = i_36 + 1;
  ivtmp_74 = ivtmp_20 - 1;
  if (ivtmp_74 != 0)
    goto <bb 17>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       17
;;                6

;;   basic block 17, loop depth 2
;;    pred:       16
  goto <bb 16>; [100.00%]
;;    succ:       16

;;   basic block 22, loop depth 1
;;    pred:       7
  vectp_array.3719_71 = &array + 32;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       13
;;                22
  # i_59 = PHI <i_28(13), 0(22)>
  # ivtmp_84 = PHI <ivtmp_79(13), 32000(22)>
  # vectp_array.3718_68 = PHI <vectp_array.3718_69(13), vectp_array.3719_71(22)>
  # vectp_a.3721_50 = PHI <vectp_a.3721_14(13), &a(22)>
  # vectp_xx.3725_88 = PHI <vectp_xx.3725_89(13), xx.151_4(22)>
  # ivtmp_91 = PHI <ivtmp_92(13), 0(22)>
  _1 = i_59 + 8;
  vect__2.3720_70 = MEM[(float *)vectp_array.3718_68];
  _2 = array[_1];
  vect__3.3723_52 = MEM[(float *)vectp_a.3721_50];
  _3 = a[i_59];
  _5 = (long unsigned int) i_59;
  _6 = _5 * 4;
  _7 = xx.151_4 + _6;
  vect__8.3724_17 = vect__2.3720_70 + vect__3.3723_52;
  _8 = _2 + _3;
  MEM[(float *)vectp_xx.3725_88] = vect__8.3724_17;
  i_28 = i_59 + 1;
  ivtmp_79 = ivtmp_84 - 1;
  vectp_array.3718_69 = vectp_array.3718_68 + 16;
  vectp_a.3721_14 = vectp_a.3721_50 + 16;
  vectp_xx.3725_89 = vectp_xx.3725_88 + 16;
  ivtmp_92 = ivtmp_91 + 1;
  if (ivtmp_92 < 8000)
    goto <bb 13>; [96.00%]
  else
    goto <bb 6>; [4.00%]
;;    succ:       13
;;                6

;;   basic block 6, loop depth 1
;;    pred:       16
;;                5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_30 = nl_58 + 1;
  ivtmp_67 = ivtmp_72 - 1;
  if (ivtmp_67 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                12
  # nl_58 = PHI <0(2), nl_30(12)>
  # ivtmp_72 = PHI <80000(2), ivtmp_67(12)>
  xx.151_4 = xx;
  _49 = &array + 48;
  _48 = xx.151_4 >= _49;
  _47 = xx.151_4 + 16;
  _46 = &array + 32;
  _44 = _46 >= _47;
  _39 = _44 | _48;
  if (_39 != 0)
    goto <bb 22>; [80.00%]
  else
    goto <bb 20>; [20.00%]
;;    succ:       20
;;                22

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_32 = mysecond ();
  clock_dif_33 = end_t_32 - start_t_26;
  printf ("S422\t %.3f \t\t", clock_dif_33);
  temp = 0.0;
  xx.152_9 = xx;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       11
;;                8
  # i_60 = PHI <i_37(11), 0(8)>
  # temp_lsm.3713_18 = PHI <_15(11), 0.0(8)>
  # ivtmp_86 = PHI <ivtmp_85(11), 32000(8)>
  # vectp_xx.3714_66 = PHI <vectp_xx.3714_65(11), xx.152_9(8)>
  # ivtmp_53 = PHI <ivtmp_51(11), 0(8)>
  _10 = (long unsigned int) i_60;
  _11 = _10 * 4;
  _12 = xx.152_9 + _11;
  vect__13.3716_64 = MEM[(float *)vectp_xx.3714_66];
  _13 = *_12;
  stmp__15.3717_40 = BIT_FIELD_REF <vect__13.3716_64, 32, 0>;
  stmp__15.3717_41 = temp_lsm.3713_18 + stmp__15.3717_40;
  stmp__15.3717_42 = BIT_FIELD_REF <vect__13.3716_64, 32, 32>;
  stmp__15.3717_45 = stmp__15.3717_41 + stmp__15.3717_42;
  stmp__15.3717_43 = BIT_FIELD_REF <vect__13.3716_64, 32, 64>;
  stmp__15.3717_57 = stmp__15.3717_45 + stmp__15.3717_43;
  stmp__15.3717_55 = BIT_FIELD_REF <vect__13.3716_64, 32, 96>;
  _15 = stmp__15.3717_57 + stmp__15.3717_55;
  i_37 = i_60 + 1;
  ivtmp_85 = ivtmp_86 - 1;
  vectp_xx.3714_65 = vectp_xx.3714_66 + 16;
  ivtmp_51 = ivtmp_53 + 1;
  if (ivtmp_51 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       9
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 10, loop depth 0
;;    pred:       9
  # _87 = PHI <_15(9)>
  temp = _87;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s423 (s423, funcdef_no=683, decl_uid=10225, cgraph_uid=683, symbol_order=704)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_10 -> { _3 }
_13 -> { _5 }
_45 -> { _2 }
_47 -> { _4 }
i_62 -> { i_54 }
.MEM_63 -> { .MEM_56 }
ivtmp_64 -> { ivtmp_66 }
_76 -> { _6 }
_77 -> { _7 }
_78 -> { _8 }
.MEM_79 -> { .MEM_23 }
ivtmp_80 -> { ivtmp_61 }
.MEM_81 -> { .MEM_23 }
Incremental SSA update started at block: 18
Number of blocks in CFG: 22
Number of blocks to update: 8 ( 36%)


Removing basic block 22
Merging blocks 2 and 27
Merging blocks 7 and 18
Merging blocks 8 and 15
Removing basic block 19
s423 ()
{
  vector(4) float * vectp_array.3777;
  vector(4) float * vectp_array.3776;
  vector(4) float * vectp_array.3775;
  vector(4) float * vectp_array.3774;
  vector(4) float vect__8.3773;
  vector(4) float vect__6.3772;
  vector(4) float * vectp_a.3771;
  vector(4) float * vectp_a.3770;
  vector(4) float vect__5.3769;
  vector(4) float * vectp_xx.3768;
  vector(4) float * vectp_xx.3767;
  unsigned int tmp.3766;
  int tmp.3765;
  float stmp__11.3764;
  vector(4) float vect__9.3763;
  vector(4) float * vectp_array.3762;
  vector(4) float * vectp_array.3761;
  float temp_lsm.3760;
  int i;
  int i;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float * xx.155_1;
  long unsigned int _2;
  long unsigned int _3;
  float * _4;
  float _5;
  float _6;
  int _7;
  float _8;
  float _9;
  long unsigned int _10;
  float _11;
  float _13;
  unsigned int ivtmp_15;
  long unsigned int _35;
  long unsigned int _36;
  float * _37;
  long unsigned int _45;
  float * _47;
  unsigned int ivtmp_49;
  unsigned int ivtmp_50;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;
  unsigned int ivtmp_61;
  unsigned int ivtmp_64;
  _Bool _65;
  unsigned int ivtmp_66;
  _Bool _67;
  _Bool _68;
  float * _69;
  float[65536] * _70;
  float[65536] * _71;
  unsigned int ivtmp_72;
  unsigned int ivtmp_73;
  unsigned int ivtmp_74;
  float _75;
  float _76;
  int _77;
  float _78;
  unsigned int ivtmp_80;
  unsigned int ivtmp_85;
  long unsigned int _86;
  long unsigned int _87;
  float * _88;
  float _89;
  float _90;
  int _91;
  float _92;
  unsigned int ivtmp_94;
  unsigned int ivtmp_107;
  unsigned int ivtmp_108;
  vector(4) float vect_cst__109;
  unsigned int ivtmp_114;
  unsigned int ivtmp_115;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  xx = &MEM[(void *)&array + 256B];
  vect_cst__109 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
  vectp_array.3777_110 = &array + 256;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       14
;;                2
  # i_59 = PHI <i_38(14), 0(2)>
  # ivtmp_50 = PHI <ivtmp_49(14), 32000(2)>
  # vectp_array.3776_111 = PHI <vectp_array.3776_112(14), vectp_array.3777_110(2)>
  # ivtmp_114 = PHI <ivtmp_115(14), 0(2)>
  _35 = (long unsigned int) i_59;
  _36 = _35 * 4;
  _37 = &MEM[(void *)&array + 256B] + _36;
  MEM[(float *)vectp_array.3776_111] = vect_cst__109;
  i_38 = i_59 + 1;
  ivtmp_49 = ivtmp_50 - 1;
  vectp_array.3776_112 = vectp_array.3776_111 + 16;
  ivtmp_115 = ivtmp_114 + 1;
  if (ivtmp_115 < 8000)
    goto <bb 14>; [83.33%]
  else
    goto <bb 4>; [16.67%]
;;    succ:       14
;;                4

;;   basic block 14, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  init ("s423 ");
  start_t_22 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 13, loop depth 2
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 23, loop depth 1
;;    pred:       5
;;    succ:       24

;;   basic block 24, loop depth 2
;;    pred:       23
;;                25
  # i_83 = PHI <31996(23), _91(25)>
  # ivtmp_85 = PHI <3(23), ivtmp_94(25)>
  _86 = (long unsigned int) i_83;
  _87 = _86 * 4;
  _88 = xx.155_1 + _87;
  _89 = *_88;
  _90 = a[i_83];
  _91 = i_83 + 1;
  _92 = _89 + _90;
  array[_91] = _92;
  ivtmp_94 = ivtmp_85 - 1;
  if (ivtmp_94 != 0)
    goto <bb 25>; [98.99%]
  else
    goto <bb 21>; [1.01%]
;;    succ:       25
;;                21

;;   basic block 25, loop depth 2
;;    pred:       24
  goto <bb 24>; [100.00%]
;;    succ:       24

;;   basic block 20, loop depth 1
;;    pred:       7
;;    succ:       16

;;   basic block 16, loop depth 2
;;    pred:       17
;;                20
  # i_62 = PHI <_77(17), 0(20)>
  # ivtmp_64 = PHI <ivtmp_80(17), 31999(20)>
  _45 = (long unsigned int) i_62;
  _10 = _45 * 4;
  _47 = xx.155_1 + _10;
  _13 = *_47;
  _76 = a[i_62];
  _77 = i_62 + 1;
  _78 = _13 + _76;
  array[_77] = _78;
  ivtmp_80 = ivtmp_64 - 1;
  if (ivtmp_80 != 0)
    goto <bb 17>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       17
;;                6

;;   basic block 17, loop depth 2
;;    pred:       16
  goto <bb 16>; [100.00%]
;;    succ:       16

;;   basic block 26, loop depth 1
;;    pred:       7
  vectp_array.3775_103 = &array + 4;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       13
;;                26
  # i_54 = PHI <_7(13), 0(26)>
  # ivtmp_66 = PHI <ivtmp_61(13), 31999(26)>
  # vectp_xx.3767_96 = PHI <vectp_xx.3767_97(13), xx.155_1(26)>
  # vectp_a.3770_99 = PHI <vectp_a.3770_100(13), &a(26)>
  # vectp_array.3774_104 = PHI <vectp_array.3774_105(13), vectp_array.3775_103(26)>
  # ivtmp_107 = PHI <ivtmp_108(13), 0(26)>
  _2 = (long unsigned int) i_54;
  _3 = _2 * 4;
  _4 = xx.155_1 + _3;
  vect__5.3769_98 = MEM[(float *)vectp_xx.3767_96];
  _5 = *_4;
  vect__6.3772_101 = MEM[(float *)vectp_a.3770_99];
  _6 = a[i_54];
  _7 = i_54 + 1;
  vect__8.3773_102 = vect__5.3769_98 + vect__6.3772_101;
  _8 = _5 + _6;
  MEM[(float *)vectp_array.3774_104] = vect__8.3773_102;
  ivtmp_61 = ivtmp_66 - 1;
  vectp_xx.3767_97 = vectp_xx.3767_96 + 16;
  vectp_a.3770_100 = vectp_a.3770_99 + 16;
  vectp_array.3774_105 = vectp_array.3774_104 + 16;
  ivtmp_108 = ivtmp_107 + 1;
  if (ivtmp_108 < 7999)
    goto <bb 13>; [96.00%]
  else
    goto <bb 23>; [4.00%]
;;    succ:       13
;;                23

;;   basic block 21, loop depth 1
;;    pred:       24
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       16
;;                21
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_25 = nl_53 + 1;
  ivtmp_51 = ivtmp_52 - 1;
  if (ivtmp_51 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       4
;;                12
  # nl_53 = PHI <0(4), nl_25(12)>
  # ivtmp_52 = PHI <40000(4), ivtmp_51(12)>
  xx.155_1 = xx;
  _71 = &array + 20;
  _68 = xx.155_1 >= _71;
  _69 = xx.155_1 + 16;
  _70 = &array + 4;
  _67 = _69 <= _70;
  _65 = _67 | _68;
  if (_65 != 0)
    goto <bb 26>; [80.00%]
  else
    goto <bb 20>; [20.00%]
;;    succ:       20
;;                26

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_22;
  printf ("S423\t %.3f \t\t", clock_dif_28);
  temp = 0.0;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       11
;;                8
  # i_55 = PHI <i_32(11), 0(8)>
  # temp_lsm.3760_14 = PHI <_11(11), 0.0(8)>
  # ivtmp_74 = PHI <ivtmp_72(11), 32000(8)>
  # vectp_array.3761_48 = PHI <vectp_array.3761_46(11), &array(8)>
  # ivtmp_15 = PHI <ivtmp_73(11), 0(8)>
  vect__9.3763_44 = MEM[(float *)vectp_array.3761_48];
  _9 = array[i_55];
  stmp__11.3764_43 = BIT_FIELD_REF <vect__9.3763_44, 32, 0>;
  stmp__11.3764_42 = temp_lsm.3760_14 + stmp__11.3764_43;
  stmp__11.3764_41 = BIT_FIELD_REF <vect__9.3763_44, 32, 32>;
  stmp__11.3764_39 = stmp__11.3764_42 + stmp__11.3764_41;
  stmp__11.3764_34 = BIT_FIELD_REF <vect__9.3763_44, 32, 64>;
  stmp__11.3764_31 = stmp__11.3764_39 + stmp__11.3764_34;
  stmp__11.3764_17 = BIT_FIELD_REF <vect__9.3763_44, 32, 96>;
  _11 = stmp__11.3764_31 + stmp__11.3764_17;
  i_32 = i_55 + 1;
  ivtmp_72 = ivtmp_74 - 1;
  vectp_array.3761_46 = vectp_array.3761_48 + 16;
  ivtmp_73 = ivtmp_15 + 1;
  if (ivtmp_73 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       9
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 10, loop depth 0
;;    pred:       9
  # _75 = PHI <_11(9)>
  temp = _75;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s424 (s424, funcdef_no=684, decl_uid=10243, cgraph_uid=684, symbol_order=705)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_19 -> { _5 }
_20 -> { _4 }
_21 -> { _2 }
_36 -> { _1 }
ivtmp_39 -> { ivtmp_86 }
.MEM_44 -> { .MEM_61 }
i_46 -> { i_59 }
ivtmp_76 -> { ivtmp_81 }
.MEM_77 -> { .MEM_27 }
i_79 -> { i_28 }
_82 -> { _7 }
_83 -> { _8 }
.MEM_84 -> { .MEM_27 }
_85 -> { _6 }
Incremental SSA update started at block: 18
Number of blocks in CFG: 22
Number of blocks to update: 8 ( 36%)


Removing basic block 22
Merging blocks 7 and 18
Merging blocks 8 and 15
Removing basic block 19
s424 ()
{
  vector(4) float * vectp_xx.3833;
  vector(4) float * vectp_xx.3832;
  vector(4) float vect__8.3831;
  vector(4) float vect__2.3830;
  vector(4) float * vectp_a.3829;
  vector(4) float * vectp_a.3828;
  vector(4) float vect__1.3827;
  vector(4) float * vectp_array.3826;
  vector(4) float * vectp_array.3825;
  unsigned int tmp.3824;
  int tmp.3823;
  float stmp__15.3822;
  vector(4) float vect__13.3821;
  vector(4) float * vectp_xx.3820;
  vector(4) float * vectp_xx.3819;
  float temp_lsm.3818;
  int i;
  int i;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float * xx.158_3;
  sizetype _4;
  sizetype _5;
  sizetype _6;
  float * _7;
  float _8;
  float * xx.159_9;
  long unsigned int _10;
  long unsigned int _11;
  float * _12;
  float _13;
  sizetype _14;
  float _15;
  float * _17;
  sizetype _19;
  sizetype _20;
  float _21;
  float _36;
  unsigned int ivtmp_39;
  _Bool _47;
  _Bool _48;
  float * _49;
  sizetype _50;
  _Bool _51;
  sizetype _52;
  float[65536] * _53;
  float * _54;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_70;
  float _71;
  float _72;
  unsigned int ivtmp_74;
  unsigned int ivtmp_76;
  unsigned int ivtmp_80;
  unsigned int ivtmp_81;
  float * _82;
  float _83;
  sizetype _85;
  unsigned int ivtmp_86;
  unsigned int ivtmp_87;
  unsigned int ivtmp_88;
  float _89;
  float _90;
  unsigned int ivtmp_93;
  unsigned int ivtmp_106;
  unsigned int ivtmp_107;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  xx = &MEM[(void *)&array + 252B];
  __builtin_memset (&MEM[(void *)&array + 252B], 0, 128000);
  init ("s424 ");
  start_t_26 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 13, loop depth 2
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 23, loop depth 1
;;    pred:       5
;;    succ:       24

;;   basic block 24, loop depth 2
;;    pred:       23
;;                25
  # i_75 = PHI <31996(23), i_92(25)>
  # ivtmp_70 = PHI <3(23), ivtmp_93(25)>
  _71 = array[i_75];
  _72 = a[i_75];
  _50 = (sizetype) i_75;
  _14 = _50 + 1;
  _52 = _14 * 4;
  _17 = xx.158_3 + _52;
  _90 = _71 + _72;
  *_17 = _90;
  i_92 = i_75 + 1;
  ivtmp_93 = ivtmp_70 - 1;
  if (ivtmp_93 != 0)
    goto <bb 25>; [98.99%]
  else
    goto <bb 21>; [1.01%]
;;    succ:       25
;;                21

;;   basic block 25, loop depth 2
;;    pred:       24
  goto <bb 24>; [100.00%]
;;    succ:       24

;;   basic block 20, loop depth 1
;;    pred:       7
;;    succ:       16

;;   basic block 16, loop depth 2
;;    pred:       17
;;                20
  # i_46 = PHI <i_79(17), 0(20)>
  # ivtmp_39 = PHI <ivtmp_76(17), 31999(20)>
  _36 = array[i_46];
  _21 = a[i_46];
  _20 = (sizetype) i_46;
  _19 = _20 + 1;
  _85 = _19 * 4;
  _82 = xx.158_3 + _85;
  _83 = _36 + _21;
  *_82 = _83;
  i_79 = i_46 + 1;
  ivtmp_76 = ivtmp_39 - 1;
  if (ivtmp_76 != 0)
    goto <bb 17>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       17
;;                6

;;   basic block 17, loop depth 2
;;    pred:       16
  goto <bb 16>; [100.00%]
;;    succ:       16

;;   basic block 26, loop depth 1
;;    pred:       7
  vectp_xx.3833_102 = xx.158_3 + 4;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       13
;;                26
  # i_59 = PHI <i_28(13), 0(26)>
  # ivtmp_86 = PHI <ivtmp_81(13), 31999(26)>
  # vectp_array.3825_95 = PHI <vectp_array.3825_96(13), &array(26)>
  # vectp_a.3828_98 = PHI <vectp_a.3828_99(13), &a(26)>
  # vectp_xx.3832_103 = PHI <vectp_xx.3832_104(13), vectp_xx.3833_102(26)>
  # ivtmp_106 = PHI <ivtmp_107(13), 0(26)>
  vect__1.3827_97 = MEM[(float *)vectp_array.3825_95];
  _1 = array[i_59];
  vect__2.3830_100 = MEM[(float *)vectp_a.3828_98];
  _2 = a[i_59];
  _4 = (sizetype) i_59;
  _5 = _4 + 1;
  _6 = _5 * 4;
  _7 = xx.158_3 + _6;
  vect__8.3831_101 = vect__1.3827_97 + vect__2.3830_100;
  _8 = _1 + _2;
  MEM[(float *)vectp_xx.3832_103] = vect__8.3831_101;
  i_28 = i_59 + 1;
  ivtmp_81 = ivtmp_86 - 1;
  vectp_array.3825_96 = vectp_array.3825_95 + 16;
  vectp_a.3828_99 = vectp_a.3828_98 + 16;
  vectp_xx.3832_104 = vectp_xx.3832_103 + 16;
  ivtmp_107 = ivtmp_106 + 1;
  if (ivtmp_107 < 7999)
    goto <bb 13>; [96.00%]
  else
    goto <bb 23>; [4.00%]
;;    succ:       13
;;                23

;;   basic block 21, loop depth 1
;;    pred:       24
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       16
;;                21
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_30 = nl_58 + 1;
  ivtmp_74 = ivtmp_80 - 1;
  if (ivtmp_74 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                12
  # nl_58 = PHI <0(2), nl_30(12)>
  # ivtmp_80 = PHI <40000(2), ivtmp_74(12)>
  xx.158_3 = xx;
  _54 = xx.158_3 + 4;
  _53 = &array + 16;
  _51 = _53 <= _54;
  _49 = xx.158_3 + 20;
  _48 = _49 <= &array;
  _47 = _48 | _51;
  if (_47 != 0)
    goto <bb 26>; [80.00%]
  else
    goto <bb 20>; [20.00%]
;;    succ:       20
;;                26

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_32 = mysecond ();
  clock_dif_33 = end_t_32 - start_t_26;
  printf ("S424\t %.3f \t\t", clock_dif_33);
  temp = 0.0;
  xx.159_9 = xx;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       11
;;                8
  # i_60 = PHI <i_37(11), 0(8)>
  # temp_lsm.3818_18 = PHI <_15(11), 0.0(8)>
  # ivtmp_88 = PHI <ivtmp_87(11), 32000(8)>
  # vectp_xx.3819_69 = PHI <vectp_xx.3819_65(11), xx.159_9(8)>
  # ivtmp_56 = PHI <ivtmp_55(11), 0(8)>
  _10 = (long unsigned int) i_60;
  _11 = _10 * 4;
  _12 = xx.159_9 + _11;
  vect__13.3821_64 = MEM[(float *)vectp_xx.3819_69];
  _13 = *_12;
  stmp__15.3822_40 = BIT_FIELD_REF <vect__13.3821_64, 32, 0>;
  stmp__15.3822_41 = temp_lsm.3818_18 + stmp__15.3822_40;
  stmp__15.3822_42 = BIT_FIELD_REF <vect__13.3821_64, 32, 32>;
  stmp__15.3822_45 = stmp__15.3822_41 + stmp__15.3822_42;
  stmp__15.3822_43 = BIT_FIELD_REF <vect__13.3821_64, 32, 64>;
  stmp__15.3822_68 = stmp__15.3822_45 + stmp__15.3822_43;
  stmp__15.3822_66 = BIT_FIELD_REF <vect__13.3821_64, 32, 96>;
  _15 = stmp__15.3822_68 + stmp__15.3822_66;
  i_37 = i_60 + 1;
  ivtmp_87 = ivtmp_88 - 1;
  vectp_xx.3819_65 = vectp_xx.3819_69 + 16;
  ivtmp_55 = ivtmp_56 + 1;
  if (ivtmp_55 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       9
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 10, loop depth 0
;;    pred:       9
  # _89 = PHI <_15(9)>
  temp = _89;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s431 (s431, funcdef_no=685, decl_uid=10261, cgraph_uid=685, symbol_order=706)

Merging blocks 5 and 9
s431 ()
{
  vector(4) float * vectp_a.3875;
  vector(4) float * vectp_a.3874;
  vector(4) float vect__3.3873;
  vector(4) float vect__2.3872;
  vector(4) float * vectp_b.3871;
  vector(4) float * vectp_b.3870;
  vector(4) float vect__1.3869;
  vector(4) float * vectp_a.3868;
  vector(4) float * vectp_a.3867;
  int i;
  int D.19084;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_31;
  unsigned int ivtmp_35;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s431 ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_26 = PHI <i_13(8), 0(5)>
  # ivtmp_35 = PHI <ivtmp_24(8), 32000(5)>
  # vectp_a.3867_7 = PHI <vectp_a.3867_6(8), &a(5)>
  # vectp_b.3870_4 = PHI <vectp_b.3870_34(8), &b(5)>
  # vectp_a.3874_37 = PHI <vectp_a.3874_29(8), &a(5)>
  # ivtmp_38 = PHI <ivtmp_31(8), 0(5)>
  vect__1.3869_5 = MEM[(float *)vectp_a.3867_7];
  _1 = a[i_26];
  vect__2.3872_33 = MEM[(float *)vectp_b.3870_4];
  _2 = b[i_26];
  vect__3.3873_28 = vect__1.3869_5 + vect__2.3872_33;
  _3 = _1 + _2;
  MEM[(float *)vectp_a.3874_37] = vect__3.3873_28;
  i_13 = i_26 + 1;
  ivtmp_24 = ivtmp_35 - 1;
  vectp_a.3867_6 = vectp_a.3867_7 + 16;
  vectp_b.3870_34 = vectp_b.3870_4 + 16;
  vectp_a.3874_29 = vectp_a.3874_37 + 16;
  ivtmp_31 = ivtmp_38 + 1;
  if (ivtmp_31 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_22 = ivtmp_23 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_23 = PHI <100000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("S431\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s441 (s441, funcdef_no=686, decl_uid=10277, cgraph_uid=686, symbol_order=707)

s441 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _3;
  float _4;
  float _5;
  float _6;
  float _8;
  float _9;
  float _10;
  float _12;
  float _13;
  float _14;
  unsigned int ivtmp_19;
  float pretmp_35;
  unsigned int ivtmp_38;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s441 ");
  start_t_23 = mysecond ();
  goto <bb 10>; [100.00%]
;;    succ:       10

;;   basic block 13, loop depth 2
;;    pred:       8
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       10
;;                13
  # i_42 = PHI <0(10), i_27(13)>
  # ivtmp_40 = PHI <32000(10), ivtmp_39(13)>
  _1 = d[i_42];
  pretmp_35 = a[i_42];
  if (_1 < 0.0)
    goto <bb 4>; [41.00%]
  else
    goto <bb 5>; [59.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _3 = b[i_42];
  _4 = c[i_42];
  _5 = _3 * _4;
  _6 = _5 + pretmp_35;
  a[i_42] = _6;
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 5, loop depth 2
;;    pred:       3
  if (_1 == 0.0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 2
;;    pred:       5
  _8 = b[i_42];
  _9 = _8 * _8;
  _10 = _9 + pretmp_35;
  a[i_42] = _10;
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 7, loop depth 2
;;    pred:       5
  _12 = c[i_42];
  _13 = _12 * _12;
  _14 = _13 + pretmp_35;
  a[i_42] = _14;
;;    succ:       8

;;   basic block 8, loop depth 2
;;    pred:       4
;;                6
;;                7
  i_27 = i_42 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  if (ivtmp_39 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       13
;;                9

;;   basic block 9, loop depth 1
;;    pred:       8
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_29 = nl_41 + 1;
  ivtmp_19 = ivtmp_38 - 1;
  if (ivtmp_19 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 11>; [1.01%]
;;    succ:       12
;;                11

;;   basic block 12, loop depth 1
;;    pred:       9
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       2
;;                12
  # nl_41 = PHI <0(2), nl_29(12)>
  # ivtmp_38 = PHI <10000(2), ivtmp_19(12)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 11, loop depth 0
;;    pred:       9
  end_t_31 = mysecond ();
  clock_dif_32 = end_t_31 - start_t_23;
  printf ("S441\t %.3f \t\t", clock_dif_32);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s442 (s442, funcdef_no=687, decl_uid=10290, cgraph_uid=687, symbol_order=708)

s442 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _3;
  float _4;
  float _5;
  float _7;
  float _8;
  float _9;
  float _11;
  float _12;
  float _13;
  float _15;
  float _16;
  float _17;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_49;
  float pretmp_50;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s442 ");
  start_t_26 = mysecond ();
  goto <bb 10>; [100.00%]
;;    succ:       10

;;   basic block 13, loop depth 2
;;    pred:       8
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       10
;;                13
  # i_46 = PHI <0(10), i_31(13)>
  # ivtmp_49 = PHI <32000(10), ivtmp_44(13)>
  _1 = indx[i_46];
  pretmp_50 = a[i_46];
  switch (_1) <default: L15 [40.00%], case 2: <L3> [20.00%], case 3: <L4> [20.00%], case 4: <L5> [20.00%]>
;;    succ:       7
;;                6
;;                4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
<L3>:
  _7 = c[i_46];
  _8 = _7 * _7;
  _9 = _8 + pretmp_50;
  a[i_46] = _9;
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 5, loop depth 2
;;    pred:       3
<L4>:
  _11 = d[i_46];
  _12 = _11 * _11;
  _13 = _12 + pretmp_50;
  a[i_46] = _13;
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 6, loop depth 2
;;    pred:       3
<L5>:
  _15 = e[i_46];
  _16 = _15 * _15;
  _17 = _16 + pretmp_50;
  a[i_46] = _17;
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 7, loop depth 2
;;    pred:       3
L15:
  _3 = b[i_46];
  _4 = _3 * _3;
  _5 = _4 + pretmp_50;
  a[i_46] = _5;
;;    succ:       8

;;   basic block 8, loop depth 2
;;    pred:       7
;;                4
;;                5
;;                6
L50:
  i_31 = i_46 + 1;
  ivtmp_44 = ivtmp_49 - 1;
  if (ivtmp_44 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       13
;;                9

;;   basic block 9, loop depth 1
;;    pred:       8
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_33 = nl_45 + 1;
  ivtmp_42 = ivtmp_43 - 1;
  if (ivtmp_42 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 11>; [1.01%]
;;    succ:       12
;;                11

;;   basic block 12, loop depth 1
;;    pred:       9
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       2
;;                12
  # nl_45 = PHI <0(2), nl_33(12)>
  # ivtmp_43 = PHI <5000(2), ivtmp_42(12)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 11, loop depth 0
;;    pred:       9
  end_t_35 = mysecond ();
  clock_dif_36 = end_t_35 - start_t_26;
  printf ("S442\t %.3f \t\t", clock_dif_36);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s443 (s443, funcdef_no=688, decl_uid=10312, cgraph_uid=688, symbol_order=709)

s443 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _4;
  float _5;
  float _6;
  float _9;
  float _10;
  float pretmp_14;
  float pretmp_15;
  unsigned int ivtmp_20;
  float cstore_32;
  unsigned int ivtmp_33;
  unsigned int ivtmp_34;
  unsigned int ivtmp_35;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s443 ");
  start_t_19 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 11, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                11
  # i_37 = PHI <0(8), i_22(11)>
  # ivtmp_35 = PHI <32000(8), ivtmp_34(11)>
  _1 = d[i_37];
  pretmp_15 = a[i_37];
  pretmp_14 = b[i_37];
  if (_1 <= 0.0)
    goto <bb 4>; [41.00%]
  else
    goto <bb 5>; [59.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _4 = c[i_37];
  _5 = _4 * pretmp_14;
  _6 = _5 + pretmp_15;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       3
  _9 = pretmp_14 * pretmp_14;
  _10 = _9 + pretmp_15;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       4
;;                5
  # cstore_32 = PHI <_6(4), _10(5)>
L50:
  a[i_37] = cstore_32;
  i_22 = i_37 + 1;
  ivtmp_34 = ivtmp_35 - 1;
  if (ivtmp_34 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_36 + 1;
  ivtmp_20 = ivtmp_33 - 1;
  if (ivtmp_20 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                10
  # nl_36 = PHI <0(2), nl_24(10)>
  # ivtmp_33 = PHI <20000(2), ivtmp_20(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_19;
  printf ("S443\t %.3f \t\t", clock_dif_27);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s451 (s451, funcdef_no=689, decl_uid=10328, cgraph_uid=689, symbol_order=710)

s451 ()
{
  int i;
  int D.19171;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_42;
  unsigned int ivtmp_44;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s451 ");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_28 = PHI <0(5), i_15(8)>
  # ivtmp_44 = PHI <32000(5), ivtmp_42(8)>
  _1 = b[i_28];
  _2 = sinf (_1);
  _3 = c[i_28];
  _4 = cosf (_3);
  _5 = _2 + _4;
  a[i_28] = _5;
  i_15 = i_28 + 1;
  ivtmp_42 = ivtmp_44 - 1;
  if (ivtmp_42 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  if (ivtmp_39 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_40 = PHI <2000(2), ivtmp_39(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_13;
  printf ("S451\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s452 (s452, funcdef_no=690, decl_uid=10341, cgraph_uid=690, symbol_order=711)

Merging blocks 5 and 9
s452 ()
{
  vector(4) float * vectp_a.3966;
  vector(4) float * vectp_a.3965;
  vector(4) float vect__6.3964;
  vector(4) float vect__5.3963;
  vector(4) float vect__4.3962;
  vector(4) int vect__3.3961;
  vector(4) float vect__2.3960;
  vector(4) float * vectp_c.3959;
  vector(4) float * vectp_c.3958;
  vector(4) float vect__1.3957;
  vector(4) float * vectp_b.3956;
  vector(4) float * vectp_b.3955;
  vector(4) int vect_vec_iv_.3954;
  int i;
  int D.19192;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  float _5;
  float _6;
  vector(4) int vect_cst__8;
  vector(4) int vect_cst__35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s452 ");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_28 = PHI <_3(8), 0(5)>
  # ivtmp_41 = PHI <ivtmp_40(8), 32000(5)>
  # vect_vec_iv_.3954_34 = PHI <vect_vec_iv_.3954_33(8), { 0, 1, 2, 3 }(5)>
  # vectp_b.3955_30 = PHI <vectp_b.3955_26(8), &b(5)>
  # vectp_c.3958_24 = PHI <vectp_c.3958_10(8), &c(5)>
  # vectp_a.3965_23 = PHI <vectp_a.3965_42(8), &a(5)>
  # ivtmp_44 = PHI <ivtmp_45(8), 0(5)>
  vect_vec_iv_.3954_33 = vect_vec_iv_.3954_34 + vect_cst__35;
  vect__1.3957_25 = MEM[(float *)vectp_b.3955_30];
  _1 = b[i_28];
  vect__2.3960_9 = MEM[(float *)vectp_c.3958_24];
  _2 = c[i_28];
  vect__3.3961_7 = vect_vec_iv_.3954_34 + vect_cst__8;
  _3 = i_28 + 1;
  vect__4.3962_39 = (vector(4) float) vect__3.3961_7;
  _4 = (float) _3;
  vect__5.3963_31 = vect__2.3960_9 * vect__4.3962_39;
  _5 = _2 * _4;
  vect__6.3964_32 = vect__1.3957_25 + vect__5.3963_31;
  _6 = _1 + _5;
  MEM[(float *)vectp_a.3965_23] = vect__6.3964_32;
  ivtmp_40 = ivtmp_41 - 1;
  vectp_b.3955_26 = vectp_b.3955_30 + 16;
  vectp_c.3958_10 = vectp_c.3958_24 + 16;
  vectp_a.3965_42 = vectp_a.3965_23 + 16;
  ivtmp_45 = ivtmp_44 + 1;
  if (ivtmp_45 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_36 = ivtmp_37 - 1;
  if (ivtmp_36 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_37 = PHI <40000(2), ivtmp_36(7)>
  vect_cst__35 = { 4, 4, 4, 4 };
  vect_cst__8 = { 1, 1, 1, 1 };
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_14;
  printf ("S452\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s453 (s453, funcdef_no=691, decl_uid=10354, cgraph_uid=691, symbol_order=712)

s453 ()
{
  int i;
  int D.19226;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float s;
  float _1;
  float _2;
  unsigned int ivtmp_5;
  unsigned int ivtmp_7;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s453 ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # s_27 = PHI <0.0(5), s_12(8)>
  # i_28 = PHI <0(5), i_14(8)>
  # ivtmp_24 = PHI <32000(5), ivtmp_23(8)>
  s_12 = s_27 + 2.0e+0;
  _1 = b[i_28];
  _2 = _1 * s_12;
  a[i_28] = _2;
  i_14 = i_28 + 1;
  ivtmp_23 = ivtmp_24 - 1;
  if (ivtmp_23 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_37 + 1;
  ivtmp_5 = ivtmp_7 - 1;
  if (ivtmp_5 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_37 = PHI <0(2), nl_16(7)>
  # ivtmp_7 = PHI <20000(2), ivtmp_5(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_11;
  printf ("S453\t %.3f \t\t", clock_dif_19);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s471 (s471, funcdef_no=692, decl_uid=10368, cgraph_uid=692, symbol_order=713)

Merging blocks 7 and 16
Merging blocks 8 and 15
s471 ()
{
  vector(4) float * vectp_b.4020;
  vector(4) float * vectp_b.4019;
  vector(4) float vect__8.4018;
  vector(4) float vect__7.4017;
  vector(4) float vect__6.4016;
  vector(4) float * vectp_e.4015;
  vector(4) float * vectp_e.4014;
  vector(4) float vect__5.4013;
  vector(4) float * vectp_c.4012;
  vector(4) float * vectp_c.4011;
  vector(4) float * vectp_x.4010;
  vector(4) float * vectp_x.4009;
  vector(4) float vect__4.4008;
  vector(4) float vect__3.4007;
  vector(4) float vect__2.4006;
  vector(4) float * vectp_d.4005;
  vector(4) float * vectp_d.4004;
  vector(4) float vect__1.4003;
  vector(4) float * vectp_b.4002;
  vector(4) float * vectp_b.4001;
  float stmp__11.4000;
  vector(4) float vect__9.3999;
  vector(4) float * vectp_x.3998;
  vector(4) float * vectp_x.3997;
  float temp_lsm.3996;
  int i;
  int i;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _11;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;
  unsigned int ivtmp_78;
  unsigned int ivtmp_79;
  unsigned int ivtmp_80;
  unsigned int ivtmp_81;
  unsigned int ivtmp_82;
  unsigned int ivtmp_83;
  unsigned int ivtmp_84;
  unsigned int ivtmp_86;
  float _87;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __builtin_memset (&x, 0, 128000);
  init ("s471 ");
  start_t_21 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 13, loop depth 2
;;    pred:       5
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       13
;;                7
  # i_55 = PHI <i_24(13), 0(7)>
  # ivtmp_83 = PHI <ivtmp_82(13), 32000(7)>
  # vectp_b.4001_66 = PHI <vectp_b.4001_65(13), &b(7)>
  # vectp_d.4004_63 = PHI <vectp_d.4004_62(13), &d(7)>
  # vectp_x.4009_50 = PHI <vectp_x.4009_49(13), &x(7)>
  # vectp_c.4011_45 = PHI <vectp_c.4011_44(13), &c(7)>
  # vectp_e.4014_42 = PHI <vectp_e.4014_40(13), &e(7)>
  # vectp_b.4019_16 = PHI <vectp_b.4019_15(13), &b(7)>
  # ivtmp_80 = PHI <ivtmp_79(13), 0(7)>
  vect__1.4003_64 = MEM[(float *)vectp_b.4001_66];
  _1 = b[i_55];
  vect__2.4006_53 = MEM[(float *)vectp_d.4004_63];
  _2 = d[i_55];
  vect__3.4007_52 = vect__2.4006_53 * vect__2.4006_53;
  _3 = _2 * _2;
  vect__4.4008_51 = vect__1.4003_64 + vect__3.4007_52;
  _4 = _1 + _3;
  MEM[(float *)vectp_x.4009_50] = vect__4.4008_51;
  vect__5.4013_43 = MEM[(float *)vectp_c.4011_45];
  _5 = c[i_55];
  vect__6.4016_35 = MEM[(float *)vectp_e.4014_42];
  _6 = e[i_55];
  vect__7.4017_32 = vect__2.4006_53 * vect__6.4016_35;
  _7 = _2 * _6;
  vect__8.4018_17 = vect__5.4013_43 + vect__7.4017_32;
  _8 = _5 + _7;
  MEM[(float *)vectp_b.4019_16] = vect__8.4018_17;
  i_24 = i_55 + 1;
  ivtmp_82 = ivtmp_83 - 1;
  vectp_b.4001_65 = vectp_b.4001_66 + 16;
  vectp_d.4004_62 = vectp_d.4004_63 + 16;
  vectp_x.4009_49 = vectp_x.4009_50 + 16;
  vectp_c.4011_44 = vectp_c.4011_45 + 16;
  vectp_e.4014_40 = vectp_e.4014_42 + 16;
  vectp_b.4019_15 = vectp_b.4019_16 + 16;
  ivtmp_79 = ivtmp_80 + 1;
  if (ivtmp_79 < 8000)
    goto <bb 13>; [96.00%]
  else
    goto <bb 6>; [4.00%]
;;    succ:       13
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_26 = nl_54 + 1;
  ivtmp_78 = ivtmp_81 - 1;
  if (ivtmp_78 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                12
  # nl_54 = PHI <0(2), nl_26(12)>
  # ivtmp_81 = PHI <5000(2), ivtmp_78(12)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_28 = mysecond ();
  clock_dif_29 = end_t_28 - start_t_21;
  printf ("S471\t %.3f \t\t", clock_dif_29);
  temp = 0.0;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       11
;;                8
  # i_56 = PHI <i_33(11), 0(8)>
  # temp_lsm.3996_14 = PHI <_11(11), 0.0(8)>
  # ivtmp_86 = PHI <ivtmp_84(11), 32000(8)>
  # vectp_x.3997_73 = PHI <vectp_x.3997_61(11), &x(8)>
  # ivtmp_68 = PHI <ivtmp_67(11), 0(8)>
  vect__9.3999_60 = MEM[(float *)vectp_x.3997_73];
  _9 = x[i_56];
  stmp__11.4000_36 = BIT_FIELD_REF <vect__9.3999_60, 32, 0>;
  stmp__11.4000_37 = temp_lsm.3996_14 + stmp__11.4000_36;
  stmp__11.4000_38 = BIT_FIELD_REF <vect__9.3999_60, 32, 32>;
  stmp__11.4000_41 = stmp__11.4000_37 + stmp__11.4000_38;
  stmp__11.4000_39 = BIT_FIELD_REF <vect__9.3999_60, 32, 64>;
  stmp__11.4000_72 = stmp__11.4000_41 + stmp__11.4000_39;
  stmp__11.4000_70 = BIT_FIELD_REF <vect__9.3999_60, 32, 96>;
  _11 = stmp__11.4000_72 + stmp__11.4000_70;
  i_33 = i_56 + 1;
  ivtmp_84 = ivtmp_86 - 1;
  vectp_x.3997_61 = vectp_x.3997_73 + 16;
  ivtmp_67 = ivtmp_68 + 1;
  if (ivtmp_67 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       9
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 10, loop depth 0
;;    pred:       9
  # _87 = PHI <_11(9)>
  temp = _87;
  check (-12);
  return 0;
;;    succ:       EXIT

}



;; Function s481 (s481, funcdef_no=693, decl_uid=10386, cgraph_uid=693, symbol_order=714)

s481 ()
{
  int i;
  int D.19301;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_7;
  unsigned int ivtmp_8;
  unsigned int ivtmp_26;
  unsigned int ivtmp_28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s481 ");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_30 = PHI <0(7), i_17(10)>
  # ivtmp_28 = PHI <32000(7), ivtmp_26(10)>
  _1 = d[i_30];
  if (_1 < 0.0)
    goto <bb 4>; [5.50%]
  else
    goto <bb 5>; [94.50%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  exit (0);
;;    succ:      

;;   basic block 5, loop depth 2
;;    pred:       3
  _2 = a[i_30];
  _3 = b[i_30];
  _4 = c[i_30];
  _5 = _3 * _4;
  _6 = _2 + _5;
  a[i_30] = _6;
  i_17 = i_30 + 1;
  ivtmp_26 = ivtmp_28 - 1;
  if (ivtmp_26 != 0)
    goto <bb 10>; [98.93%]
  else
    goto <bb 6>; [1.07%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_19 = nl_29 + 1;
  ivtmp_7 = ivtmp_8 - 1;
  if (ivtmp_7 != 0)
    goto <bb 9>; [93.49%]
  else
    goto <bb 8>; [6.51%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_29 = PHI <0(2), nl_19(9)>
  # ivtmp_8 = PHI <10000(2), ivtmp_7(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_21 = mysecond ();
  clock_dif_22 = end_t_21 - start_t_14;
  printf ("S481\t %.3f \t\t", clock_dif_22);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s482 (s482, funcdef_no=694, decl_uid=10399, cgraph_uid=694, symbol_order=715)

s482 ()
{
  int i;
  int D.19323;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_38;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s482 ");
  start_t_14 = mysecond ();
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 9, loop depth 2
;;    pred:       4
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       6
;;                9
  # i_29 = PHI <0(6), i_16(9)>
  # ivtmp_42 = PHI <32000(6), ivtmp_41(9)>
  _1 = a[i_29];
  _2 = b[i_29];
  _3 = c[i_29];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_29] = _5;
  if (_2 < _3)
    goto <bb 5>; [5.50%]
  else
    goto <bb 4>; [94.50%]
;;    succ:       5
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  i_16 = i_29 + 1;
  ivtmp_41 = ivtmp_42 - 1;
  if (ivtmp_41 != 0)
    goto <bb 9>; [98.93%]
  else
    goto <bb 5>; [1.07%]
;;    succ:       9
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
;;                3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_38 = ivtmp_40 - 1;
  if (ivtmp_38 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       8
;;                7

;;   basic block 8, loop depth 1
;;    pred:       5
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       2
;;                8
  # nl_28 = PHI <0(2), nl_18(8)>
  # ivtmp_40 = PHI <10000(2), ivtmp_38(8)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 7, loop depth 0
;;    pred:       5
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S482\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s491 (s491, funcdef_no=696, decl_uid=10417, cgraph_uid=696, symbol_order=717)

s491 (int * restrict ip)
{
  int i;
  int D.19346;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  long unsigned int _5;
  long unsigned int _6;
  int * _7;
  int _8;
  float _9;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s491 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_33 = PHI <0(5), i_20(8)>
  # ivtmp_57 = PHI <32000(5), ivtmp_56(8)>
  _1 = b[i_33];
  _2 = c[i_33];
  _3 = d[i_33];
  _4 = _2 * _3;
  _5 = (long unsigned int) i_33;
  _6 = _5 * 4;
  _7 = ip_18(D) + _6;
  _8 = *_7;
  _9 = _1 + _4;
  a[_8] = _9;
  i_20 = i_33 + 1;
  ivtmp_56 = ivtmp_57 - 1;
  if (ivtmp_56 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_54 = ivtmp_55 - 1;
  if (ivtmp_54 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_22(7)>
  # ivtmp_55 = PHI <10000(2), ivtmp_54(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_17;
  printf ("S491\t %.3f \t\t", clock_dif_25);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s4112 (s4112, funcdef_no=697, decl_uid=10432, cgraph_uid=697, symbol_order=718)

s4112 (int * restrict ip, float s)
{
  int i;
  int D.19370;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  long unsigned int _2;
  long unsigned int _3;
  int * _4;
  int _5;
  float _6;
  float _7;
  float _8;
  unsigned int ivtmp_52;
  unsigned int ivtmp_53;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4112");
  start_t_16 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_33 = PHI <0(5), i_20(8)>
  # ivtmp_55 = PHI <32000(5), ivtmp_54(8)>
  _1 = a[i_33];
  _2 = (long unsigned int) i_33;
  _3 = _2 * 4;
  _4 = ip_17(D) + _3;
  _5 = *_4;
  _6 = b[_5];
  _7 = _6 * s_18(D);
  _8 = _1 + _7;
  a[i_33] = _8;
  i_20 = i_33 + 1;
  ivtmp_54 = ivtmp_55 - 1;
  if (ivtmp_54 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_52 = ivtmp_53 - 1;
  if (ivtmp_52 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_22(7)>
  # ivtmp_53 = PHI <10000(2), ivtmp_52(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_16;
  printf ("S4112\t %.3f \t\t", clock_dif_25);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s4113 (s4113, funcdef_no=698, decl_uid=10446, cgraph_uid=698, symbol_order=719)

s4113 (int * restrict ip)
{
  int i;
  int D.19392;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  long unsigned int _1;
  long unsigned int _2;
  int * _3;
  int _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_47;
  unsigned int ivtmp_48;
  unsigned int ivtmp_49;
  unsigned int ivtmp_50;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4113");
  start_t_15 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_31 = PHI <0(5), i_18(8)>
  # ivtmp_50 = PHI <32000(5), ivtmp_49(8)>
  _1 = (long unsigned int) i_31;
  _2 = _1 * 4;
  _3 = ip_16(D) + _2;
  _4 = *_3;
  _5 = b[_4];
  _6 = c[i_31];
  _7 = _5 + _6;
  a[_4] = _7;
  i_18 = i_31 + 1;
  ivtmp_49 = ivtmp_50 - 1;
  if (ivtmp_49 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_30 + 1;
  ivtmp_47 = ivtmp_48 - 1;
  if (ivtmp_47 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_30 = PHI <0(2), nl_20(7)>
  # ivtmp_48 = PHI <10000(2), ivtmp_47(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_15;
  printf ("S4113\t %.3f \t\t", clock_dif_23);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s4114 (s4114, funcdef_no=699, decl_uid=10461, cgraph_uid=699, symbol_order=720)

s4114 (int * ip, int n1)
{
  int i;
  int D.19414;
  int i;
  int nl;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  long unsigned int _1;
  long unsigned int _2;
  int * _3;
  float _4;
  int _5;
  float _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_43;
  unsigned int ivtmp_66;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4114");
  start_t_17 = mysecond ();
  i_19 = n1_18(D) + -1;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                8
  # nl_34 = PHI <0(2), nl_25(8)>
  # ivtmp_43 = PHI <10000(2), ivtmp_66(8)>
  if (i_19 <= 31999)
    goto <bb 7>; [89.00%]
  else
    goto <bb 5>; [11.00%]
;;    succ:       7
;;                5

;;   basic block 7, loop depth 1
;;    pred:       3
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       7
;;                9
  # i_33 = PHI <i_19(7), i_23(9)>
  _1 = (long unsigned int) i_33;
  _2 = _1 * 4;
  _3 = ip_20(D) + _2;
  k_21 = *_3;
  _4 = b[i_33];
  _5 = 31999 - k_21;
  _6 = c[_5];
  _7 = d[i_33];
  _8 = _6 * _7;
  _9 = _4 + _8;
  a[i_33] = _9;
  i_23 = i_33 + 1;
  if (i_23 <= 31999)
    goto <bb 9>; [89.00%]
  else
    goto <bb 5>; [11.00%]
;;    succ:       9
;;                5

;;   basic block 9, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 1
;;    pred:       3
;;                4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_25 = nl_34 + 1;
  ivtmp_66 = ivtmp_43 - 1;
  if (ivtmp_66 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       8
;;                6

;;   basic block 8, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_17;
  printf ("S4114\t %.3f \t\t", clock_dif_28);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s4115 (s4115, funcdef_no=700, decl_uid=10476, cgraph_uid=700, symbol_order=721)

s4115 (int * restrict ip)
{
  int i;
  int D.19440;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  long unsigned int _2;
  long unsigned int _3;
  int * _4;
  int _5;
  float _6;
  float _7;
  unsigned int ivtmp_53;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4115");
  start_t_16 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # sum_37 = PHI <0.0(5), sum_20(8)>
  # i_47 = PHI <0(5), i_21(8)>
  # ivtmp_56 = PHI <32000(5), ivtmp_55(8)>
  _1 = a[i_47];
  _2 = (long unsigned int) i_47;
  _3 = _2 * 4;
  _4 = ip_19(D) + _3;
  _5 = *_4;
  _6 = b[_5];
  _7 = _1 * _6;
  sum_20 = _7 + sum_37;
  i_21 = i_47 + 1;
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # sum_58 = PHI <sum_20(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_38 + 1;
  ivtmp_53 = ivtmp_54 - 1;
  if (ivtmp_53 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_38 = PHI <0(2), nl_23(7)>
  # ivtmp_54 = PHI <10000(2), ivtmp_53(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # sum_57 = PHI <sum_58(4)>
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_16;
  printf ("S4115\t %.3f \t\t", clock_dif_26);
  temp = sum_57;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s4116 (s4116, funcdef_no=701, decl_uid=10493, cgraph_uid=701, symbol_order=722)

s4116 (int * restrict ip, int j, int inc)
{
  int i;
  int D.19462;
  int i;
  int nl;
  int off;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  long unsigned int _3;
  long unsigned int _4;
  int * _5;
  int _6;
  float _7;
  float _8;
  int _54;
  unsigned int ivtmp_62;
  unsigned int ivtmp_63;
  unsigned int ivtmp_64;
  unsigned int ivtmp_65;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4116");
  start_t_17 = mysecond ();
  _54 = j_22(D) + -1;
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # sum_41 = PHI <0.0(5), sum_24(8)>
  # i_51 = PHI <0(5), i_25(8)>
  # ivtmp_65 = PHI <255(5), ivtmp_64(8)>
  off_21 = inc_20(D) + i_51;
  _1 = a[off_21];
  _3 = (long unsigned int) i_51;
  _4 = _3 * 4;
  _5 = ip_23(D) + _4;
  _6 = *_5;
  _7 = aa[_54][_6];
  _8 = _1 * _7;
  sum_24 = _8 + sum_41;
  i_25 = i_51 + 1;
  ivtmp_64 = ivtmp_65 - 1;
  if (ivtmp_64 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # sum_67 = PHI <sum_24(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_27 = nl_42 + 1;
  ivtmp_62 = ivtmp_63 - 1;
  if (ivtmp_62 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_42 = PHI <0(2), nl_27(7)>
  # ivtmp_63 = PHI <1000000(2), ivtmp_62(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # sum_66 = PHI <sum_67(4)>
  end_t_29 = mysecond ();
  clock_dif_30 = end_t_29 - start_t_17;
  printf ("S4116\t %.3f \t\t", clock_dif_30);
  temp = sum_66;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s4117 (s4117, funcdef_no=702, decl_uid=10508, cgraph_uid=702, symbol_order=723)

s4117 ()
{
  int i;
  int D.19484;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_45;
  unsigned int ivtmp_46;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4117");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_29 = PHI <0(5), i_16(8)>
  # ivtmp_46 = PHI <32000(5), ivtmp_45(8)>
  _1 = b[i_29];
  _2 = i_29 >> 1;
  _3 = c[_2];
  _4 = d[i_29];
  _5 = _3 * _4;
  _6 = _1 + _5;
  a[i_29] = _6;
  i_16 = i_29 + 1;
  ivtmp_45 = ivtmp_46 - 1;
  if (ivtmp_45 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_40 = ivtmp_41 - 1;
  if (ivtmp_40 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_41 = PHI <10000(2), ivtmp_40(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S4117\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s4121 (s4121, funcdef_no=703, decl_uid=10521, cgraph_uid=703, symbol_order=724)

Merging blocks 5 and 9
s4121 ()
{
  vector(4) float * vectp_a.4196;
  vector(4) float * vectp_a.4195;
  vector(4) float vect__4.4194;
  vector(4) float vect__3.4193;
  vector(4) float * vectp_a.4192;
  vector(4) float * vectp_a.4191;
  vector(4) float vect__13.4190;
  vector(4) float vect__2.4189;
  vector(4) float * vectp_b.4188;
  vector(4) float * vectp_b.4187;
  vector(4) float vect__1.4186;
  vector(4) float * vectp_c.4185;
  vector(4) float * vectp_c.4184;
  int i;
  int D.19505;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _13;
  unsigned int ivtmp_34;
  unsigned int ivtmp_37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4121");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_28 = PHI <i_15(8), 0(5)>
  # ivtmp_42 = PHI <ivtmp_40(8), 32000(5)>
  # vectp_c.4184_36 = PHI <vectp_c.4184_35(8), &c(5)>
  # vectp_b.4187_32 = PHI <vectp_b.4187_31(8), &b(5)>
  # vectp_a.4191_25 = PHI <vectp_a.4191_24(8), &a(5)>
  # vectp_a.4195_7 = PHI <vectp_a.4195_6(8), &a(5)>
  # ivtmp_41 = PHI <ivtmp_34(8), 0(5)>
  vect__1.4186_33 = MEM[(float *)vectp_c.4184_36];
  _1 = c[i_28];
  vect__2.4189_30 = MEM[(float *)vectp_b.4187_32];
  _2 = b[i_28];
  vect__13.4190_26 = vect__1.4186_33 * vect__2.4189_30;
  _13 = _1 * _2;
  vect__3.4193_23 = MEM[(float *)vectp_a.4191_25];
  _3 = a[i_28];
  vect__4.4194_8 = vect__3.4193_23 + vect__13.4190_26;
  _4 = _3 + _13;
  MEM[(float *)vectp_a.4195_7] = vect__4.4194_8;
  i_15 = i_28 + 1;
  ivtmp_40 = ivtmp_42 - 1;
  vectp_c.4184_35 = vectp_c.4184_36 + 16;
  vectp_b.4187_31 = vectp_b.4187_32 + 16;
  vectp_a.4191_24 = vectp_a.4191_25 + 16;
  vectp_a.4195_6 = vectp_a.4195_7 + 16;
  ivtmp_34 = ivtmp_41 + 1;
  if (ivtmp_34 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_37 = ivtmp_39 - 1;
  if (ivtmp_37 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_39 = PHI <10000(2), ivtmp_37(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_12;
  printf ("S4121\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function va (va, funcdef_no=704, decl_uid=10534, cgraph_uid=704, symbol_order=725)

Merging blocks 5 and 9
va ()
{
  vector(4) float * vectp_a.4216;
  vector(4) float * vectp_a.4215;
  vector(4) float vect__1.4214;
  vector(4) float * vectp_b.4213;
  vector(4) float * vectp_b.4212;
  int i;
  int D.19539;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_20;
  unsigned int ivtmp_22;
  unsigned int ivtmp_26;
  unsigned int ivtmp_35;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("va\t");
  start_t_9 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_24 = PHI <i_11(8), 0(5)>
  # ivtmp_20 = PHI <ivtmp_2(8), 32000(5)>
  # vectp_b.4212_33 = PHI <vectp_b.4212_21(8), &b(5)>
  # vectp_a.4215_4 = PHI <vectp_a.4215_32(8), &a(5)>
  # ivtmp_26 = PHI <ivtmp_35(8), 0(5)>
  vect__1.4214_5 = MEM[(float *)vectp_b.4212_33];
  _1 = b[i_24];
  MEM[(float *)vectp_a.4215_4] = vect__1.4214_5;
  i_11 = i_24 + 1;
  ivtmp_2 = ivtmp_20 - 1;
  vectp_b.4212_21 = vectp_b.4212_33 + 16;
  vectp_a.4215_32 = vectp_a.4215_4 + 16;
  ivtmp_35 = ivtmp_26 + 1;
  if (ivtmp_35 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_13 = nl_23 + 1;
  ivtmp_22 = ivtmp_3 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_23 = PHI <0(2), nl_13(7)>
  # ivtmp_3 = PHI <100000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_15 = mysecond ();
  clock_dif_16 = end_t_15 - start_t_9;
  printf ("va\t %.3f \t\t", clock_dif_16);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vag (vag, funcdef_no=705, decl_uid=10548, cgraph_uid=705, symbol_order=726)

vag (int * restrict ip)
{
  int i;
  int D.19564;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  long unsigned int _1;
  long unsigned int _2;
  int * _3;
  int _4;
  float _5;
  unsigned int ivtmp_32;
  unsigned int ivtmp_33;
  unsigned int ivtmp_38;
  unsigned int ivtmp_41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vag  ");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_29 = PHI <0(5), i_16(8)>
  # ivtmp_41 = PHI <32000(5), ivtmp_38(8)>
  _1 = (long unsigned int) i_29;
  _2 = _1 * 4;
  _3 = ip_14(D) + _2;
  _4 = *_3;
  _5 = b[_4];
  a[i_29] = _5;
  i_16 = i_29 + 1;
  ivtmp_38 = ivtmp_41 - 1;
  if (ivtmp_38 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_32 = ivtmp_33 - 1;
  if (ivtmp_32 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_33 = PHI <20000(2), ivtmp_32(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_13;
  printf ("vag\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vas (vas, funcdef_no=706, decl_uid=10562, cgraph_uid=706, symbol_order=727)

vas (int * restrict ip)
{
  int i;
  int D.19586;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  long unsigned int _1;
  long unsigned int _2;
  int * _3;
  int _4;
  float _5;
  unsigned int ivtmp_7;
  unsigned int ivtmp_25;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vas  ");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_29 = PHI <0(5), i_16(8)>
  # ivtmp_37 = PHI <32000(5), ivtmp_36(8)>
  _1 = (long unsigned int) i_29;
  _2 = _1 * 4;
  _3 = ip_14(D) + _2;
  _4 = *_3;
  _5 = b[i_29];
  a[_4] = _5;
  i_16 = i_29 + 1;
  ivtmp_36 = ivtmp_37 - 1;
  if (ivtmp_36 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_7 = ivtmp_25 - 1;
  if (ivtmp_7 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_25 = PHI <20000(2), ivtmp_7(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_13;
  printf ("vas\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vif (vif, funcdef_no=707, decl_uid=10575, cgraph_uid=707, symbol_order=728)

vif ()
{
  int i;
  int D.19608;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_21;
  unsigned int ivtmp_23;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vif  ");
  start_t_10 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_25 = PHI <0(7), i_12(10)>
  # ivtmp_21 = PHI <32000(7), ivtmp_2(10)>
  _1 = b[i_25];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  a[i_25] = _1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  i_12 = i_25 + 1;
  ivtmp_2 = ivtmp_21 - 1;
  if (ivtmp_2 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_14 = nl_24 + 1;
  ivtmp_23 = ivtmp_3 - 1;
  if (ivtmp_23 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_24 = PHI <0(2), nl_14(9)>
  # ivtmp_3 = PHI <10000(2), ivtmp_23(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_16 = mysecond ();
  clock_dif_17 = end_t_16 - start_t_10;
  printf ("vif\t %.3f \t\t", clock_dif_17);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vpv (vpv, funcdef_no=708, decl_uid=10588, cgraph_uid=708, symbol_order=729)

Merging blocks 5 and 9
vpv ()
{
  vector(4) float * vectp_a.4280;
  vector(4) float * vectp_a.4279;
  vector(4) float vect__3.4278;
  vector(4) float vect__2.4277;
  vector(4) float * vectp_b.4276;
  vector(4) float * vectp_b.4275;
  vector(4) float vect__1.4274;
  vector(4) float * vectp_a.4273;
  vector(4) float * vectp_a.4272;
  int i;
  int D.19628;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_31;
  unsigned int ivtmp_35;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vpv  ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_26 = PHI <i_13(8), 0(5)>
  # ivtmp_35 = PHI <ivtmp_24(8), 32000(5)>
  # vectp_a.4272_7 = PHI <vectp_a.4272_6(8), &a(5)>
  # vectp_b.4275_4 = PHI <vectp_b.4275_34(8), &b(5)>
  # vectp_a.4279_37 = PHI <vectp_a.4279_29(8), &a(5)>
  # ivtmp_38 = PHI <ivtmp_31(8), 0(5)>
  vect__1.4274_5 = MEM[(float *)vectp_a.4272_7];
  _1 = a[i_26];
  vect__2.4277_33 = MEM[(float *)vectp_b.4275_4];
  _2 = b[i_26];
  vect__3.4278_28 = vect__1.4274_5 + vect__2.4277_33;
  _3 = _1 + _2;
  MEM[(float *)vectp_a.4279_37] = vect__3.4278_28;
  i_13 = i_26 + 1;
  ivtmp_24 = ivtmp_35 - 1;
  vectp_a.4272_6 = vectp_a.4272_7 + 16;
  vectp_b.4275_34 = vectp_b.4275_4 + 16;
  vectp_a.4279_29 = vectp_a.4279_37 + 16;
  ivtmp_31 = ivtmp_38 + 1;
  if (ivtmp_31 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_22 = ivtmp_23 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_23 = PHI <100000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("vpv\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vtv (vtv, funcdef_no=709, decl_uid=10601, cgraph_uid=709, symbol_order=730)

Merging blocks 5 and 9
vtv ()
{
  vector(4) float * vectp_a.4302;
  vector(4) float * vectp_a.4301;
  vector(4) float vect__3.4300;
  vector(4) float vect__2.4299;
  vector(4) float * vectp_b.4298;
  vector(4) float * vectp_b.4297;
  vector(4) float vect__1.4296;
  vector(4) float * vectp_a.4295;
  vector(4) float * vectp_a.4294;
  int i;
  int D.19656;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_31;
  unsigned int ivtmp_35;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vtv  ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_26 = PHI <i_13(8), 0(5)>
  # ivtmp_35 = PHI <ivtmp_24(8), 32000(5)>
  # vectp_a.4294_7 = PHI <vectp_a.4294_6(8), &a(5)>
  # vectp_b.4297_4 = PHI <vectp_b.4297_34(8), &b(5)>
  # vectp_a.4301_37 = PHI <vectp_a.4301_29(8), &a(5)>
  # ivtmp_38 = PHI <ivtmp_31(8), 0(5)>
  vect__1.4296_5 = MEM[(float *)vectp_a.4294_7];
  _1 = a[i_26];
  vect__2.4299_33 = MEM[(float *)vectp_b.4297_4];
  _2 = b[i_26];
  vect__3.4300_28 = vect__1.4296_5 * vect__2.4299_33;
  _3 = _1 * _2;
  MEM[(float *)vectp_a.4301_37] = vect__3.4300_28;
  i_13 = i_26 + 1;
  ivtmp_24 = ivtmp_35 - 1;
  vectp_a.4294_6 = vectp_a.4294_7 + 16;
  vectp_b.4297_34 = vectp_b.4297_4 + 16;
  vectp_a.4301_29 = vectp_a.4301_37 + 16;
  ivtmp_31 = ivtmp_38 + 1;
  if (ivtmp_31 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_22 = ivtmp_23 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_23 = PHI <100000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("vtv\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vpvtv (vpvtv, funcdef_no=710, decl_uid=10614, cgraph_uid=710, symbol_order=731)

Merging blocks 5 and 9
vpvtv ()
{
  vector(4) float * vectp_a.4328;
  vector(4) float * vectp_a.4327;
  vector(4) float vect__5.4326;
  vector(4) float vect__4.4325;
  vector(4) float vect__3.4324;
  vector(4) float * vectp_c.4323;
  vector(4) float * vectp_c.4322;
  vector(4) float vect__2.4321;
  vector(4) float * vectp_b.4320;
  vector(4) float * vectp_b.4319;
  vector(4) float vect__1.4318;
  vector(4) float * vectp_a.4317;
  vector(4) float * vectp_a.4316;
  int i;
  int D.19684;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_34;
  unsigned int ivtmp_37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vpvtv");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_28 = PHI <i_15(8), 0(5)>
  # ivtmp_42 = PHI <ivtmp_40(8), 32000(5)>
  # vectp_a.4316_36 = PHI <vectp_a.4316_35(8), &a(5)>
  # vectp_b.4319_32 = PHI <vectp_b.4319_31(8), &b(5)>
  # vectp_c.4322_26 = PHI <vectp_c.4322_25(8), &c(5)>
  # vectp_a.4327_8 = PHI <vectp_a.4327_7(8), &a(5)>
  # ivtmp_41 = PHI <ivtmp_34(8), 0(5)>
  vect__1.4318_33 = MEM[(float *)vectp_a.4316_36];
  _1 = a[i_28];
  vect__2.4321_30 = MEM[(float *)vectp_b.4319_32];
  _2 = b[i_28];
  vect__3.4324_24 = MEM[(float *)vectp_c.4322_26];
  _3 = c[i_28];
  vect__4.4325_23 = vect__2.4321_30 * vect__3.4324_24;
  _4 = _2 * _3;
  vect__5.4326_9 = vect__1.4318_33 + vect__4.4325_23;
  _5 = _1 + _4;
  MEM[(float *)vectp_a.4327_8] = vect__5.4326_9;
  i_15 = i_28 + 1;
  ivtmp_40 = ivtmp_42 - 1;
  vectp_a.4316_35 = vectp_a.4316_36 + 16;
  vectp_b.4319_31 = vectp_b.4319_32 + 16;
  vectp_c.4322_25 = vectp_c.4322_26 + 16;
  vectp_a.4327_7 = vectp_a.4327_8 + 16;
  ivtmp_34 = ivtmp_41 + 1;
  if (ivtmp_34 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_37 = ivtmp_39 - 1;
  if (ivtmp_37 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_39 = PHI <40000(2), ivtmp_37(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_13;
  printf ("vpvtv\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vpvts (vpvts, funcdef_no=711, decl_uid=10628, cgraph_uid=711, symbol_order=732)

Merging blocks 5 and 9
vpvts (float s)
{
  vector(4) float * vectp_a.4353;
  vector(4) float * vectp_a.4352;
  vector(4) float vect__4.4351;
  vector(4) float vect__3.4350;
  vector(4) float vect__2.4349;
  vector(4) float * vectp_b.4348;
  vector(4) float * vectp_b.4347;
  vector(4) float vect__1.4346;
  vector(4) float * vectp_a.4345;
  vector(4) float * vectp_a.4344;
  int i;
  int D.19718;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  vector(4) float vect_cst__7;
  unsigned int ivtmp_34;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vpvts");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_28 = PHI <i_15(8), 0(5)>
  # ivtmp_40 = PHI <ivtmp_39(8), 32000(5)>
  # vectp_a.4344_35 = PHI <vectp_a.4344_30(8), &a(5)>
  # vectp_b.4347_25 = PHI <vectp_b.4347_24(8), &b(5)>
  # vectp_a.4352_32 = PHI <vectp_a.4352_31(8), &a(5)>
  # ivtmp_34 = PHI <ivtmp_41(8), 0(5)>
  vect__1.4346_26 = MEM[(float *)vectp_a.4344_35];
  _1 = a[i_28];
  vect__2.4349_8 = MEM[(float *)vectp_b.4347_25];
  _2 = b[i_28];
  vect__3.4350_6 = vect__2.4349_8 * vect_cst__7;
  _3 = _2 * s_13(D);
  vect__4.4351_5 = vect__1.4346_26 + vect__3.4350_6;
  _4 = _1 + _3;
  MEM[(float *)vectp_a.4352_32] = vect__4.4351_5;
  i_15 = i_28 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  vectp_a.4344_30 = vectp_a.4344_35 + 16;
  vectp_b.4347_24 = vectp_b.4347_25 + 16;
  vectp_a.4352_31 = vectp_a.4352_32 + 16;
  ivtmp_41 = ivtmp_34 + 1;
  if (ivtmp_41 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_36 = ivtmp_37 - 1;
  if (ivtmp_36 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_37 = PHI <10000(2), ivtmp_36(7)>
  vect_cst__7 = {s_13(D), s_13(D), s_13(D), s_13(D)};
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_12;
  printf ("vpvts\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vpvpv (vpvpv, funcdef_no=712, decl_uid=10641, cgraph_uid=712, symbol_order=733)

Merging blocks 5 and 9
vpvpv ()
{
  vector(4) float * vectp_a.4379;
  vector(4) float * vectp_a.4378;
  vector(4) float vect__5.4377;
  vector(4) float vect__4.4376;
  vector(4) float vect__3.4375;
  vector(4) float * vectp_c.4374;
  vector(4) float * vectp_c.4373;
  vector(4) float vect__2.4372;
  vector(4) float * vectp_b.4371;
  vector(4) float * vectp_b.4370;
  vector(4) float vect__1.4369;
  vector(4) float * vectp_a.4368;
  vector(4) float * vectp_a.4367;
  int i;
  int D.19747;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_34;
  unsigned int ivtmp_37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vpvpv");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_28 = PHI <i_15(8), 0(5)>
  # ivtmp_42 = PHI <ivtmp_40(8), 32000(5)>
  # vectp_a.4367_36 = PHI <vectp_a.4367_35(8), &a(5)>
  # vectp_b.4370_32 = PHI <vectp_b.4370_31(8), &b(5)>
  # vectp_c.4373_26 = PHI <vectp_c.4373_25(8), &c(5)>
  # vectp_a.4378_8 = PHI <vectp_a.4378_7(8), &a(5)>
  # ivtmp_41 = PHI <ivtmp_34(8), 0(5)>
  vect__1.4369_33 = MEM[(float *)vectp_a.4367_36];
  _1 = a[i_28];
  vect__2.4372_30 = MEM[(float *)vectp_b.4370_32];
  _2 = b[i_28];
  vect__3.4375_24 = MEM[(float *)vectp_c.4373_26];
  _3 = c[i_28];
  vect__4.4376_23 = vect__2.4372_30 + vect__3.4375_24;
  _4 = _2 + _3;
  vect__5.4377_9 = vect__1.4369_33 + vect__4.4376_23;
  _5 = _1 + _4;
  MEM[(float *)vectp_a.4378_8] = vect__5.4377_9;
  i_15 = i_28 + 1;
  ivtmp_40 = ivtmp_42 - 1;
  vectp_a.4367_35 = vectp_a.4367_36 + 16;
  vectp_b.4370_31 = vectp_b.4370_32 + 16;
  vectp_c.4373_25 = vectp_c.4373_26 + 16;
  vectp_a.4378_7 = vectp_a.4378_8 + 16;
  ivtmp_34 = ivtmp_41 + 1;
  if (ivtmp_34 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_37 = ivtmp_39 - 1;
  if (ivtmp_37 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_39 = PHI <40000(2), ivtmp_37(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_13;
  printf ("vpvpv\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vtvtv (vtvtv, funcdef_no=713, decl_uid=10654, cgraph_uid=713, symbol_order=734)

Merging blocks 5 and 9
vtvtv ()
{
  vector(4) float * vectp_a.4407;
  vector(4) float * vectp_a.4406;
  vector(4) float vect__5.4405;
  vector(4) float vect__4.4404;
  vector(4) float * vectp_c.4403;
  vector(4) float * vectp_c.4402;
  vector(4) float vect__3.4401;
  vector(4) float vect__2.4400;
  vector(4) float * vectp_b.4399;
  vector(4) float * vectp_b.4398;
  vector(4) float vect__1.4397;
  vector(4) float * vectp_a.4396;
  vector(4) float * vectp_a.4395;
  int i;
  int D.19781;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_23;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vtvtv");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_28 = PHI <i_15(8), 0(5)>
  # ivtmp_40 = PHI <ivtmp_39(8), 32000(5)>
  # vectp_a.4395_35 = PHI <vectp_a.4395_33(8), &a(5)>
  # vectp_b.4398_31 = PHI <vectp_b.4398_30(8), &b(5)>
  # vectp_c.4402_24 = PHI <vectp_c.4402_9(8), &c(5)>
  # vectp_a.4406_6 = PHI <vectp_a.4406_41(8), &a(5)>
  # ivtmp_23 = PHI <ivtmp_42(8), 0(5)>
  vect__1.4397_32 = MEM[(float *)vectp_a.4395_35];
  _1 = a[i_28];
  vect__2.4400_26 = MEM[(float *)vectp_b.4398_31];
  _2 = b[i_28];
  vect__3.4401_25 = vect__1.4397_32 * vect__2.4400_26;
  _3 = _1 * _2;
  vect__4.4404_8 = MEM[(float *)vectp_c.4402_24];
  _4 = c[i_28];
  vect__5.4405_7 = vect__3.4401_25 * vect__4.4404_8;
  _5 = _3 * _4;
  MEM[(float *)vectp_a.4406_6] = vect__5.4405_7;
  i_15 = i_28 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  vectp_a.4395_33 = vectp_a.4395_35 + 16;
  vectp_b.4398_30 = vectp_b.4398_31 + 16;
  vectp_c.4402_9 = vectp_c.4402_24 + 16;
  vectp_a.4406_41 = vectp_a.4406_6 + 16;
  ivtmp_42 = ivtmp_23 + 1;
  if (ivtmp_42 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_36 = ivtmp_37 - 1;
  if (ivtmp_36 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_37 = PHI <40000(2), ivtmp_36(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_13;
  printf ("vtvtv\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vsumr (vsumr, funcdef_no=714, decl_uid=10667, cgraph_uid=714, symbol_order=735)

Merging blocks 5 and 9
vsumr ()
{
  float stmp_sum_11.4426;
  vector(4) float vect__1.4425;
  vector(4) float * vectp_a.4424;
  vector(4) float * vectp_a.4423;
  int i;
  int D.19815;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_31;
  unsigned int ivtmp_33;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vsumr");
  start_t_9 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # sum_25 = PHI <sum_11(8), 0.0(5)>
  # i_26 = PHI <i_12(8), 0(5)>
  # ivtmp_33 = PHI <ivtmp_24(8), 32000(5)>
  # vectp_a.4423_3 = PHI <vectp_a.4423_4(8), &a(5)>
  # ivtmp_31 = PHI <ivtmp_38(8), 0(5)>
  vect__1.4425_2 = MEM[(float *)vectp_a.4423_3];
  _1 = a[i_26];
  stmp_sum_11.4426_5 = BIT_FIELD_REF <vect__1.4425_2, 32, 0>;
  stmp_sum_11.4426_32 = sum_25 + stmp_sum_11.4426_5;
  stmp_sum_11.4426_21 = BIT_FIELD_REF <vect__1.4425_2, 32, 32>;
  stmp_sum_11.4426_36 = stmp_sum_11.4426_32 + stmp_sum_11.4426_21;
  stmp_sum_11.4426_28 = BIT_FIELD_REF <vect__1.4425_2, 32, 64>;
  stmp_sum_11.4426_29 = stmp_sum_11.4426_36 + stmp_sum_11.4426_28;
  stmp_sum_11.4426_37 = BIT_FIELD_REF <vect__1.4425_2, 32, 96>;
  sum_11 = stmp_sum_11.4426_29 + stmp_sum_11.4426_37;
  i_12 = i_26 + 1;
  ivtmp_24 = ivtmp_33 - 1;
  vectp_a.4423_4 = vectp_a.4423_3 + 16;
  ivtmp_38 = ivtmp_31 + 1;
  if (ivtmp_38 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # sum_34 = PHI <sum_11(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, sum_34);
  nl_14 = nl_35 + 1;
  ivtmp_22 = ivtmp_23 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_35 = PHI <0(2), nl_14(7)>
  # ivtmp_23 = PHI <100000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_16 = mysecond ();
  clock_dif_17 = end_t_16 - start_t_9;
  printf ("vsumr\t %.3f \t\t", clock_dif_17);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vdotr (vdotr, funcdef_no=715, decl_uid=10681, cgraph_uid=715, symbol_order=736)

Merging blocks 5 and 9
vdotr ()
{
  float stmp_dot_15.4445;
  vector(4) float vect__3.4444;
  vector(4) float vect__2.4443;
  vector(4) float * vectp_b.4442;
  vector(4) float * vectp_b.4441;
  vector(4) float vect__1.4440;
  vector(4) float * vectp_a.4439;
  vector(4) float * vectp_a.4438;
  int i;
  int D.19836;
  int i;
  int nl;
  float dot;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_13;
  unsigned int ivtmp_25;
  unsigned int ivtmp_37;
  unsigned int ivtmp_38;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vdotr");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # dot_32 = PHI <dot_15(8), 0.0(5)>
  # i_42 = PHI <i_16(8), 0(5)>
  # ivtmp_40 = PHI <ivtmp_39(8), 32000(5)>
  # vectp_a.4438_36 = PHI <vectp_a.4438_35(8), &a(5)>
  # vectp_b.4441_30 = PHI <vectp_b.4441_29(8), &b(5)>
  # ivtmp_25 = PHI <ivtmp_13(8), 0(5)>
  vect__1.4440_31 = MEM[(float *)vectp_a.4438_36];
  _1 = a[i_42];
  vect__2.4443_8 = MEM[(float *)vectp_b.4441_30];
  _2 = b[i_42];
  vect__3.4444_7 = vect__1.4440_31 * vect__2.4443_8;
  _3 = _1 * _2;
  stmp_dot_15.4445_6 = BIT_FIELD_REF <vect__3.4444_7, 32, 0>;
  stmp_dot_15.4445_5 = dot_32 + stmp_dot_15.4445_6;
  stmp_dot_15.4445_4 = BIT_FIELD_REF <vect__3.4444_7, 32, 32>;
  stmp_dot_15.4445_28 = stmp_dot_15.4445_5 + stmp_dot_15.4445_4;
  stmp_dot_15.4445_27 = BIT_FIELD_REF <vect__3.4444_7, 32, 64>;
  stmp_dot_15.4445_44 = stmp_dot_15.4445_28 + stmp_dot_15.4445_27;
  stmp_dot_15.4445_26 = BIT_FIELD_REF <vect__3.4444_7, 32, 96>;
  dot_15 = stmp_dot_15.4445_44 + stmp_dot_15.4445_26;
  i_16 = i_42 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  vectp_a.4438_35 = vectp_a.4438_36 + 16;
  vectp_b.4441_29 = vectp_b.4441_30 + 16;
  ivtmp_13 = ivtmp_25 + 1;
  if (ivtmp_13 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # dot_43 = PHI <dot_15(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, dot_43);
  nl_18 = nl_33 + 1;
  ivtmp_37 = ivtmp_38 - 1;
  if (ivtmp_37 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_18(7)>
  # ivtmp_38 = PHI <100000(2), ivtmp_37(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # dot_41 = PHI <dot_43(4)>
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_12;
  printf ("vdotr\t %.3f \t\t", clock_dif_21);
  temp = dot_41;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function vbor (vbor, funcdef_no=716, decl_uid=10695, cgraph_uid=716, symbol_order=737)

Merging blocks 5 and 13
Merging blocks 6 and 12
vbor ()
{
  vector(4) float * vectp_x.4532;
  vector(4) float * vectp_x.4531;
  vector(4) float vect__45.4530;
  vector(4) float vect__44.4529;
  vector(4) float vect__43.4528;
  vector(4) float vect_d1_68.4527;
  vector(4) float vect__42.4526;
  vector(4) float vect_c1_67.4525;
  vector(4) float vect__41.4524;
  vector(4) float vect__40.4523;
  vector(4) float vect__39.4522;
  vector(4) float vect__38.4521;
  vector(4) float vect__37.4520;
  vector(4) float vect__36.4519;
  vector(4) float vect_b1_66.4518;
  vector(4) float vect__35.4517;
  vector(4) float vect__34.4516;
  vector(4) float vect__33.4515;
  vector(4) float vect__32.4514;
  vector(4) float vect__31.4513;
  vector(4) float vect__30.4512;
  vector(4) float vect__29.4511;
  vector(4) float vect__28.4510;
  vector(4) float vect__27.4509;
  vector(4) float vect__26.4508;
  vector(4) float vect__25.4507;
  vector(4) float vect__24.4506;
  vector(4) float vect__23.4505;
  vector(4) float vect_a1_65.4504;
  vector(4) float vect__22.4503;
  vector(4) float vect__21.4502;
  vector(4) float vect__20.4501;
  vector(4) float vect__19.4500;
  vector(4) float vect__18.4499;
  vector(4) float vect__17.4498;
  vector(4) float vect__16.4497;
  vector(4) float vect__15.4496;
  vector(4) float vect__14.4495;
  vector(4) float vect__13.4494;
  vector(4) float vect__12.4493;
  vector(4) float vect__11.4492;
  vector(4) float vect__10.4491;
  vector(4) float vect__9.4490;
  vector(4) float vect__8.4489;
  vector(4) float vect__7.4488;
  vector(4) float vect__6.4487;
  vector(4) float vect__5.4486;
  vector(4) float vect__4.4485;
  vector(4) float vect__3.4484;
  vector(4) float vect__2.4483;
  vector(4) float vect__1.4482;
  vector(4) float vect_f1_64.4481;
  vector(4) float * vectp_aa.4480;
  vector(4) float * vectp_aa.4479;
  vector(4) float vect_e1_63.4478;
  vector(4) float * vectp_e.4477;
  vector(4) float * vectp_e.4476;
  vector(4) float vect_d1_62.4475;
  vector(4) float * vectp_d.4474;
  vector(4) float * vectp_d.4473;
  vector(4) float vect_c1_61.4472;
  vector(4) float * vectp_c.4471;
  vector(4) float * vectp_c.4470;
  vector(4) float vect_b1_60.4469;
  vector(4) float * vectp_b.4468;
  vector(4) float * vectp_b.4467;
  vector(4) float vect_a1_59.4466;
  vector(4) float * vectp_a.4465;
  vector(4) float * vectp_a.4464;
  float stmp__48.4463;
  vector(4) float vect__46.4462;
  vector(4) float * vectp_x.4461;
  vector(4) float * vectp_x.4460;
  float temp_lsm.4459;
  int i;
  int i;
  int nl;
  float f1;
  float e1;
  float d1;
  float c1;
  float b1;
  float a1;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _10;
  float _11;
  float _12;
  float _13;
  float _14;
  float _15;
  float _16;
  float _17;
  float _18;
  float _19;
  float _20;
  float _21;
  float _22;
  float _23;
  float _24;
  float _25;
  float _26;
  float _27;
  float _28;
  float _29;
  float _30;
  float _31;
  float _32;
  float _33;
  float _34;
  float _35;
  float _36;
  float _37;
  float _38;
  float _39;
  float _40;
  float _41;
  float _42;
  float _43;
  float _44;
  float _45;
  float _46;
  float _48;
  unsigned int ivtmp_267;
  unsigned int ivtmp_268;
  unsigned int ivtmp_341;
  unsigned int ivtmp_342;
  unsigned int ivtmp_354;
  unsigned int ivtmp_355;
  unsigned int ivtmp_356;
  unsigned int ivtmp_357;
  unsigned int ivtmp_358;
  unsigned int ivtmp_360;
  float _361;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("vbor ");
  start_t_58 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 11, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       11
;;                5
  # i_91 = PHI <i_70(11), 0(5)>
  # ivtmp_357 = PHI <ivtmp_356(11), 256(5)>
  # vectp_a.4464_340 = PHI <vectp_a.4464_339(11), &a(5)>
  # vectp_b.4467_337 = PHI <vectp_b.4467_336(11), &b(5)>
  # vectp_c.4470_334 = PHI <vectp_c.4470_333(11), &c(5)>
  # vectp_d.4473_331 = PHI <vectp_d.4473_330(11), &d(5)>
  # vectp_e.4476_328 = PHI <vectp_e.4476_327(11), &e(5)>
  # vectp_aa.4479_325 = PHI <vectp_aa.4479_324(11), &aa(5)>
  # vectp_x.4531_271 = PHI <vectp_x.4531_270(11), &x(5)>
  # ivtmp_268 = PHI <ivtmp_267(11), 0(5)>
  vect_a1_59.4466_338 = MEM[(float *)vectp_a.4464_340];
  a1_59 = a[i_91];
  vect_b1_60.4469_335 = MEM[(float *)vectp_b.4467_337];
  b1_60 = b[i_91];
  vect_c1_61.4472_332 = MEM[(float *)vectp_c.4470_334];
  c1_61 = c[i_91];
  vect_d1_62.4475_329 = MEM[(float *)vectp_d.4473_331];
  d1_62 = d[i_91];
  vect_e1_63.4478_326 = MEM[(float *)vectp_e.4476_328];
  e1_63 = e[i_91];
  vect_f1_64.4481_323 = MEM[(float *)vectp_aa.4479_325];
  f1_64 = aa[0][i_91];
  vect__1.4482_322 = vect_a1_59.4466_338 * vect_b1_60.4469_335;
  _1 = a1_59 * b1_60;
  vect__2.4483_321 = vect__1.4482_322 * vect_c1_61.4472_332;
  _2 = _1 * c1_61;
  vect__3.4484_320 = vect__1.4482_322 * vect_d1_62.4475_329;
  _3 = _1 * d1_62;
  vect__4.4485_319 = vect__2.4483_321 + vect__3.4484_320;
  _4 = _2 + _3;
  vect__5.4486_318 = vect__1.4482_322 * vect_e1_63.4478_326;
  _5 = _1 * e1_63;
  vect__6.4487_317 = vect__4.4485_319 + vect__5.4486_318;
  _6 = _4 + _5;
  vect__7.4488_316 = vect__1.4482_322 * vect_f1_64.4481_323;
  _7 = _1 * f1_64;
  vect__8.4489_315 = vect__6.4487_317 + vect__7.4488_316;
  _8 = _6 + _7;
  vect__9.4490_314 = vect_a1_59.4466_338 * vect_c1_61.4472_332;
  _9 = a1_59 * c1_61;
  vect__10.4491_313 = vect__9.4490_314 * vect_d1_62.4475_329;
  _10 = _9 * d1_62;
  vect__11.4492_312 = vect__8.4489_315 + vect__10.4491_313;
  _11 = _8 + _10;
  vect__12.4493_311 = vect__9.4490_314 * vect_e1_63.4478_326;
  _12 = _9 * e1_63;
  vect__13.4494_310 = vect__11.4492_312 + vect__12.4493_311;
  _13 = _11 + _12;
  vect__14.4495_309 = vect__9.4490_314 * vect_f1_64.4481_323;
  _14 = _9 * f1_64;
  vect__15.4496_308 = vect__13.4494_310 + vect__14.4495_309;
  _15 = _13 + _14;
  vect__16.4497_307 = vect_a1_59.4466_338 * vect_d1_62.4475_329;
  _16 = a1_59 * d1_62;
  vect__17.4498_306 = vect__16.4497_307 * vect_e1_63.4478_326;
  _17 = _16 * e1_63;
  vect__18.4499_305 = vect__15.4496_308 + vect__17.4498_306;
  _18 = _15 + _17;
  vect__19.4500_302 = vect__16.4497_307 * vect_f1_64.4481_323;
  _19 = _16 * f1_64;
  vect__20.4501_301 = vect__18.4499_305 + vect__19.4500_302;
  _20 = _18 + _19;
  vect__21.4502_300 = vect_a1_59.4466_338 * vect_e1_63.4478_326;
  _21 = a1_59 * e1_63;
  vect__22.4503_299 = vect__21.4502_300 * vect_f1_64.4481_323;
  _22 = _21 * f1_64;
  vect_a1_65.4504_298 = vect__20.4501_301 + vect__22.4503_299;
  a1_65 = _20 + _22;
  vect__23.4505_297 = vect_b1_60.4469_335 * vect_c1_61.4472_332;
  _23 = b1_60 * c1_61;
  vect__24.4506_296 = vect__23.4505_297 * vect_d1_62.4475_329;
  _24 = _23 * d1_62;
  vect__25.4507_295 = vect__23.4505_297 * vect_e1_63.4478_326;
  _25 = _23 * e1_63;
  vect__26.4508_294 = vect__24.4506_296 + vect__25.4507_295;
  _26 = _24 + _25;
  vect__27.4509_293 = vect__23.4505_297 * vect_f1_64.4481_323;
  _27 = _23 * f1_64;
  vect__28.4510_292 = vect__26.4508_294 + vect__27.4509_293;
  _28 = _26 + _27;
  vect__29.4511_291 = vect_b1_60.4469_335 * vect_d1_62.4475_329;
  _29 = b1_60 * d1_62;
  vect__30.4512_290 = vect__29.4511_291 * vect_e1_63.4478_326;
  _30 = _29 * e1_63;
  vect__31.4513_289 = vect__28.4510_292 + vect__30.4512_290;
  _31 = _28 + _30;
  vect__32.4514_288 = vect__29.4511_291 * vect_f1_64.4481_323;
  _32 = _29 * f1_64;
  vect__33.4515_287 = vect__31.4513_289 + vect__32.4514_288;
  _33 = _31 + _32;
  vect__34.4516_286 = vect_b1_60.4469_335 * vect_e1_63.4478_326;
  _34 = b1_60 * e1_63;
  vect__35.4517_285 = vect__34.4516_286 * vect_f1_64.4481_323;
  _35 = _34 * f1_64;
  vect_b1_66.4518_284 = vect__33.4515_287 + vect__35.4517_285;
  b1_66 = _33 + _35;
  vect__36.4519_283 = vect_c1_61.4472_332 * vect_d1_62.4475_329;
  _36 = c1_61 * d1_62;
  vect__37.4520_282 = vect__36.4519_283 * vect_e1_63.4478_326;
  _37 = _36 * e1_63;
  vect__38.4521_281 = vect__36.4519_283 * vect_f1_64.4481_323;
  _38 = _36 * f1_64;
  vect__39.4522_280 = vect__37.4520_282 + vect__38.4521_281;
  _39 = _37 + _38;
  vect__40.4523_279 = vect_c1_61.4472_332 * vect_e1_63.4478_326;
  _40 = c1_61 * e1_63;
  vect__41.4524_278 = vect__40.4523_279 * vect_f1_64.4481_323;
  _41 = _40 * f1_64;
  vect_c1_67.4525_277 = vect__39.4522_280 + vect__41.4524_278;
  c1_67 = _39 + _41;
  vect__42.4526_276 = vect_d1_62.4475_329 * vect_e1_63.4478_326;
  _42 = d1_62 * e1_63;
  vect_d1_68.4527_275 = vect__42.4526_276 * vect_f1_64.4481_323;
  d1_68 = _42 * f1_64;
  vect__43.4528_274 = vect_a1_65.4504_298 * vect_b1_66.4518_284;
  _43 = a1_65 * b1_66;
  vect__44.4529_273 = vect__43.4528_274 * vect_c1_67.4525_277;
  _44 = _43 * c1_67;
  vect__45.4530_272 = vect__44.4529_273 * vect_d1_68.4527_275;
  _45 = _44 * d1_68;
  MEM[(float *)vectp_x.4531_271] = vect__45.4530_272;
  i_70 = i_91 + 1;
  ivtmp_356 = ivtmp_357 - 1;
  vectp_a.4464_339 = vectp_a.4464_340 + 16;
  vectp_b.4467_336 = vectp_b.4467_337 + 16;
  vectp_c.4470_333 = vectp_c.4470_334 + 16;
  vectp_d.4473_330 = vectp_d.4473_331 + 16;
  vectp_e.4476_327 = vectp_e.4476_328 + 16;
  vectp_aa.4479_324 = vectp_aa.4479_325 + 16;
  vectp_x.4531_270 = vectp_x.4531_271 + 16;
  ivtmp_267 = ivtmp_268 + 1;
  if (ivtmp_267 < 64)
    goto <bb 11>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_72 = nl_90 + 1;
  ivtmp_354 = ivtmp_355 - 1;
  if (ivtmp_354 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                10
  # nl_90 = PHI <0(2), nl_72(10)>
  # ivtmp_355 = PHI <100000(2), ivtmp_354(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_74 = mysecond ();
  clock_dif_75 = end_t_74 - start_t_58;
  printf ("vbor\t %.3f \t\t", clock_dif_75);
  temp = 0.0;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       9
;;                6
  # i_92 = PHI <i_79(9), 0(6)>
  # temp_lsm.4459_51 = PHI <_48(9), 0.0(6)>
  # ivtmp_360 = PHI <ivtmp_358(9), 32000(6)>
  # vectp_x.4460_353 = PHI <vectp_x.4460_352(9), &x(6)>
  # ivtmp_342 = PHI <ivtmp_341(9), 0(6)>
  vect__46.4462_351 = MEM[(float *)vectp_x.4460_353];
  _46 = x[i_92];
  stmp__48.4463_350 = BIT_FIELD_REF <vect__46.4462_351, 32, 0>;
  stmp__48.4463_349 = temp_lsm.4459_51 + stmp__48.4463_350;
  stmp__48.4463_348 = BIT_FIELD_REF <vect__46.4462_351, 32, 32>;
  stmp__48.4463_347 = stmp__48.4463_349 + stmp__48.4463_348;
  stmp__48.4463_346 = BIT_FIELD_REF <vect__46.4462_351, 32, 64>;
  stmp__48.4463_345 = stmp__48.4463_347 + stmp__48.4463_346;
  stmp__48.4463_344 = BIT_FIELD_REF <vect__46.4462_351, 32, 96>;
  _48 = stmp__48.4463_345 + stmp__48.4463_344;
  i_79 = i_92 + 1;
  ivtmp_358 = ivtmp_360 - 1;
  vectp_x.4460_352 = vectp_x.4460_353 + 16;
  ivtmp_341 = ivtmp_342 + 1;
  if (ivtmp_341 < 8000)
    goto <bb 9>; [96.00%]
  else
    goto <bb 8>; [4.00%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       7
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 8, loop depth 0
;;    pred:       7
  # _361 = PHI <_48(7)>
  temp = _361;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function set (set, funcdef_no=717, decl_uid=10721, cgraph_uid=717, symbol_order=738)

Merging blocks 11 and 45
Merging blocks 14 and 44
Merging blocks 17 and 43
Removing basic block 20
Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 27
Removing basic block 28
set (int * ip, float * s1, float * s2)
{
  vector(4) float * vectp_a.4583;
  vector(4) float * vectp_a.4582;
  vector(4) float * vectp_b.4581;
  vector(4) float * vectp_b.4580;
  vector(4) float * vectp_c.4579;
  vector(4) float * vectp_c.4578;
  vector(4) float * vectp_d.4577;
  vector(4) float * vectp_d.4576;
  vector(4) float * vectp_e.4575;
  vector(4) float * vectp_e.4574;
  vector(4) float * vectp.4573;
  vector(4) float * vectp.4572;
  vector(4) float * vectp.4571;
  vector(4) float * vectp.4570;
  vector(4) float * vectp.4569;
  vector(4) float * vectp.4568;
  vector(4) int * vectp_indx.4567;
  vector(4) int * vectp_indx.4566;
  vector(4) int vect__23.4565;
  vector(4) int vect__22.4564;
  vector(4) int vect__21.4563;
  vector(4) int vect_vec_iv_.4562;
  int i;
  int j;
  int D.19993;
  int i;
  int j;
  int D.19984;
  int i;
  int j;
  int D.19975;
  int i;
  int i;
  int i;
  int i;
  int i;
  int i;
  int i;
  void * _1;
  long unsigned int _2;
  long unsigned int _3;
  int * _4;
  int _5;
  sizetype _6;
  sizetype _7;
  int * _8;
  int _9;
  sizetype _10;
  sizetype _11;
  int * _12;
  sizetype _13;
  sizetype _14;
  int * _15;
  int _16;
  sizetype _17;
  sizetype _18;
  int * _19;
  int _20;
  int _21;
  int _22;
  int _23;
  long unsigned int _26;
  long unsigned int _39;
  vector(4) float vect_cst__47;
  long unsigned int _48;
  long unsigned int _49;
  float * _50;
  unsigned int ivtmp_52;
  long unsigned int _53;
  long unsigned int _54;
  float * _55;
  unsigned int ivtmp_57;
  long unsigned int _58;
  long unsigned int _59;
  float * _60;
  long unsigned int _63;
  long unsigned int _64;
  float * _65;
  long unsigned int _68;
  long unsigned int _69;
  float * _70;
  vector(4) int vect_cst__74;
  vector(4) int vect_cst__82;
  int _83;
  float _84;
  long unsigned int _85;
  long unsigned int _86;
  float[256] * _87;
  float _88;
  vector(4) int vect_cst__91;
  unsigned int ivtmp_96;
  unsigned int ivtmp_98;
  vector(4) int vect_cst__100;
  int _101;
  float _102;
  long unsigned int _103;
  long unsigned int _104;
  float[256] * _105;
  float _106;
  unsigned int ivtmp_107;
  unsigned int ivtmp_109;
  unsigned int ivtmp_111;
  unsigned int ivtmp_113;
  unsigned int ivtmp_114;
  vector(4) float vect_cst__117;
  unsigned int ivtmp_118;
  int _119;
  float _120;
  long unsigned int _121;
  long unsigned int _122;
  float[256] * _123;
  float _124;
  unsigned int ivtmp_125;
  unsigned int ivtmp_127;
  unsigned int ivtmp_128;
  unsigned int ivtmp_129;
  unsigned int ivtmp_130;
  unsigned int ivtmp_131;
  unsigned int ivtmp_132;
  unsigned int ivtmp_135;
  vector(4) float vect_cst__137;
  unsigned int ivtmp_138;
  unsigned int ivtmp_139;
  vector(4) float vect_cst__143;
  unsigned int ivtmp_148;
  unsigned int ivtmp_149;
  unsigned int ivtmp_150;
  unsigned int ivtmp_151;
  unsigned int ivtmp_152;
  unsigned int ivtmp_153;
  unsigned int ivtmp_154;
  unsigned int ivtmp_155;
  unsigned int ivtmp_156;
  unsigned int ivtmp_183;
  unsigned int ivtmp_184;
  unsigned int ivtmp_187;
  unsigned int ivtmp_189;
  unsigned int ivtmp_190;
  unsigned int ivtmp_191;
  vector(4) float vect_cst__192;
  unsigned int ivtmp_194;
  unsigned int ivtmp_196;
  vector(4) float vect_cst__197;
  unsigned int ivtmp_200;
  unsigned int ivtmp_202;
  vector(4) float vect_cst__203;
  long unsigned int _204;
  long unsigned int _205;
  unsigned int ivtmp_208;
  long unsigned int _210;
  long unsigned int _214;
  vector(4) float vect_cst__215;
  unsigned int ivtmp_217;
  unsigned int ivtmp_218;
  unsigned int ivtmp_219;
  unsigned int ivtmp_220;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = memalign (16, 128000);
  xx = _1;
  __builtin_putchar (10);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                41
  # i_157 = PHI <0(2), i_38(41)>
  # ivtmp_109 = PHI <6400(2), ivtmp_107(41)>
  _2 = (long unsigned int) i_157;
  _3 = _2 * 4;
  _4 = ip_32(D) + _3;
  _5 = i_157 + 4;
  *_4 = _5;
  _6 = _2 + 1;
  _7 = _6 * 4;
  _8 = ip_32(D) + _7;
  _9 = i_157 + 2;
  *_8 = _9;
  _10 = _2 + 2;
  _11 = _10 * 4;
  _12 = ip_32(D) + _11;
  *_12 = i_157;
  _13 = _2 + 3;
  _14 = _13 * 4;
  _15 = ip_32(D) + _14;
  _16 = i_157 + 3;
  *_15 = _16;
  _17 = _2 + 4;
  _18 = _17 * 4;
  _19 = ip_32(D) + _18;
  _20 = i_157 + 1;
  *_19 = _20;
  i_38 = i_157 + 5;
  ivtmp_107 = ivtmp_109 - 1;
  if (ivtmp_107 != 0)
    goto <bb 41>; [98.99%]
  else
    goto <bb 50>; [1.01%]
;;    succ:       41
;;                50

;;   basic block 41, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 50, loop depth 0
;;    pred:       3
  vect_cst__137 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       40
;;                50
  # i_165 = PHI <i_71(40), 0(50)>
  # ivtmp_113 = PHI <ivtmp_111(40), 32000(50)>
  # vectp_a.4582_136 = PHI <vectp_a.4582_134(40), &a(50)>
  # ivtmp_130 = PHI <ivtmp_128(40), 0(50)>
  _68 = (long unsigned int) i_165;
  _69 = _68 * 4;
  _70 = &a + _69;
  MEM[(float *)vectp_a.4582_136] = vect_cst__137;
  i_71 = i_165 + 1;
  ivtmp_111 = ivtmp_113 - 1;
  vectp_a.4582_134 = vectp_a.4582_136 + 16;
  ivtmp_128 = ivtmp_130 + 1;
  if (ivtmp_128 < 8000)
    goto <bb 40>; [83.33%]
  else
    goto <bb 49>; [16.67%]
;;    succ:       40
;;                49

;;   basic block 40, loop depth 1
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 49, loop depth 0
;;    pred:       4
  vect_cst__143 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       39
;;                49
  # i_164 = PHI <i_66(39), 0(49)>
  # ivtmp_118 = PHI <ivtmp_114(39), 32000(49)>
  # vectp_b.4580_40 = PHI <vectp_b.4580_141(39), &b(49)>
  # ivtmp_139 = PHI <ivtmp_138(39), 0(49)>
  _63 = (long unsigned int) i_164;
  _64 = _63 * 4;
  _65 = &b + _64;
  MEM[(float *)vectp_b.4580_40] = vect_cst__143;
  i_66 = i_164 + 1;
  ivtmp_114 = ivtmp_118 - 1;
  vectp_b.4580_141 = vectp_b.4580_40 + 16;
  ivtmp_138 = ivtmp_139 + 1;
  if (ivtmp_138 < 8000)
    goto <bb 39>; [83.33%]
  else
    goto <bb 48>; [16.67%]
;;    succ:       39
;;                48

;;   basic block 39, loop depth 1
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 48, loop depth 0
;;    pred:       5
  vect_cst__117 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       38
;;                48
  # i_163 = PHI <i_61(38), 0(48)>
  # ivtmp_127 = PHI <ivtmp_125(38), 32000(48)>
  # vectp_c.4578_110 = PHI <vectp_c.4578_147(38), &c(48)>
  # ivtmp_96 = PHI <ivtmp_98(38), 0(48)>
  _58 = (long unsigned int) i_163;
  _59 = _58 * 4;
  _60 = &c + _59;
  MEM[(float *)vectp_c.4578_110] = vect_cst__117;
  i_61 = i_163 + 1;
  ivtmp_125 = ivtmp_127 - 1;
  vectp_c.4578_147 = vectp_c.4578_110 + 16;
  ivtmp_98 = ivtmp_96 + 1;
  if (ivtmp_98 < 8000)
    goto <bb 38>; [83.33%]
  else
    goto <bb 47>; [16.67%]
;;    succ:       38
;;                47

;;   basic block 38, loop depth 1
;;    pred:       6
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 47, loop depth 0
;;    pred:       6
  vect_cst__192 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       37
;;                47
  # i_162 = PHI <i_56(37), 0(47)>
  # ivtmp_131 = PHI <ivtmp_129(37), 32000(47)>
  # vectp_d.4576_188 = PHI <vectp_d.4576_185(37), &d(47)>
  # ivtmp_187 = PHI <ivtmp_183(37), 0(47)>
  _53 = (long unsigned int) i_162;
  _54 = _53 * 4;
  _55 = &d + _54;
  MEM[(float *)vectp_d.4576_188] = vect_cst__192;
  i_56 = i_162 + 1;
  ivtmp_129 = ivtmp_131 - 1;
  vectp_d.4576_185 = vectp_d.4576_188 + 16;
  ivtmp_183 = ivtmp_187 + 1;
  if (ivtmp_183 < 8000)
    goto <bb 37>; [83.33%]
  else
    goto <bb 46>; [16.67%]
;;    succ:       37
;;                46

;;   basic block 37, loop depth 1
;;    pred:       7
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 46, loop depth 0
;;    pred:       7
  vect_cst__197 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       36
;;                46
  # i_161 = PHI <i_51(36), 0(46)>
  # ivtmp_135 = PHI <ivtmp_132(36), 32000(46)>
  # vectp_e.4574_198 = PHI <vectp_e.4574_199(36), &e(46)>
  # ivtmp_190 = PHI <ivtmp_191(36), 0(46)>
  _48 = (long unsigned int) i_161;
  _49 = _48 * 4;
  _50 = &e + _49;
  MEM[(float *)vectp_e.4574_198] = vect_cst__197;
  i_51 = i_161 + 1;
  ivtmp_132 = ivtmp_135 - 1;
  vectp_e.4574_199 = vectp_e.4574_198 + 16;
  ivtmp_191 = ivtmp_190 + 1;
  if (ivtmp_191 < 8000)
    goto <bb 36>; [83.33%]
  else
    goto <bb 23>; [16.67%]
;;    succ:       36
;;                23

;;   basic block 36, loop depth 1
;;    pred:       8
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 23, loop depth 0
;;    pred:       8
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 35, loop depth 2
;;    pred:       9
;;    succ:       9

;;   basic block 9, loop depth 2
;;    pred:       35
;;                11
  # j_176 = PHI <j_126(35), 0(11)>
  # ivtmp_151 = PHI <ivtmp_150(35), 256(11)>
  # vectp.4572_206 = PHI <vectp.4572_201(35), vectp.4573_207(11)>
  # ivtmp_196 = PHI <ivtmp_200(35), 0(11)>
  MEM[(float *)vectp.4572_206] = vect_cst__203;
  j_126 = j_176 + 1;
  ivtmp_150 = ivtmp_151 - 1;
  vectp.4572_201 = vectp.4572_206 + 16;
  ivtmp_200 = ivtmp_196 + 1;
  if (ivtmp_200 < 64)
    goto <bb 35>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       35
;;                10

;;   basic block 10, loop depth 1
;;    pred:       9
  ivtmp_148 = ivtmp_149 - 1;
  if (ivtmp_148 != 0)
    goto <bb 34>; [98.99%]
  else
    goto <bb 22>; [1.01%]
;;    succ:       34
;;                22

;;   basic block 34, loop depth 1
;;    pred:       10
;;    succ:       11

;;   basic block 11, loop depth 1
;;    pred:       23
;;                34
  # i_175 = PHI <0(23), _119(34)>
  # ivtmp_149 = PHI <256(23), ivtmp_148(34)>
  _119 = i_175 + 1;
  _120 = (float) _119;
  _121 = (long unsigned int) i_175;
  _122 = _121 * 1024;
  _123 = &aa + _122;
  _124 = 1.0e+0 / _120;
  vect_cst__203 = {_124, _124, _124, _124};
  _204 = (long unsigned int) i_175;
  _205 = _204 * 1024;
  vectp.4573_207 = &aa + _205;
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 33, loop depth 2
;;    pred:       12
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       33
;;                14
  # j_174 = PHI <j_108(33), 0(14)>
  # ivtmp_155 = PHI <ivtmp_154(33), 256(14)>
  # vectp.4570_211 = PHI <vectp.4570_212(33), vectp.4571_209(14)>
  # ivtmp_208 = PHI <ivtmp_202(33), 0(14)>
  MEM[(float *)vectp.4570_211] = vect_cst__215;
  j_108 = j_174 + 1;
  ivtmp_154 = ivtmp_155 - 1;
  vectp.4570_212 = vectp.4570_211 + 16;
  ivtmp_202 = ivtmp_208 + 1;
  if (ivtmp_202 < 64)
    goto <bb 33>; [96.00%]
  else
    goto <bb 13>; [4.00%]
;;    succ:       33
;;                13

;;   basic block 13, loop depth 1
;;    pred:       12
  ivtmp_152 = ivtmp_153 - 1;
  if (ivtmp_152 != 0)
    goto <bb 32>; [98.99%]
  else
    goto <bb 21>; [1.01%]
;;    succ:       32
;;                21

;;   basic block 32, loop depth 1
;;    pred:       13
  goto <bb 14>; [100.00%]
;;    succ:       14

;;   basic block 21, loop depth 0
;;    pred:       13
  goto <bb 17>; [100.00%]
;;    succ:       17

;;   basic block 22, loop depth 0
;;    pred:       10
;;    succ:       14

;;   basic block 14, loop depth 1
;;    pred:       22
;;                32
  # i_173 = PHI <0(22), _101(32)>
  # ivtmp_153 = PHI <256(22), ivtmp_152(32)>
  _101 = i_173 + 1;
  _102 = (float) _101;
  _103 = (long unsigned int) i_173;
  _104 = _103 * 1024;
  _105 = &bb + _104;
  _106 = 1.0e+0 / _102;
  vect_cst__215 = {_106, _106, _106, _106};
  _210 = (long unsigned int) i_173;
  _214 = _210 * 1024;
  vectp.4571_209 = &bb + _214;
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 31, loop depth 2
;;    pred:       15
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       31
;;                17
  # j_172 = PHI <j_90(31), 0(17)>
  # ivtmp_194 = PHI <ivtmp_189(31), 256(17)>
  # vectp.4568_25 = PHI <vectp.4568_24(31), vectp.4569_41(17)>
  # ivtmp_217 = PHI <ivtmp_218(31), 0(17)>
  MEM[(float *)vectp.4568_25] = vect_cst__47;
  j_90 = j_172 + 1;
  ivtmp_189 = ivtmp_194 - 1;
  vectp.4568_24 = vectp.4568_25 + 16;
  ivtmp_218 = ivtmp_217 + 1;
  if (ivtmp_218 < 64)
    goto <bb 31>; [96.00%]
  else
    goto <bb 16>; [4.00%]
;;    succ:       31
;;                16

;;   basic block 16, loop depth 1
;;    pred:       15
  ivtmp_156 = ivtmp_184 - 1;
  if (ivtmp_156 != 0)
    goto <bb 30>; [98.99%]
  else
    goto <bb 42>; [1.01%]
;;    succ:       30
;;                42

;;   basic block 30, loop depth 1
;;    pred:       16
;;    succ:       17

;;   basic block 17, loop depth 1
;;    pred:       21
;;                30
  # i_171 = PHI <0(21), _83(30)>
  # ivtmp_184 = PHI <256(21), ivtmp_156(30)>
  _83 = i_171 + 1;
  _84 = (float) _83;
  _85 = (long unsigned int) i_171;
  _86 = _85 * 1024;
  _87 = &cc + _86;
  _88 = 1.0e+0 / _84;
  vect_cst__47 = {_88, _88, _88, _88};
  _39 = (long unsigned int) i_171;
  _26 = _39 * 1024;
  vectp.4569_41 = &cc + _26;
  goto <bb 15>; [100.00%]
;;    succ:       15

;;   basic block 42, loop depth 0
;;    pred:       16
  vect_cst__100 = { 4, 4, 4, 4 };
  vect_cst__91 = { 1, 1, 1, 1 };
  vect_cst__82 = { 3, 3, 3, 3 };
  vect_cst__74 = { 1, 1, 1, 1 };
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       29
;;                42
  # i_158 = PHI <_21(29), 0(42)>
  # ivtmp_220 = PHI <ivtmp_219(29), 32000(42)>
  # vect_vec_iv_.4562_97 = PHI <vect_vec_iv_.4562_92(29), { 0, 1, 2, 3 }(42)>
  # vectp_indx.4566_72 = PHI <vectp_indx.4566_67(29), &indx(42)>
  # ivtmp_57 = PHI <ivtmp_52(29), 0(42)>
  vect_vec_iv_.4562_92 = vect_vec_iv_.4562_97 + vect_cst__100;
  vect__21.4563_89 = vect_vec_iv_.4562_97 + vect_cst__91;
  _21 = i_158 + 1;
  vect__22.4564_75 = vect__21.4563_89 & vect_cst__82;
  _22 = _21 & 3;
  vect__23.4565_73 = vect__22.4564_75 + vect_cst__74;
  _23 = _22 + 1;
  MEM[(int *)vectp_indx.4566_72] = vect__23.4565_73;
  ivtmp_219 = ivtmp_220 - 1;
  vectp_indx.4566_67 = vectp_indx.4566_72 + 16;
  ivtmp_52 = ivtmp_57 + 1;
  if (ivtmp_52 < 8000)
    goto <bb 29>; [96.00%]
  else
    goto <bb 19>; [4.00%]
;;    succ:       29
;;                19

;;   basic block 29, loop depth 1
;;    pred:       18
  goto <bb 18>; [100.00%]
;;    succ:       18

;;   basic block 19, loop depth 0
;;    pred:       18
  *s1_43(D) = 1.0e+0;
  *s2_45(D) = 2.0e+0;
  return;
;;    succ:       EXIT

}


