
;; Function set1d.part.0 (set1d.part.0, funcdef_no=728, decl_uid=13510, cgraph_uid=0, symbol_order=759)

Merging blocks 2 and 6
set1d.part.0 (float * arr)
{
  vector(4) float * vectp_arr.176;
  vector(4) float * vectp_arr.175;
  vector(4) float vect__9.174;
  vector(4) float vect__4.173;
  vector(4) int vect__3.172;
  vector(4) int vect__2.171;
  vector(4) int vect_vec_iv_.170;
  int i;
  int i;
  int i;
  float value;
  int stride;
  int _2;
  int _3;
  float _4;
  long unsigned int _5;
  long unsigned int _6;
  float * _8;
  float _9;
  vector(4) int vect_cst__14;
  vector(4) float vect_cst__18;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  vector(4) int vect_cst__26;
  unsigned int ivtmp_27;
  unsigned int ivtmp_28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  vect_cst__26 = { 4, 4, 4, 4 };
  vect_cst__14 = { 1, 1, 1, 1 };
  vect_cst__18 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       5
;;                2
  # i_16 = PHI <_2(5), 0(2)>
  # ivtmp_28 = PHI <ivtmp_27(5), 32000(2)>
  # vect_vec_iv_.170_25 = PHI <vect_vec_iv_.170_15(5), { 0, 1, 2, 3 }(2)>
  # vectp_arr.175_20 = PHI <vectp_arr.175_24(5), arr_7(D)(2)>
  # ivtmp_22 = PHI <ivtmp_23(5), 0(2)>
  vect_vec_iv_.170_15 = vect_vec_iv_.170_25 + vect_cst__26;
  vect__2.171_13 = vect_vec_iv_.170_25 + vect_cst__14;
  _2 = i_16 + 1;
  vect__3.172_10 = vect__2.171_13 * vect__2.171_13;
  _3 = _2 * _2;
  vect__4.173_1 = (vector(4) float) vect__3.172_10;
  _4 = (float) _3;
  _5 = (long unsigned int) i_16;
  _6 = _5 * 4;
  _8 = arr_7(D) + _6;
  vect__9.174_19 = vect_cst__18 / vect__4.173_1;
  _9 = 1.0e+0 / _4;
  MEM[(float *)vectp_arr.175_20] = vect__9.174_19;
  ivtmp_27 = ivtmp_28 - 1;
  vectp_arr.175_24 = vectp_arr.175_20 + 16;
  ivtmp_23 = ivtmp_22 + 1;
  if (ivtmp_23 < 8000)
    goto <bb 5>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       5
;;                4

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  return;
;;    succ:       EXIT

}



;; Function set2d.part.2 (set2d.part.2, funcdef_no=730, decl_uid=13531, cgraph_uid=2, symbol_order=761)

Merging blocks 5 and 9
set2d.part.2 (float[256] * arr)
{
  vector(4) float * vectp.185;
  vector(4) float * vectp.184;
  int i;
  int j;
  int i;
  int j;
  int i;
  int j;
  float value;
  int stride;
  vector(4) float vect_cst__1;
  int _2;
  int _3;
  float _4;
  long unsigned int _5;
  long unsigned int _6;
  float[256] * _8;
  float _9;
  unsigned int ivtmp_10;
  unsigned int ivtmp_12;
  unsigned int ivtmp_17;
  unsigned int ivtmp_18;
  unsigned int ivtmp_19;
  long unsigned int _20;
  unsigned int ivtmp_21;
  long unsigned int _22;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # j_24 = PHI <j_11(8), 0(5)>
  # ivtmp_21 = PHI <ivtmp_19(8), 256(5)>
  # vectp.184_14 = PHI <vectp.184_27(8), vectp.185_28(5)>
  # ivtmp_17 = PHI <ivtmp_18(8), 0(5)>
  MEM[(float *)vectp.184_14] = vect_cst__1;
  j_11 = j_24 + 1;
  ivtmp_19 = ivtmp_21 - 1;
  vectp.184_27 = vectp.184_14 + 16;
  ivtmp_18 = ivtmp_17 + 1;
  if (ivtmp_18 < 64)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  ivtmp_10 = ivtmp_12 - 1;
  if (ivtmp_10 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # i_23 = PHI <0(2), _2(7)>
  # ivtmp_12 = PHI <256(2), ivtmp_10(7)>
  _2 = i_23 + 1;
  _3 = _2 * _2;
  _4 = (float) _3;
  _5 = (long unsigned int) i_23;
  _6 = _5 * 1024;
  _8 = arr_7(D) + _6;
  _9 = 1.0e+0 / _4;
  vect_cst__1 = {_9, _9, _9, _9};
  _22 = (long unsigned int) i_23;
  _20 = _22 * 1024;
  vectp.185_28 = arr_7(D) + _20;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  return;
;;    succ:       EXIT

}



;; Function set2d.constprop (set2d.constprop.5, funcdef_no=736, decl_uid=14286, cgraph_uid=10, symbol_order=788)

Merging blocks 5 and 9
set2d.constprop (float[256] * arr, float value)
{
  vector(4) float * vectp.202;
  vector(4) float * vectp.201;
  int i;
  int j;
  int i;
  int i;
  int j;
  int stride;
  unsigned int ivtmp_1;
  unsigned int ivtmp_7;
  unsigned int ivtmp_8;
  long unsigned int _11;
  unsigned int ivtmp_12;
  long unsigned int _13;
  long unsigned int _14;
  float[256] * _15;
  vector(4) float vect_cst__17;
  unsigned int ivtmp_21;
  long unsigned int _24;
  unsigned int ivtmp_25;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # j_3 = PHI <j_18(8), 0(5)>
  # ivtmp_12 = PHI <ivtmp_1(8), 256(5)>
  # vectp.201_23 = PHI <vectp.201_20(8), vectp.202_9(5)>
  # ivtmp_7 = PHI <ivtmp_8(8), 0(5)>
  MEM[(float *)vectp.201_23] = vect_cst__17;
  j_18 = j_3 + 1;
  ivtmp_1 = ivtmp_12 - 1;
  vectp.201_20 = vectp.201_23 + 16;
  ivtmp_8 = ivtmp_7 + 1;
  if (ivtmp_8 < 64)
    goto <bb 8>; [83.33%]
  else
    goto <bb 4>; [16.67%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_19 = i_2 + 1;
  ivtmp_21 = ivtmp_25 - 1;
  if (ivtmp_21 != 0)
    goto <bb 7>; [98.98%]
  else
    goto <bb 6>; [1.02%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # i_2 = PHI <0(2), i_19(7)>
  # ivtmp_25 = PHI <256(2), ivtmp_21(7)>
  _13 = (long unsigned int) i_2;
  _14 = _13 * 1024;
  _15 = arr_6(D) + _14;
  vect_cst__17 = {value_16(D), value_16(D), value_16(D), value_16(D)};
  _11 = (long unsigned int) i_2;
  _24 = _11 * 1024;
  vectp.202_9 = arr_6(D) + _24;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  return 0;
;;    succ:       EXIT

}



;; Function set2d.constprop (set2d.constprop.7, funcdef_no=734, decl_uid=14288, cgraph_uid=566, symbol_order=791)

Merging blocks 5 and 9
set2d.constprop (float[256] * arr)
{
  vector(4) float * vectp.219;
  vector(4) float * vectp.218;
  int i;
  int j;
  int i;
  int i;
  int j;
  float value;
  int stride;
  unsigned int ivtmp_1;
  int _2;
  float _3;
  long unsigned int _4;
  long unsigned int _5;
  float[256] * _7;
  float _8;
  unsigned int ivtmp_9;
  unsigned int ivtmp_11;
  unsigned int ivtmp_12;
  long unsigned int _16;
  unsigned int ivtmp_17;
  long unsigned int _21;
  vector(4) float vect_cst__22;
  unsigned int ivtmp_23;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # j_14 = PHI <j_10(8), 0(5)>
  # ivtmp_12 = PHI <ivtmp_11(8), 256(5)>
  # vectp.218_18 = PHI <vectp.218_20(8), vectp.219_24(5)>
  # ivtmp_23 = PHI <ivtmp_17(8), 0(5)>
  MEM[(float *)vectp.218_18] = vect_cst__22;
  j_10 = j_14 + 1;
  ivtmp_11 = ivtmp_12 - 1;
  vectp.218_20 = vectp.218_18 + 16;
  ivtmp_17 = ivtmp_23 + 1;
  if (ivtmp_17 < 64)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  ivtmp_1 = ivtmp_9 - 1;
  if (ivtmp_1 != 0)
    goto <bb 7>; [98.97%]
  else
    goto <bb 6>; [1.03%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # i_13 = PHI <0(2), _2(7)>
  # ivtmp_9 = PHI <256(2), ivtmp_1(7)>
  _2 = i_13 + 1;
  _3 = (float) _2;
  _4 = (long unsigned int) i_13;
  _5 = _4 * 1024;
  _7 = arr_6(D) + _5;
  _8 = 1.0e+0 / _3;
  vect_cst__22 = {_8, _8, _8, _8};
  _21 = (long unsigned int) i_13;
  _16 = _21 * 1024;
  vectp.219_24 = arr_6(D) + _16;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  return 0;
;;    succ:       EXIT

}



;; Function set1d.constprop (set1d.constprop.9, funcdef_no=732, decl_uid=14290, cgraph_uid=9, symbol_order=793)

Merging blocks 2 and 6
set1d.constprop (float * arr, float value)
{
  vector(4) float * vectp_arr.236;
  vector(4) float * vectp_arr.235;
  int i;
  int i;
  int i;
  int stride;
  vector(4) float vect_cst__4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_9;
  long unsigned int _10;
  long unsigned int _11;
  float * _12;
  unsigned int ivtmp_15;
  unsigned int ivtmp_16;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  vect_cst__4 = {value_13(D), value_13(D), value_13(D), value_13(D)};
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       5
;;                2
  # i_2 = PHI <i_14(5), 0(2)>
  # ivtmp_16 = PHI <ivtmp_9(5), 32000(2)>
  # vectp_arr.235_1 = PHI <vectp_arr.235_18(5), arr_6(D)(2)>
  # ivtmp_15 = PHI <ivtmp_5(5), 0(2)>
  _10 = (long unsigned int) i_2;
  _11 = _10 * 4;
  _12 = arr_6(D) + _11;
  MEM[(float *)vectp_arr.235_1] = vect_cst__4;
  i_14 = i_2 + 1;
  ivtmp_9 = ivtmp_16 - 1;
  vectp_arr.235_18 = vectp_arr.235_1 + 16;
  ivtmp_5 = ivtmp_15 + 1;
  if (ivtmp_5 < 8000)
    goto <bb 5>; [80.00%]
  else
    goto <bb 4>; [20.00%]
;;    succ:       5
;;                4

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  return 0;
;;    succ:       EXIT

}



;; Function set1d (set1d, funcdef_no=562, decl_uid=7437, cgraph_uid=562, symbol_order=583)

Removing basic block 8
Removing basic block 9
set1d (float * arr, float value, int stride)
{
  vector(4) float * vectp_arr.255;
  vector(4) float * vectp_arr.254;
  vector(4) float vect__32.253;
  vector(4) float vect__28.252;
  vector(4) int vect__27.251;
  vector(4) int vect__26.250;
  vector(4) int vect_vec_iv_.249;
  vector(4) float * vectp_arr.248;
  vector(4) float * vectp_arr.247;
  vector(4) float vect__6.246;
  vector(4) float vect__2.245;
  vector(4) int vect__1.244;
  vector(4) int vect_vec_iv_.243;
  int i;
  int i;
  int i;
  int i;
  int _1;
  float _2;
  long unsigned int _3;
  long unsigned int _4;
  float * _5;
  float _6;
  unsigned int ivtmp_7;
  long unsigned int _8;
  long unsigned int _9;
  float * _10;
  vector(4) int vect_cst__13;
  unsigned int ivtmp_25;
  int _26;
  int _27;
  float _28;
  long unsigned int _29;
  long unsigned int _30;
  float * _31;
  float _32;
  unsigned int ivtmp_33;
  unsigned int ivtmp_36;
  vector(4) float vect_cst__41;
  vector(4) int vect_cst__50;
  unsigned int ivtmp_54;
  vector(4) int vect_cst__57;
  vector(4) int vect_cst__59;
  vector(4) float vect_cst__62;
  unsigned int ivtmp_66;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (stride_17(D) == -1)
    goto <bb 17>; [34.00%]
  else
    goto <bb 4>; [66.00%]
;;    succ:       17
;;                4

;;   basic block 17, loop depth 0
;;    pred:       2
  vect_cst__57 = { 4, 4, 4, 4 };
  vect_cst__50 = { 1, 1, 1, 1 };
  vect_cst__41 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       11
;;                17
  # i_43 = PHI <_1(11), 0(17)>
  # ivtmp_7 = PHI <ivtmp_68(11), 32000(17)>
  # vect_vec_iv_.243_56 = PHI <vect_vec_iv_.243_51(11), { 0, 1, 2, 3 }(17)>
  # vectp_arr.247_39 = PHI <vectp_arr.247_38(11), arr_19(D)(17)>
  # ivtmp_33 = PHI <ivtmp_25(11), 0(17)>
  vect_vec_iv_.243_51 = vect_vec_iv_.243_56 + vect_cst__57;
  vect__1.244_49 = vect_vec_iv_.243_56 + vect_cst__50;
  _1 = i_43 + 1;
  vect__2.245_42 = (vector(4) float) vect__1.244_49;
  _2 = (float) _1;
  _3 = (long unsigned int) i_43;
  _4 = _3 * 4;
  _5 = arr_19(D) + _4;
  vect__6.246_40 = vect_cst__41 / vect__2.245_42;
  _6 = 1.0e+0 / _2;
  MEM[(float *)vectp_arr.247_39] = vect__6.246_40;
  ivtmp_68 = ivtmp_7 - 1;
  vectp_arr.247_38 = vectp_arr.247_39 + 16;
  ivtmp_25 = ivtmp_33 + 1;
  if (ivtmp_25 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 16>; [4.00%]
;;    succ:       11
;;                16

;;   basic block 11, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       2
  if (stride_17(D) == -2)
    goto <bb 19>; [34.00%]
  else
    goto <bb 10>; [66.00%]
;;    succ:       19
;;                10

;;   basic block 19, loop depth 0
;;    pred:       4
  vect_cst__13 = { 4, 4, 4, 4 };
  vect_cst__59 = { 1, 1, 1, 1 };
  vect_cst__62 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       12
;;                19
  # i_47 = PHI <_26(12), 0(19)>
  # ivtmp_67 = PHI <ivtmp_66(12), 32000(19)>
  # vect_vec_iv_.249_11 = PHI <vect_vec_iv_.249_58(12), { 0, 1, 2, 3 }(19)>
  # vectp_arr.254_55 = PHI <vectp_arr.254_52(12), arr_19(D)(19)>
  # ivtmp_54 = PHI <ivtmp_36(12), 0(19)>
  vect_vec_iv_.249_58 = vect_vec_iv_.249_11 + vect_cst__13;
  vect__26.250_60 = vect_vec_iv_.249_11 + vect_cst__59;
  _26 = i_47 + 1;
  vect__27.251_64 = vect__26.250_60 * vect__26.250_60;
  _27 = _26 * _26;
  vect__28.252_61 = (vector(4) float) vect__27.251_64;
  _28 = (float) _27;
  _29 = (long unsigned int) i_47;
  _30 = _29 * 4;
  _31 = arr_19(D) + _30;
  vect__32.253_63 = vect_cst__62 / vect__28.252_61;
  _32 = 1.0e+0 / _28;
  MEM[(float *)vectp_arr.254_55] = vect__32.253_63;
  ivtmp_66 = ivtmp_67 - 1;
  vectp_arr.254_52 = vectp_arr.254_55 + 16;
  ivtmp_36 = ivtmp_54 + 1;
  if (ivtmp_36 < 8000)
    goto <bb 12>; [96.00%]
  else
    goto <bb 18>; [4.00%]
;;    succ:       12
;;                18

;;   basic block 18, loop depth 0
;;    pred:       5
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 12, loop depth 1
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 10, loop depth 0
;;    pred:       4
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       10
;;                13
  # i_44 = PHI <0(10), i_24(13)>
  _8 = (long unsigned int) i_44;
  _9 = _8 * 4;
  _10 = arr_19(D) + _9;
  *_10 = value_22(D);
  i_24 = stride_17(D) + i_44;
  if (i_24 <= 31999)
    goto <bb 13>; [87.64%]
  else
    goto <bb 7>; [12.36%]
;;    succ:       13
;;                7

;;   basic block 13, loop depth 1
;;    pred:       6
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 16, loop depth 0
;;    pred:       3
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       16
;;                6
;;                18
  return 0;
;;    succ:       EXIT

}



;; Function init.part.3 (init.part.3, funcdef_no=731, decl_uid=13562, cgraph_uid=5, symbol_order=765)

Merging blocks 12 and 455
Merging blocks 18 and 456
Merging blocks 39 and 457
Removing basic block 301
Removing basic block 302
Removing basic block 303
Removing basic block 304
Removing basic block 305
Removing basic block 306
Removing basic block 307
Removing basic block 309
init.part.3 (char * name)
{
  vector(4) float * vectp_array.330;
  vector(4) float * vectp_array.329;
  vector(4) float * vectp_array.328;
  vector(4) float * vectp_array.327;
  vector(4) float vect__806.326;
  vector(4) float vect__802.325;
  vector(4) int vect__801.324;
  vector(4) int vect_vec_iv_.323;
  vector(4) float * vectp.322;
  vector(4) float * vectp.321;
  vector(4) float * vectp_b.320;
  vector(4) float * vectp_b.319;
  vector(4) float vect__713.318;
  vector(4) float vect__709.317;
  vector(4) int vect__708.316;
  vector(4) int vect__707.315;
  vector(4) int vect_vec_iv_.314;
  vector(4) float * vectp_a.313;
  vector(4) float * vectp_a.312;
  vector(4) float * vectp_b.311;
  vector(4) float * vectp_b.310;
  vector(4) float vect__692.309;
  vector(4) float vect__688.308;
  vector(4) int vect__687.307;
  vector(4) int vect__686.306;
  vector(4) int vect_vec_iv_.305;
  vector(4) float * vectp_a.304;
  vector(4) float * vectp_a.303;
  vector(4) float * vectp_b.302;
  vector(4) float * vectp_b.301;
  vector(4) float vect__634.300;
  vector(4) float vect__630.299;
  vector(4) int vect__629.298;
  vector(4) int vect__628.297;
  vector(4) int vect_vec_iv_.296;
  vector(4) float * vectp_c.295;
  vector(4) float * vectp_c.294;
  vector(4) float vect__642.293;
  vector(4) float vect__638.292;
  vector(4) int vect__637.291;
  vector(4) int vect__636.290;
  vector(4) int vect_vec_iv_.289;
  vector(4) float * vectp_d.288;
  vector(4) float * vectp_d.287;
  vector(4) float vect__650.286;
  vector(4) float vect__646.285;
  vector(4) int vect__645.284;
  vector(4) int vect__644.283;
  vector(4) int vect_vec_iv_.282;
  vector(4) float * vectp_e.281;
  vector(4) float * vectp_e.280;
  vector(4) float vect__658.279;
  vector(4) float vect__654.278;
  vector(4) int vect__653.277;
  vector(4) int vect__652.276;
  vector(4) int vect_vec_iv_.275;
  int i;
  int D.15013;
  int D.15006;
  int D.14999;
  int D.14992;
  int D.14985;
  int D.14978;
  int D.14971;
  int D.14964;
  int D.14957;
  int i;
  int D.14932;
  int i;
  int D.14924;
  int i;
  int D.14916;
  int D.14908;
  int D.14901;
  int D.14894;
  int D.14887;
  int D.14880;
  int i;
  int D.14873;
  int i;
  int D.14866;
  int i;
  int D.14859;
  int i;
  int D.14840;
  int i;
  int D.14832;
  int i;
  int D.14812;
  int i;
  int D.14804;
  int i;
  int D.14784;
  int i;
  int D.14776;
  int D.14768;
  int D.14761;
  int D.14754;
  int D.14745;
  int D.14736;
  int D.14729;
  int D.14722;
  int D.14715;
  int D.14708;
  int D.14701;
  int i;
  int D.14688;
  int D.14680;
  int D.14671;
  int i;
  int D.14658;
  int i;
  int D.14650;
  int D.14642;
  int D.14635;
  int D.14628;
  int i;
  int j;
  int D.14610;
  int i;
  int D.14595;
  int i;
  int i;
  int D.14582;
  int D.14575;
  int i;
  int i;
  int i;
  int i;
  int i;
  int D.14544;
  int D.14537;
  int D.14530;
  int D.14523;
  int D.14516;
  register int __result;
  int i;
  int i;
  int iftmp.3_2;
  int iftmp.4_3;
  int iftmp.5_4;
  int iftmp.6_5;
  int iftmp.7_6;
  int iftmp.8_7;
  int iftmp.9_8;
  int iftmp.10_9;
  int iftmp.11_10;
  int iftmp.12_11;
  int iftmp.13_12;
  int iftmp.14_13;
  int iftmp.15_14;
  int iftmp.16_15;
  int iftmp.17_16;
  int iftmp.18_17;
  int iftmp.19_18;
  int iftmp.20_19;
  int iftmp.21_20;
  int iftmp.22_21;
  int iftmp.23_22;
  int iftmp.24_23;
  long unsigned int _25;
  long unsigned int _26;
  float * _27;
  vector(4) int vect_cst__29;
  long unsigned int _30;
  long unsigned int _31;
  float * _32;
  int iftmp.25_34;
  int iftmp.26_35;
  int iftmp.27_36;
  int iftmp.28_37;
  int iftmp.29_38;
  int iftmp.30_39;
  int iftmp.31_40;
  int iftmp.32_41;
  int iftmp.33_42;
  int iftmp.34_43;
  int iftmp.35_44;
  int iftmp.36_45;
  int iftmp.37_46;
  int iftmp.38_47;
  int iftmp.39_48;
  int iftmp.40_49;
  int iftmp.41_50;
  int iftmp.42_51;
  int iftmp.43_52;
  int iftmp.44_53;
  int iftmp.45_54;
  int iftmp.46_55;
  int iftmp.47_56;
  int iftmp.48_57;
  int iftmp.49_58;
  int iftmp.50_59;
  int iftmp.51_60;
  int iftmp.52_61;
  int iftmp.53_62;
  int iftmp.54_63;
  int iftmp.55_64;
  int iftmp.56_65;
  int iftmp.57_66;
  int iftmp.58_67;
  int iftmp.59_68;
  int iftmp.60_69;
  int iftmp.61_70;
  int iftmp.62_71;
  int iftmp.63_72;
  int iftmp.64_73;
  int iftmp.65_74;
  int iftmp.66_75;
  int iftmp.67_76;
  int iftmp.68_77;
  int iftmp.69_78;
  int iftmp.70_79;
  int iftmp.71_80;
  int iftmp.72_81;
  int iftmp.73_82;
  int iftmp.74_83;
  int iftmp.75_84;
  int iftmp.76_85;
  int iftmp.77_86;
  int iftmp.78_87;
  int iftmp.79_88;
  int iftmp.80_89;
  int iftmp.81_90;
  int iftmp.82_91;
  int iftmp.83_92;
  int iftmp.84_93;
  int iftmp.85_94;
  int iftmp.86_95;
  int iftmp.87_96;
  int iftmp.88_97;
  int iftmp.89_98;
  int iftmp.90_99;
  int iftmp.91_100;
  int iftmp.92_101;
  int iftmp.93_102;
  int iftmp.94_103;
  int iftmp.95_104;
  int iftmp.96_105;
  int iftmp.97_106;
  int iftmp.98_107;
  int iftmp.99_108;
  int iftmp.100_109;
  int iftmp.101_110;
  int iftmp.102_111;
  int iftmp.103_112;
  int iftmp.104_113;
  int iftmp.105_114;
  int iftmp.106_115;
  int iftmp.107_116;
  int iftmp.108_117;
  int iftmp.109_118;
  int iftmp.110_119;
  int iftmp.111_120;
  int iftmp.112_121;
  int iftmp.113_122;
  int iftmp.114_123;
  int iftmp.115_124;
  int iftmp.116_125;
  int iftmp.117_126;
  int iftmp.118_127;
  int iftmp.119_128;
  int iftmp.120_129;
  int iftmp.121_130;
  int iftmp.122_131;
  int iftmp.123_132;
  int iftmp.124_133;
  unsigned char _134;
  unsigned int ivtmp_135;
  unsigned int ivtmp_136;
  unsigned char _137;
  unsigned int ivtmp_138;
  unsigned int ivtmp_139;
  unsigned char _140;
  unsigned int ivtmp_141;
  unsigned int ivtmp_142;
  unsigned char _143;
  unsigned int ivtmp_144;
  int iftmp.126_146;
  int iftmp.127_147;
  int iftmp.128_148;
  int iftmp.129_149;
  int iftmp.130_150;
  int iftmp.131_151;
  int iftmp.132_152;
  int iftmp.133_153;
  int iftmp.134_154;
  int iftmp.135_155;
  int iftmp.136_156;
  int iftmp.137_157;
  unsigned int ivtmp_194;
  unsigned int ivtmp_195;
  vector(4) int vect_cst__212;
  unsigned int ivtmp_219;
  long unsigned int _237;
  unsigned int ivtmp_241;
  unsigned int ivtmp_343;
  unsigned int ivtmp_344;
  vector(4) float vect_cst__345;
  vector(4) float vect_cst__452;
  vector(4) float vect_cst__471;
  vector(4) int vect_cst__574;
  unsigned int ivtmp_600;
  unsigned int ivtmp_621;
  long unsigned int _622;
  long unsigned int _623;
  float * _624;
  int _628;
  int _629;
  float _630;
  long unsigned int _631;
  long unsigned int _632;
  float * _633;
  float _634;
  int _636;
  int _637;
  float _638;
  long unsigned int _639;
  long unsigned int _640;
  float * _641;
  float _642;
  int _644;
  int _645;
  float _646;
  long unsigned int _647;
  long unsigned int _648;
  float * _649;
  float _650;
  vector(4) float vect_cst__651;
  int _652;
  int _653;
  float _654;
  long unsigned int _655;
  long unsigned int _656;
  float * _657;
  float _658;
  unsigned int ivtmp_679;
  long unsigned int _680;
  long unsigned int _681;
  float * _682;
  unsigned int ivtmp_685;
  int _686;
  int _687;
  float _688;
  long unsigned int _689;
  long unsigned int _690;
  float * _691;
  float _692;
  int _707;
  int _708;
  float _709;
  long unsigned int _710;
  long unsigned int _711;
  float * _712;
  float _713;
  int _733;
  int _734;
  float _735;
  long unsigned int _736;
  long unsigned int _737;
  float[256] * _738;
  float _739;
  vector(4) float vect_cst__794;
  vector(4) int vect_cst__796;
  int _801;
  float _802;
  long unsigned int _803;
  long unsigned int _804;
  float * _805;
  float _806;
  long unsigned int _860;
  long unsigned int _861;
  float * _862;
  vector(4) int vect_cst__924;
  vector(4) int vect_cst__968;
  unsigned int ivtmp_999;
  unsigned int ivtmp_1012;
  long unsigned int _1021;
  long unsigned int _1022;
  float * _1023;
  long unsigned int _1034;
  long unsigned int _1035;
  float * _1036;
  long unsigned int _1063;
  long unsigned int _1064;
  float * _1065;
  vector(4) float vect_cst__1075;
  long unsigned int _1076;
  long unsigned int _1077;
  float * _1078;
  unsigned int ivtmp_1104;
  long unsigned int _1105;
  long unsigned int _1106;
  float * _1107;
  unsigned int ivtmp_1117;
  long unsigned int _1118;
  long unsigned int _1119;
  float * _1120;
  vector(4) float vect_cst__1229;
  long unsigned int _1251;
  long unsigned int _1252;
  float * _1253;
  long unsigned int _1264;
  long unsigned int _1265;
  float * _1266;
  vector(4) int vect_cst__1276;
  long unsigned int _1277;
  long unsigned int _1278;
  float * _1279;
  vector(4) int vect_cst__1323;
  unsigned int ivtmp_1324;
  unsigned int ivtmp_1325;
  vector(4) float vect_cst__1344;
  vector(4) int vect_cst__1348;
  vector(4) int vect_cst__1354;
  unsigned int ivtmp_1355;
  unsigned int ivtmp_1356;
  vector(4) float vect_cst__1361;
  vector(4) int vect_cst__1365;
  vector(4) int vect_cst__1368;
  unsigned int ivtmp_1369;
  unsigned int ivtmp_1370;
  unsigned int ivtmp_1380;
  unsigned int ivtmp_1381;
  unsigned int ivtmp_1383;
  vector(4) int vect_cst__1392;
  unsigned int ivtmp_1396;
  unsigned int ivtmp_1409;
  unsigned int ivtmp_1422;
  unsigned int ivtmp_1426;
  unsigned int ivtmp_1427;
  unsigned int ivtmp_1428;
  unsigned int ivtmp_1429;
  unsigned int ivtmp_1436;
  unsigned int ivtmp_1437;
  unsigned int ivtmp_1438;
  unsigned int ivtmp_1446;
  unsigned int ivtmp_1448;
  unsigned int ivtmp_1450;
  unsigned int ivtmp_1452;
  vector(4) int vect_cst__1453;
  unsigned int ivtmp_1454;
  unsigned int ivtmp_1456;
  unsigned int ivtmp_1459;
  unsigned int ivtmp_1460;
  unsigned int ivtmp_1464;
  long unsigned int _1465;
  vector(4) float vect_cst__1467;
  unsigned int ivtmp_1468;
  unsigned int ivtmp_1469;
  unsigned int ivtmp_1470;
  unsigned int ivtmp_1472;
  unsigned int ivtmp_1482;
  unsigned int ivtmp_1484;
  vector(4) float vect_cst__1508;
  unsigned int ivtmp_1512;
  unsigned int ivtmp_1514;
  unsigned int ivtmp_1516;
  unsigned int ivtmp_1524;
  unsigned int ivtmp_1534;
  unsigned int ivtmp_1536;
  unsigned int ivtmp_1538;
  unsigned int ivtmp_1540;
  unsigned int ivtmp_1542;
  unsigned int ivtmp_1544;
  unsigned int ivtmp_1546;
  unsigned int ivtmp_1548;
  unsigned int ivtmp_1550;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  iftmp.3_2 = __builtin_strcmp (name_1(D), "s111 ");
  if (iftmp.3_2 == 0)
    goto <bb 450>; [33.00%]
  else
    goto <bb 8>; [67.00%]
;;    succ:       450
;;                8

;;   basic block 450, loop depth 0
;;    pred:       2
  vect_cst__1075 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       322
;;                450
  # i_773 = PHI <i_625(322), 0(450)>
  # ivtmp_1548 = PHI <ivtmp_1546(322), 32000(450)>
  # vectp_a.303_1062 = PHI <vectp_a.303_1033(322), &a(450)>
  # ivtmp_1012 = PHI <ivtmp_999(322), 0(450)>
  _622 = (long unsigned int) i_773;
  _623 = _622 * 4;
  _624 = &a + _623;
  MEM[(float *)vectp_a.303_1062] = vect_cst__1075;
  i_625 = i_773 + 1;
  ivtmp_1546 = ivtmp_1548 - 1;
  vectp_a.303_1033 = vectp_a.303_1062 + 16;
  ivtmp_999 = ivtmp_1012 + 1;
  if (ivtmp_999 < 8000)
    goto <bb 322>; [83.33%]
  else
    goto <bb 449>; [16.67%]
;;    succ:       322
;;                449

;;   basic block 322, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 449, loop depth 0
;;    pred:       3
  vect_cst__1323 = { 4, 4, 4, 4 };
  vect_cst__1276 = { 1, 1, 1, 1 };
  vect_cst__1229 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       321
;;                449
  # i_760 = PHI <_628(321), 0(449)>
  # ivtmp_144 = PHI <ivtmp_1550(321), 32000(449)>
  # vect_vec_iv_.296_1318 = PHI <vect_vec_iv_.296_1313(321), { 0, 1, 2, 3 }(449)>
  # vectp_b.301_1203 = PHI <vectp_b.301_1190(321), &b(449)>
  # ivtmp_1117 = PHI <ivtmp_1104(321), 0(449)>
  vect_vec_iv_.296_1313 = vect_vec_iv_.296_1318 + vect_cst__1323;
  vect__628.297_1263 = vect_vec_iv_.296_1318 + vect_cst__1276;
  _628 = i_760 + 1;
  vect__629.298_1250 = vect__628.297_1263 * vect__628.297_1263;
  _629 = _628 * _628;
  vect__630.299_1242 = (vector(4) float) vect__629.298_1250;
  _630 = (float) _629;
  _631 = (long unsigned int) i_760;
  _632 = _631 * 4;
  _633 = &b + _632;
  vect__634.300_1216 = vect_cst__1229 / vect__630.299_1242;
  _634 = 1.0e+0 / _630;
  MEM[(float *)vectp_b.301_1203] = vect__634.300_1216;
  ivtmp_1550 = ivtmp_144 - 1;
  vectp_b.301_1190 = vectp_b.301_1203 + 16;
  ivtmp_1104 = ivtmp_1117 + 1;
  if (ivtmp_1104 < 8000)
    goto <bb 321>; [96.00%]
  else
    goto <bb 448>; [4.00%]
;;    succ:       321
;;                448

;;   basic block 321, loop depth 1
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 448, loop depth 0
;;    pred:       4
  vect_cst__1354 = { 4, 4, 4, 4 };
  vect_cst__1348 = { 1, 1, 1, 1 };
  vect_cst__1344 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       320
;;                448
  # i_731 = PHI <_636(320), 0(448)>
  # ivtmp_141 = PHI <ivtmp_142(320), 32000(448)>
  # vect_vec_iv_.289_1353 = PHI <vect_vec_iv_.289_1352(320), { 0, 1, 2, 3 }(448)>
  # vectp_c.294_1342 = PHI <vectp_c.294_1332(320), &c(448)>
  # ivtmp_1325 = PHI <ivtmp_1324(320), 0(448)>
  vect_vec_iv_.289_1352 = vect_vec_iv_.289_1353 + vect_cst__1354;
  vect__636.290_1347 = vect_vec_iv_.289_1353 + vect_cst__1348;
  _636 = i_731 + 1;
  vect__637.291_1346 = vect__636.290_1347 * vect__636.290_1347;
  _637 = _636 * _636;
  vect__638.292_1345 = (vector(4) float) vect__637.291_1346;
  _638 = (float) _637;
  _639 = (long unsigned int) i_731;
  _640 = _639 * 4;
  _641 = &c + _640;
  vect__642.293_1343 = vect_cst__1344 / vect__638.292_1345;
  _642 = 1.0e+0 / _638;
  MEM[(float *)vectp_c.294_1342] = vect__642.293_1343;
  ivtmp_142 = ivtmp_141 - 1;
  vectp_c.294_1332 = vectp_c.294_1342 + 16;
  ivtmp_1324 = ivtmp_1325 + 1;
  if (ivtmp_1324 < 8000)
    goto <bb 320>; [96.00%]
  else
    goto <bb 447>; [4.00%]
;;    succ:       320
;;                447

;;   basic block 320, loop depth 1
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 447, loop depth 0
;;    pred:       5
  vect_cst__1368 = { 4, 4, 4, 4 };
  vect_cst__1365 = { 1, 1, 1, 1 };
  vect_cst__1361 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       319
;;                447
  # i_705 = PHI <_644(319), 0(447)>
  # ivtmp_138 = PHI <ivtmp_139(319), 32000(447)>
  # vect_vec_iv_.282_1367 = PHI <vect_vec_iv_.282_1366(319), { 0, 1, 2, 3 }(447)>
  # vectp_d.287_1359 = PHI <vectp_d.287_1358(319), &d(447)>
  # ivtmp_1356 = PHI <ivtmp_1355(319), 0(447)>
  vect_vec_iv_.282_1366 = vect_vec_iv_.282_1367 + vect_cst__1368;
  vect__644.283_1364 = vect_vec_iv_.282_1367 + vect_cst__1365;
  _644 = i_705 + 1;
  vect__645.284_1363 = vect__644.283_1364 * vect__644.283_1364;
  _645 = _644 * _644;
  vect__646.285_1362 = (vector(4) float) vect__645.284_1363;
  _646 = (float) _645;
  _647 = (long unsigned int) i_705;
  _648 = _647 * 4;
  _649 = &d + _648;
  vect__650.286_1360 = vect_cst__1361 / vect__646.285_1362;
  _650 = 1.0e+0 / _646;
  MEM[(float *)vectp_d.287_1359] = vect__650.286_1360;
  ivtmp_139 = ivtmp_138 - 1;
  vectp_d.287_1358 = vectp_d.287_1359 + 16;
  ivtmp_1355 = ivtmp_1356 + 1;
  if (ivtmp_1355 < 8000)
    goto <bb 319>; [96.00%]
  else
    goto <bb 446>; [4.00%]
;;    succ:       319
;;                446

;;   basic block 319, loop depth 1
;;    pred:       6
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 446, loop depth 0
;;    pred:       6
  vect_cst__1392 = { 4, 4, 4, 4 };
  vect_cst__796 = { 1, 1, 1, 1 };
  vect_cst__1508 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       318
;;                446
  # i_851 = PHI <_652(318), 0(446)>
  # ivtmp_135 = PHI <ivtmp_136(318), 32000(446)>
  # vect_vec_iv_.275_1420 = PHI <vect_vec_iv_.275_795(318), { 0, 1, 2, 3 }(446)>
  # vectp_e.280_1376 = PHI <vectp_e.280_1375(318), &e(446)>
  # ivtmp_1370 = PHI <ivtmp_1369(318), 0(446)>
  vect_vec_iv_.275_795 = vect_vec_iv_.275_1420 + vect_cst__1392;
  vect__652.276_797 = vect_vec_iv_.275_1420 + vect_cst__796;
  _652 = i_851 + 1;
  vect__653.277_1535 = vect__652.276_797 * vect__652.276_797;
  _653 = _652 * _652;
  vect__654.278_798 = (vector(4) float) vect__653.277_1535;
  _654 = (float) _653;
  _655 = (long unsigned int) i_851;
  _656 = _655 * 4;
  _657 = &e + _656;
  vect__658.279_1377 = vect_cst__1508 / vect__654.278_798;
  _658 = 1.0e+0 / _654;
  MEM[(float *)vectp_e.280_1376] = vect__658.279_1377;
  ivtmp_136 = ivtmp_135 - 1;
  vectp_e.280_1375 = vectp_e.280_1376 + 16;
  ivtmp_1369 = ivtmp_1370 + 1;
  if (ivtmp_1369 < 8000)
    goto <bb 318>; [96.00%]
  else
    goto <bb 445>; [4.00%]
;;    succ:       318
;;                445

;;   basic block 445, loop depth 0
;;    pred:       7
;;    succ:       342

;;   basic block 342, loop depth 0
;;    pred:       238
;;                298
;;                445
;;                451
;;                17
;;                177
;;                454
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 318, loop depth 1
;;    pred:       7
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 8, loop depth 0
;;    pred:       2
  iftmp.4_3 = __builtin_strcmp (name_1(D), "s112 ");
  if (iftmp.4_3 == 0)
    goto <bb 453>; [33.00%]
  else
    goto <bb 11>; [67.00%]
;;    succ:       453
;;                11

;;   basic block 453, loop depth 0
;;    pred:       8
  vect_cst__651 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       324
;;                453
  # i_671 = PHI <i_683(324), 0(453)>
  # ivtmp_1540 = PHI <ivtmp_1538(324), 32000(453)>
  # vectp_a.312_643 = PHI <vectp_a.312_635(324), &a(453)>
  # ivtmp_621 = PHI <ivtmp_600(324), 0(453)>
  _680 = (long unsigned int) i_671;
  _681 = _680 * 4;
  _682 = &a + _681;
  MEM[(float *)vectp_a.312_643] = vect_cst__651;
  i_683 = i_671 + 1;
  ivtmp_1538 = ivtmp_1540 - 1;
  vectp_a.312_635 = vectp_a.312_643 + 16;
  ivtmp_600 = ivtmp_621 + 1;
  if (ivtmp_600 < 8000)
    goto <bb 324>; [83.33%]
  else
    goto <bb 452>; [16.67%]
;;    succ:       324
;;                452

;;   basic block 324, loop depth 1
;;    pred:       9
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 452, loop depth 0
;;    pred:       9
  vect_cst__968 = { 4, 4, 4, 4 };
  vect_cst__924 = { 1, 1, 1, 1 };
  vect_cst__794 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       323
;;                452
  # i_613 = PHI <_686(323), 0(452)>
  # ivtmp_1544 = PHI <ivtmp_1542(323), 32000(452)>
  # vect_vec_iv_.305_950 = PHI <vect_vec_iv_.305_937(323), { 0, 1, 2, 3 }(452)>
  # vectp_b.310_740 = PHI <vectp_b.310_732(323), &b(452)>
  # ivtmp_685 = PHI <ivtmp_679(323), 0(452)>
  vect_vec_iv_.305_937 = vect_vec_iv_.305_950 + vect_cst__968;
  vect__686.306_911 = vect_vec_iv_.305_950 + vect_cst__924;
  _686 = i_613 + 1;
  vect__687.307_859 = vect__686.306_911 * vect__686.306_911;
  _687 = _686 * _686;
  vect__688.308_800 = (vector(4) float) vect__687.307_859;
  _688 = (float) _687;
  _689 = (long unsigned int) i_613;
  _690 = _689 * 4;
  _691 = &b + _690;
  vect__692.309_742 = vect_cst__794 / vect__688.308_800;
  _692 = 1.0e+0 / _688;
  MEM[(float *)vectp_b.310_740] = vect__692.309_742;
  ivtmp_1542 = ivtmp_1544 - 1;
  vectp_b.310_732 = vectp_b.310_740 + 16;
  ivtmp_679 = ivtmp_685 + 1;
  if (ivtmp_679 < 8000)
    goto <bb 323>; [96.00%]
  else
    goto <bb 451>; [4.00%]
;;    succ:       323
;;                451

;;   basic block 451, loop depth 0
;;    pred:       10
  goto <bb 342>; [100.00%]
;;    succ:       342

;;   basic block 323, loop depth 1
;;    pred:       10
  goto <bb 10>; [100.00%]
;;    succ:       10

;;   basic block 11, loop depth 0
;;    pred:       8
  iftmp.5_4 = __builtin_strcmp (name_1(D), "s113 ");
  if (iftmp.5_4 == 0)
    goto <bb 12>; [33.00%]
  else
    goto <bb 14>; [67.00%]
;;    succ:       12
;;                14

;;   basic block 12, loop depth 0
;;    pred:       11
  set1d.constprop (&a, 1.0e+0);
  vect_cst__574 = { 4, 4, 4, 4 };
  vect_cst__29 = { 1, 1, 1, 1 };
  vect_cst__471 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       13

;;   basic block 13, loop depth 1
;;    pred:       325
;;                12
  # i_1417 = PHI <_707(325), 0(12)>
  # ivtmp_1536 = PHI <ivtmp_1534(325), 32000(12)>
  # vect_vec_iv_.314_159 = PHI <vect_vec_iv_.314_145(325), { 0, 1, 2, 3 }(12)>
  # vectp_b.319_469 = PHI <vectp_b.319_1489(325), &b(12)>
  # ivtmp_1469 = PHI <ivtmp_241(325), 0(12)>
  vect_vec_iv_.314_145 = vect_vec_iv_.314_159 + vect_cst__574;
  vect__707.315_24 = vect_vec_iv_.314_159 + vect_cst__29;
  _707 = i_1417 + 1;
  vect__708.316_545 = vect__707.315_24 * vect__707.315_24;
  _708 = _707 * _707;
  vect__709.317_1513 = (vector(4) float) vect__708.316_545;
  _709 = (float) _708;
  _710 = (long unsigned int) i_1417;
  _711 = _710 * 4;
  _712 = &b + _711;
  vect__713.318_1491 = vect_cst__471 / vect__709.317_1513;
  _713 = 1.0e+0 / _709;
  MEM[(float *)vectp_b.319_469] = vect__713.318_1491;
  ivtmp_1534 = ivtmp_1536 - 1;
  vectp_b.319_1489 = vectp_b.319_469 + 16;
  ivtmp_241 = ivtmp_1469 + 1;
  if (ivtmp_241 < 8000)
    goto <bb 325>; [96.00%]
  else
    goto <bb 454>; [4.00%]
;;    succ:       325
;;                454

;;   basic block 454, loop depth 0
;;    pred:       13
  goto <bb 342>; [100.00%]
;;    succ:       342

;;   basic block 325, loop depth 1
;;    pred:       13
  goto <bb 13>; [100.00%]
;;    succ:       13

;;   basic block 14, loop depth 0
;;    pred:       11
  iftmp.6_5 = __builtin_strcmp (name_1(D), "s114 ");
  if (iftmp.6_5 == 0)
    goto <bb 15>; [33.00%]
  else
    goto <bb 19>; [67.00%]
;;    succ:       15
;;                19

;;   basic block 15, loop depth 0
;;    pred:       14
  set2d.constprop (&aa);
  goto <bb 18>; [100.00%]
;;    succ:       18

;;   basic block 327, loop depth 2
;;    pred:       16
;;    succ:       16

;;   basic block 16, loop depth 2
;;    pred:       327
;;                18
  # j_1419 = PHI <j_741(327), 0(18)>
  # ivtmp_1524 = PHI <ivtmp_1516(327), 256(18)>
  # vectp.321_1463 = PHI <vectp.321_235(327), vectp.322_239(18)>
  # ivtmp_219 = PHI <ivtmp_1459(327), 0(18)>
  MEM[(float *)vectp.321_1463] = vect_cst__1467;
  j_741 = j_1419 + 1;
  ivtmp_1516 = ivtmp_1524 - 1;
  vectp.321_235 = vectp.321_1463 + 16;
  ivtmp_1459 = ivtmp_219 + 1;
  if (ivtmp_1459 < 64)
    goto <bb 327>; [83.33%]
  else
    goto <bb 17>; [16.67%]
;;    succ:       327
;;                17

;;   basic block 17, loop depth 1
;;    pred:       16
  ivtmp_1512 = ivtmp_1514 - 1;
  if (ivtmp_1512 != 0)
    goto <bb 326>; [98.99%]
  else
    goto <bb 342>; [1.01%]
;;    succ:       326
;;                342

;;   basic block 326, loop depth 1
;;    pred:       17
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       15
;;                326
  # i_1418 = PHI <0(15), _733(326)>
  # ivtmp_1514 = PHI <256(15), ivtmp_1512(326)>
  _733 = i_1418 + 1;
  _734 = _733 * _733;
  _735 = (float) _734;
  _736 = (long unsigned int) i_1418;
  _737 = _736 * 1024;
  _738 = &bb + _737;
  _739 = 1.0e+0 / _735;
  vect_cst__1467 = {_739, _739, _739, _739};
  _1465 = (long unsigned int) i_1418;
  _237 = _1465 * 1024;
  vectp.322_239 = &bb + _237;
  goto <bb 16>; [100.00%]
;;    succ:       16

;;   basic block 19, loop depth 0
;;    pred:       14
  iftmp.7_6 = __builtin_strcmp (name_1(D), "s115 ");
  if (iftmp.7_6 == 0)
    goto <bb 20>; [33.00%]
  else
    goto <bb 21>; [67.00%]
;;    succ:       20
;;                21

;;   basic block 20, loop depth 0
;;    pred:       19
  set1d.constprop (&a, 1.0e+0);
  set2d.constprop (&aa, 9.999999974752427078783512115478515625e-7);
  set2d.constprop (&bb, 9.999999974752427078783512115478515625e-7);
  set2d.constprop (&cc, 9.999999974752427078783512115478515625e-7);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 21, loop depth 0
;;    pred:       19
  iftmp.8_7 = __builtin_strcmp (name_1(D), "s116 ");
  if (iftmp.8_7 == 0)
    goto <bb 22>; [33.00%]
  else
    goto <bb 23>; [67.00%]
;;    succ:       22
;;                23

;;   basic block 22, loop depth 0
;;    pred:       21
  set1d.constprop (&a, 1.0e+0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 23, loop depth 0
;;    pred:       21
  iftmp.9_8 = __builtin_strcmp (name_1(D), "s118 ");
  if (iftmp.9_8 == 0)
    goto <bb 24>; [33.00%]
  else
    goto <bb 25>; [67.00%]
;;    succ:       24
;;                25

;;   basic block 24, loop depth 0
;;    pred:       23
  set1d.constprop (&a, 1.0e+0);
  set2d.constprop (&bb, 9.999999974752427078783512115478515625e-7);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 25, loop depth 0
;;    pred:       23
  iftmp.10_9 = __builtin_strcmp (name_1(D), "s119 ");
  if (iftmp.10_9 == 0)
    goto <bb 26>; [33.00%]
  else
    goto <bb 27>; [67.00%]
;;    succ:       26
;;                27

;;   basic block 26, loop depth 0
;;    pred:       25
;;                84
  set2d.constprop (&aa, 1.0e+0);
  set2d.part.2 (&bb);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 27, loop depth 0
;;    pred:       25
  iftmp.11_10 = __builtin_strcmp (name_1(D), "s121 ");
  if (iftmp.11_10 == 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 29>; [67.00%]
;;    succ:       28
;;                29

;;   basic block 28, loop depth 0
;;    pred:       232
;;                27
;;                29
;;                46
;;                53
;;                64
;;                66
;;                68
;;                70
;;                72
;;                230
;;                288
  set1d.constprop (&a, 1.0e+0);
  set1d.part.0 (&b);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 29, loop depth 0
;;    pred:       27
  iftmp.12_11 = __builtin_strcmp (name_1(D), "s122 ");
  if (iftmp.12_11 == 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 31>; [67.00%]
;;    succ:       28
;;                31

;;   basic block 31, loop depth 0
;;    pred:       29
  iftmp.13_12 = __builtin_strcmp (name_1(D), "s123 ");
  if (iftmp.13_12 == 0)
    goto <bb 32>; [33.00%]
  else
    goto <bb 33>; [67.00%]
;;    succ:       32
;;                33

;;   basic block 32, loop depth 0
;;    pred:       126
;;                31
;;                33
;;                216
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 1.0e+0);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 33, loop depth 0
;;    pred:       31
  iftmp.14_13 = __builtin_strcmp (name_1(D), "s124 ");
  if (iftmp.14_13 == 0)
    goto <bb 32>; [33.00%]
  else
    goto <bb 35>; [67.00%]
;;    succ:       32
;;                35

;;   basic block 35, loop depth 0
;;    pred:       33
  iftmp.15_14 = __builtin_strcmp (name_1(D), "s125 ");
  if (iftmp.15_14 == 0)
    goto <bb 308>; [33.00%]
  else
    goto <bb 38>; [67.00%]
;;    succ:       308
;;                38

;;   basic block 308, loop depth 0
;;    pred:       35
  __builtin_memset (&array, 0, 128000);
  set2d.constprop (&aa, 1.0e+0);
  set2d.constprop (&bb, 5.0e-1);
  set2d.constprop (&cc, 2.0e+0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 38, loop depth 0
;;    pred:       35
  iftmp.16_15 = __builtin_strcmp (name_1(D), "s126 ");
  if (iftmp.16_15 == 0)
    goto <bb 39>; [33.00%]
  else
    goto <bb 42>; [67.00%]
;;    succ:       39
;;                42

;;   basic block 39, loop depth 0
;;    pred:       38
  set2d.constprop (&bb, 1.0e+0);
  vect_cst__212 = { 4, 4, 4, 4 };
  vect_cst__1453 = { 1, 1, 1, 1 };
  vect_cst__452 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       40

;;   basic block 40, loop depth 1
;;    pred:       329
;;                39
  # i_1421 = PHI <_801(329), 0(39)>
  # ivtmp_1484 = PHI <ivtmp_1482(329), 32000(39)>
  # vect_vec_iv_.323_1457 = PHI <vect_vec_iv_.323_184(329), { 0, 1, 2, 3 }(39)>
  # vectp_array.327_454 = PHI <vectp_array.327_341(329), &array(39)>
  # ivtmp_343 = PHI <ivtmp_344(329), 0(39)>
  vect_vec_iv_.323_184 = vect_vec_iv_.323_1457 + vect_cst__212;
  vect__801.324_450 = vect_vec_iv_.323_1457 + vect_cst__1453;
  _801 = i_1421 + 1;
  vect__802.325_451 = (vector(4) float) vect__801.324_450;
  _802 = (float) _801;
  _803 = (long unsigned int) i_1421;
  _804 = _803 * 4;
  _805 = &array + _804;
  vect__806.326_453 = vect_cst__452 / vect__802.325_451;
  _806 = 1.0e+0 / _802;
  MEM[(float *)vectp_array.327_454] = vect__806.326_453;
  ivtmp_1482 = ivtmp_1484 - 1;
  vectp_array.327_341 = vectp_array.327_454 + 16;
  ivtmp_344 = ivtmp_343 + 1;
  if (ivtmp_344 < 8000)
    goto <bb 329>; [96.00%]
  else
    goto <bb 41>; [4.00%]
;;    succ:       329
;;                41

;;   basic block 329, loop depth 1
;;    pred:       40
  goto <bb 40>; [100.00%]
;;    succ:       40

;;   basic block 41, loop depth 0
;;    pred:       40
  set2d.constprop (&cc);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 42, loop depth 0
;;    pred:       38
  iftmp.17_16 = __builtin_strcmp (name_1(D), "s127 ");
  if (iftmp.17_16 == 0)
    goto <bb 43>; [33.00%]
  else
    goto <bb 44>; [67.00%]
;;    succ:       43
;;                44

;;   basic block 43, loop depth 0
;;    pred:       98
;;                42
;;                76
;;                102
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 44, loop depth 0
;;    pred:       42
  iftmp.18_17 = __builtin_strcmp (name_1(D), "s128 ");
  if (iftmp.18_17 == 0)
    goto <bb 45>; [33.00%]
  else
    goto <bb 46>; [67.00%]
;;    succ:       45
;;                46

;;   basic block 45, loop depth 0
;;    pred:       44
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 2.0e+0);
  set1d.constprop (&c, 1.0e+0);
  set1d.constprop (&d, 1.0e+0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 46, loop depth 0
;;    pred:       44
  iftmp.19_18 = __builtin_strcmp (name_1(D), "s131 ");
  if (iftmp.19_18 == 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 48>; [67.00%]
;;    succ:       28
;;                48

;;   basic block 48, loop depth 0
;;    pred:       46
  iftmp.20_19 = __builtin_strcmp (name_1(D), "s132 ");
  if (iftmp.20_19 == 0)
    goto <bb 49>; [33.00%]
  else
    goto <bb 50>; [67.00%]
;;    succ:       49
;;                50

;;   basic block 49, loop depth 0
;;    pred:       48
  set2d.constprop (&aa, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 50, loop depth 0
;;    pred:       48
  iftmp.21_20 = __builtin_strcmp (name_1(D), "s141 ");
  if (iftmp.21_20 == 0)
    goto <bb 458>; [33.00%]
  else
    goto <bb 53>; [67.00%]
;;    succ:       458
;;                53

;;   basic block 458, loop depth 0
;;    pred:       50
  vect_cst__345 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       51

;;   basic block 51, loop depth 1
;;    pred:       330
;;                458
  # i_1410 = PHI <i_863(330), 0(458)>
  # ivtmp_1472 = PHI <ivtmp_1470(330), 32000(458)>
  # vectp_array.329_191 = PHI <vectp_array.329_192(330), &array(458)>
  # ivtmp_194 = PHI <ivtmp_195(330), 0(458)>
  _860 = (long unsigned int) i_1410;
  _861 = _860 * 4;
  _862 = &array + _861;
  MEM[(float *)vectp_array.329_191] = vect_cst__345;
  i_863 = i_1410 + 1;
  ivtmp_1470 = ivtmp_1472 - 1;
  vectp_array.329_192 = vectp_array.329_191 + 16;
  ivtmp_195 = ivtmp_194 + 1;
  if (ivtmp_195 < 8000)
    goto <bb 330>; [83.33%]
  else
    goto <bb 52>; [16.67%]
;;    succ:       330
;;                52

;;   basic block 330, loop depth 1
;;    pred:       51
  goto <bb 51>; [100.00%]
;;    succ:       51

;;   basic block 52, loop depth 0
;;    pred:       51
  set2d.part.2 (&bb);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 53, loop depth 0
;;    pred:       50
  iftmp.22_21 = __builtin_strcmp (name_1(D), "s151 ");
  if (iftmp.22_21 == 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 55>; [67.00%]
;;    succ:       28
;;                55

;;   basic block 55, loop depth 0
;;    pred:       53
  iftmp.23_22 = __builtin_strcmp (name_1(D), "s152 ");
  if (iftmp.23_22 == 0)
    goto <bb 56>; [33.00%]
  else
    goto <bb 57>; [67.00%]
;;    succ:       56
;;                57

;;   basic block 56, loop depth 0
;;    pred:       55
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 0.0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 57, loop depth 0
;;    pred:       55
  iftmp.24_23 = __builtin_strcmp (name_1(D), "s161 ");
  if (iftmp.24_23 == 0)
    goto <bb 58>; [33.00%]
  else
    goto <bb 62>; [67.00%]
;;    succ:       58
;;                62

;;   basic block 58, loop depth 0
;;    pred:       57
  set1d.constprop (&a, 1.0e+0);
;;    succ:       59

;;   basic block 59, loop depth 1
;;    pred:       58
;;                332
  # i_898 = PHI <0(58), i_28(332)>
  # ivtmp_1460 = PHI <16000(58), ivtmp_1456(332)>
  _25 = (long unsigned int) i_898;
  _26 = _25 * 4;
  _27 = &b[0] + _26;
  *_27 = 1.0e+0;
  i_28 = i_898 + 2;
  ivtmp_1456 = ivtmp_1460 - 1;
  if (ivtmp_1456 != 0)
    goto <bb 332>; [87.65%]
  else
    goto <bb 310>; [12.35%]
;;    succ:       332
;;                310

;;   basic block 332, loop depth 1
;;    pred:       59
  goto <bb 59>; [100.00%]
;;    succ:       59

;;   basic block 310, loop depth 0
;;    pred:       59
;;    succ:       60

;;   basic block 60, loop depth 1
;;    pred:       310
;;                331
  # i_885 = PHI <0(310), i_33(331)>
  # ivtmp_1468 = PHI <16000(310), ivtmp_1464(331)>
  _30 = (long unsigned int) i_885;
  _31 = _30 * 4;
  _32 = &b[1] + _31;
  *_32 = -1.0e+0;
  i_33 = i_885 + 2;
  ivtmp_1464 = ivtmp_1468 - 1;
  if (ivtmp_1464 != 0)
    goto <bb 331>; [87.64%]
  else
    goto <bb 61>; [12.36%]
;;    succ:       331
;;                61

;;   basic block 331, loop depth 1
;;    pred:       60
  goto <bb 60>; [100.00%]
;;    succ:       60

;;   basic block 61, loop depth 0
;;    pred:       60
  set1d.constprop (&c, 1.0e+0);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 62, loop depth 0
;;    pred:       57
  iftmp.25_34 = __builtin_strcmp (name_1(D), "s162 ");
  if (iftmp.25_34 == 0)
    goto <bb 63>; [33.00%]
  else
    goto <bb 64>; [67.00%]
;;    succ:       63
;;                64

;;   basic block 63, loop depth 0
;;    pred:       269
;;                62
;;                74
;;                120
;;                147
;;                149
;;                212
;;                214
;;                241
;;                253
;;                286
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 64, loop depth 0
;;    pred:       62
  iftmp.26_35 = __builtin_strcmp (name_1(D), "s171 ");
  if (iftmp.26_35 == 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 66>; [67.00%]
;;    succ:       28
;;                66

;;   basic block 66, loop depth 0
;;    pred:       64
  iftmp.27_36 = __builtin_strcmp (name_1(D), "s172 ");
  if (iftmp.27_36 == 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 68>; [67.00%]
;;    succ:       28
;;                68

;;   basic block 68, loop depth 0
;;    pred:       66
  iftmp.28_37 = __builtin_strcmp (name_1(D), "s173 ");
  if (iftmp.28_37 == 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 70>; [67.00%]
;;    succ:       28
;;                70

;;   basic block 70, loop depth 0
;;    pred:       68
  iftmp.29_38 = __builtin_strcmp (name_1(D), "s174 ");
  if (iftmp.29_38 == 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 72>; [67.00%]
;;    succ:       28
;;                72

;;   basic block 72, loop depth 0
;;    pred:       70
  iftmp.30_39 = __builtin_strcmp (name_1(D), "s175 ");
  if (iftmp.30_39 == 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 74>; [67.00%]
;;    succ:       28
;;                74

;;   basic block 74, loop depth 0
;;    pred:       72
  iftmp.31_40 = __builtin_strcmp (name_1(D), "s176 ");
  if (iftmp.31_40 == 0)
    goto <bb 63>; [33.00%]
  else
    goto <bb 76>; [67.00%]
;;    succ:       63
;;                76

;;   basic block 76, loop depth 0
;;    pred:       74
  iftmp.32_41 = __builtin_strcmp (name_1(D), "s211 ");
  if (iftmp.32_41 == 0)
    goto <bb 43>; [33.00%]
  else
    goto <bb 78>; [67.00%]
;;    succ:       43
;;                78

;;   basic block 78, loop depth 0
;;    pred:       76
  iftmp.33_42 = __builtin_strcmp (name_1(D), "s212 ");
  if (iftmp.33_42 == 0)
    goto <bb 79>; [33.00%]
  else
    goto <bb 80>; [67.00%]
;;    succ:       79
;;                80

;;   basic block 79, loop depth 0
;;    pred:       78
  set1d (&a, 0.0, -1);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 1.0e+0);
  set1d (&d, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 80, loop depth 0
;;    pred:       78
  iftmp.34_43 = __builtin_strcmp (name_1(D), "s221 ");
  if (iftmp.34_43 == 0)
    goto <bb 81>; [33.00%]
  else
    goto <bb 82>; [67.00%]
;;    succ:       81
;;                82

;;   basic block 81, loop depth 0
;;    pred:       130
;;                80
;;                251
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 82, loop depth 0
;;    pred:       80
  iftmp.35_44 = __builtin_strcmp (name_1(D), "s222 ");
  if (iftmp.35_44 == 0)
    goto <bb 83>; [33.00%]
  else
    goto <bb 84>; [67.00%]
;;    succ:       83
;;                84

;;   basic block 83, loop depth 0
;;    pred:       104
;;                82
;;                151
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 1.0e+0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 84, loop depth 0
;;    pred:       82
  iftmp.36_45 = __builtin_strcmp (name_1(D), "s231 ");
  if (iftmp.36_45 == 0)
    goto <bb 26>; [33.00%]
  else
    goto <bb 86>; [67.00%]
;;    succ:       26
;;                86

;;   basic block 86, loop depth 0
;;    pred:       84
  iftmp.37_46 = __builtin_strcmp (name_1(D), "s232 ");
  if (iftmp.37_46 == 0)
    goto <bb 87>; [33.00%]
  else
    goto <bb 88>; [67.00%]
;;    succ:       87
;;                88

;;   basic block 87, loop depth 0
;;    pred:       86
  set2d.constprop (&aa, 1.0e+0);
  set2d.constprop (&bb, 0.0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 88, loop depth 0
;;    pred:       86
  iftmp.38_47 = __builtin_strcmp (name_1(D), "s233 ");
  if (iftmp.38_47 == 0)
    goto <bb 89>; [33.00%]
  else
    goto <bb 90>; [67.00%]
;;    succ:       89
;;                90

;;   basic block 89, loop depth 0
;;    pred:       88
  set2d.constprop (&aa);
  set2d.constprop (&bb);
  set2d.constprop (&cc);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 90, loop depth 0
;;    pred:       88
  iftmp.39_48 = __builtin_strcmp (name_1(D), "s234 ");
  if (iftmp.39_48 == 0)
    goto <bb 91>; [33.00%]
  else
    goto <bb 92>; [67.00%]
;;    succ:       91
;;                92

;;   basic block 91, loop depth 0
;;    pred:       159
;;                90
;;                218
  set2d.constprop (&aa, 1.0e+0);
  set2d.constprop (&bb);
  set2d.constprop (&cc);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 92, loop depth 0
;;    pred:       90
  iftmp.40_49 = __builtin_strcmp (name_1(D), "s235 ");
  if (iftmp.40_49 == 0)
    goto <bb 93>; [33.00%]
  else
    goto <bb 94>; [67.00%]
;;    succ:       93
;;                94

;;   basic block 93, loop depth 0
;;    pred:       92
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  set2d.constprop (&aa, 1.0e+0);
  set2d.part.2 (&bb);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 94, loop depth 0
;;    pred:       92
  iftmp.41_50 = __builtin_strcmp (name_1(D), "s241 ");
  if (iftmp.41_50 == 0)
    goto <bb 95>; [33.00%]
  else
    goto <bb 96>; [67.00%]
;;    succ:       95
;;                96

;;   basic block 95, loop depth 0
;;    pred:       94
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 1.0e+0);
  set1d.constprop (&d, 1.0e+0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 96, loop depth 0
;;    pred:       94
  iftmp.42_51 = __builtin_strcmp (name_1(D), "s242 ");
  if (iftmp.42_51 == 0)
    goto <bb 97>; [33.00%]
  else
    goto <bb 98>; [67.00%]
;;    succ:       97
;;                98

;;   basic block 97, loop depth 0
;;    pred:       96
  set1d.constprop (&a, 9.999999974752427078783512115478515625e-7);
  set1d.constprop (&b, 9.999999974752427078783512115478515625e-7);
  set1d.constprop (&c, 9.999999974752427078783512115478515625e-7);
  set1d.constprop (&d, 9.999999974752427078783512115478515625e-7);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 98, loop depth 0
;;    pred:       96
  iftmp.43_52 = __builtin_strcmp (name_1(D), "s243 ");
  if (iftmp.43_52 == 0)
    goto <bb 43>; [33.00%]
  else
    goto <bb 100>; [67.00%]
;;    succ:       43
;;                100

;;   basic block 100, loop depth 0
;;    pred:       98
  iftmp.44_53 = __builtin_strcmp (name_1(D), "s244 ");
  if (iftmp.44_53 == 0)
    goto <bb 101>; [33.00%]
  else
    goto <bb 102>; [67.00%]
;;    succ:       101
;;                102

;;   basic block 101, loop depth 0
;;    pred:       100
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 9.999999974752427078783512115478515625e-7);
  set1d.constprop (&d, 9.999999974752427078783512115478515625e-7);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 102, loop depth 0
;;    pred:       100
  iftmp.45_54 = __builtin_strcmp (name_1(D), "s251 ");
  if (iftmp.45_54 == 0)
    goto <bb 43>; [33.00%]
  else
    goto <bb 104>; [67.00%]
;;    succ:       43
;;                104

;;   basic block 104, loop depth 0
;;    pred:       102
  iftmp.46_55 = __builtin_strcmp (name_1(D), "s252 ");
  if (iftmp.46_55 == 0)
    goto <bb 83>; [33.00%]
  else
    goto <bb 106>; [67.00%]
;;    succ:       83
;;                106

;;   basic block 106, loop depth 0
;;    pred:       104
  iftmp.47_56 = __builtin_strcmp (name_1(D), "s253 ");
  if (iftmp.47_56 == 0)
    goto <bb 107>; [33.00%]
  else
    goto <bb 108>; [67.00%]
;;    succ:       107
;;                108

;;   basic block 107, loop depth 0
;;    pred:       106
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 9.999999974752427078783512115478515625e-7);
  set1d.constprop (&c, 1.0e+0);
  set1d (&d, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 108, loop depth 0
;;    pred:       106
  iftmp.48_57 = __builtin_strcmp (name_1(D), "s254 ");
  if (iftmp.48_57 == 0)
    goto <bb 109>; [33.00%]
  else
    goto <bb 110>; [67.00%]
;;    succ:       109
;;                110

;;   basic block 109, loop depth 0
;;    pred:       153
;;                108
;;                110
;;                155
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 110, loop depth 0
;;    pred:       108
  iftmp.49_58 = __builtin_strcmp (name_1(D), "s255 ");
  if (iftmp.49_58 == 0)
    goto <bb 109>; [33.00%]
  else
    goto <bb 112>; [67.00%]
;;    succ:       109
;;                112

;;   basic block 112, loop depth 0
;;    pred:       110
  iftmp.50_59 = __builtin_strcmp (name_1(D), "s256 ");
  if (iftmp.50_59 == 0)
    goto <bb 113>; [33.00%]
  else
    goto <bb 114>; [67.00%]
;;    succ:       113
;;                114

;;   basic block 113, loop depth 0
;;    pred:       112
;;                114
  set1d.constprop (&a, 1.0e+0);
  set2d.constprop (&aa, 2.0e+0);
  set2d.constprop (&bb, 1.0e+0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 114, loop depth 0
;;    pred:       112
  iftmp.51_60 = __builtin_strcmp (name_1(D), "s257 ");
  if (iftmp.51_60 == 0)
    goto <bb 113>; [33.00%]
  else
    goto <bb 116>; [67.00%]
;;    succ:       113
;;                116

;;   basic block 116, loop depth 0
;;    pred:       114
  iftmp.52_61 = __builtin_strcmp (name_1(D), "s258 ");
  if (iftmp.52_61 == 0)
    goto <bb 117>; [33.00%]
  else
    goto <bb 118>; [67.00%]
;;    succ:       117
;;                118

;;   basic block 117, loop depth 0
;;    pred:       116
  set1d (&a, 0.0, -1);
  set1d.constprop (&b, 0.0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d.constprop (&e, 0.0);
  set2d.constprop (&aa);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 118, loop depth 0
;;    pred:       116
  iftmp.53_62 = __builtin_strcmp (name_1(D), "s261 ");
  if (iftmp.53_62 == 0)
    goto <bb 119>; [33.00%]
  else
    goto <bb 120>; [67.00%]
;;    succ:       119
;;                120

;;   basic block 119, loop depth 0
;;    pred:       118
  set1d.constprop (&a, 1.0e+0);
  set1d.part.0 (&b);
  set1d.part.0 (&c);
  set1d.constprop (&d, 1.0e+0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 120, loop depth 0
;;    pred:       118
  iftmp.54_63 = __builtin_strcmp (name_1(D), "s271 ");
  if (iftmp.54_63 == 0)
    goto <bb 63>; [33.00%]
  else
    goto <bb 122>; [67.00%]
;;    succ:       63
;;                122

;;   basic block 122, loop depth 0
;;    pred:       120
  iftmp.55_64 = __builtin_strcmp (name_1(D), "s272 ");
  if (iftmp.55_64 == 0)
    goto <bb 123>; [33.00%]
  else
    goto <bb 124>; [67.00%]
;;    succ:       123
;;                124

;;   basic block 123, loop depth 0
;;    pred:       122
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d.constprop (&e, 2.0e+0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 124, loop depth 0
;;    pred:       122
  iftmp.56_65 = __builtin_strcmp (name_1(D), "s273 ");
  if (iftmp.56_65 == 0)
    goto <bb 125>; [33.00%]
  else
    goto <bb 126>; [67.00%]
;;    succ:       125
;;                126

;;   basic block 125, loop depth 0
;;    pred:       124
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 1.0e+0);
  set1d.constprop (&d, 9.999999974752427078783512115478515625e-7);
  set1d (&e, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 126, loop depth 0
;;    pred:       124
  iftmp.57_66 = __builtin_strcmp (name_1(D), "s274 ");
  if (iftmp.57_66 == 0)
    goto <bb 32>; [33.00%]
  else
    goto <bb 128>; [67.00%]
;;    succ:       32
;;                128

;;   basic block 128, loop depth 0
;;    pred:       126
  iftmp.58_67 = __builtin_strcmp (name_1(D), "s275 ");
  if (iftmp.58_67 == 0)
    goto <bb 129>; [33.00%]
  else
    goto <bb 130>; [67.00%]
;;    succ:       129
;;                130

;;   basic block 129, loop depth 0
;;    pred:       128
  set2d.constprop (&aa, 1.0e+0);
  set2d.constprop (&bb, 9.999999974752427078783512115478515625e-7);
  set2d.constprop (&cc, 9.999999974752427078783512115478515625e-7);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 130, loop depth 0
;;    pred:       128
  iftmp.59_68 = __builtin_strcmp (name_1(D), "s276 ");
  if (iftmp.59_68 == 0)
    goto <bb 81>; [33.00%]
  else
    goto <bb 132>; [67.00%]
;;    succ:       81
;;                132

;;   basic block 132, loop depth 0
;;    pred:       130
  iftmp.60_69 = __builtin_strcmp (name_1(D), "s277 ");
  if (iftmp.60_69 == 0)
    goto <bb 133>; [33.00%]
  else
    goto <bb 137>; [67.00%]
;;    succ:       133
;;                137

;;   basic block 133, loop depth 0
;;    pred:       132
  set1d.constprop (&a, 1.0e+0);
;;    succ:       134

;;   basic block 134, loop depth 1
;;    pred:       133
;;                334
  # i_1412 = PHI <0(133), i_1037(334)>
  # ivtmp_1450 = PHI <32000(133), ivtmp_1448(334)>
  _1034 = (long unsigned int) i_1412;
  _1035 = _1034 * 4;
  _1036 = &b + _1035;
  *_1036 = 1.0e+0;
  i_1037 = i_1412 + 1;
  ivtmp_1448 = ivtmp_1450 - 1;
  if (ivtmp_1448 != 0)
    goto <bb 334>; [89.00%]
  else
    goto <bb 311>; [11.00%]
;;    succ:       334
;;                311

;;   basic block 334, loop depth 1
;;    pred:       134
  goto <bb 134>; [100.00%]
;;    succ:       134

;;   basic block 311, loop depth 0
;;    pred:       134
;;    succ:       135

;;   basic block 135, loop depth 1
;;    pred:       311
;;                333
  # i_1411 = PHI <0(311), i_1024(333)>
  # ivtmp_1454 = PHI <32000(311), ivtmp_1452(333)>
  _1021 = (long unsigned int) i_1411;
  _1022 = _1021 * 4;
  _1023 = &b[16000] + _1022;
  *_1023 = -1.0e+0;
  i_1024 = i_1411 + 1;
  ivtmp_1452 = ivtmp_1454 - 1;
  if (ivtmp_1452 != 0)
    goto <bb 333>; [89.00%]
  else
    goto <bb 136>; [11.00%]
;;    succ:       333
;;                136

;;   basic block 333, loop depth 1
;;    pred:       135
  goto <bb 135>; [100.00%]
;;    succ:       135

;;   basic block 136, loop depth 0
;;    pred:       135
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 137, loop depth 0
;;    pred:       132
  iftmp.61_70 = __builtin_strcmp (name_1(D), "s278 ");
  if (iftmp.61_70 == 0)
    goto <bb 313>; [33.00%]
  else
    goto <bb 141>; [67.00%]
;;    succ:       313
;;                141

;;   basic block 313, loop depth 0
;;    pred:       137
;;    succ:       138

;;   basic block 138, loop depth 1
;;    pred:       313
;;                336
  # i_1414 = PHI <0(313), i_1079(336)>
  # ivtmp_1437 = PHI <32000(313), ivtmp_1436(336)>
  _1076 = (long unsigned int) i_1414;
  _1077 = _1076 * 4;
  _1078 = &a + _1077;
  *_1078 = -1.0e+0;
  i_1079 = i_1414 + 1;
  ivtmp_1436 = ivtmp_1437 - 1;
  if (ivtmp_1436 != 0)
    goto <bb 336>; [89.00%]
  else
    goto <bb 312>; [11.00%]
;;    succ:       336
;;                312

;;   basic block 336, loop depth 1
;;    pred:       138
  goto <bb 138>; [100.00%]
;;    succ:       138

;;   basic block 312, loop depth 0
;;    pred:       138
;;    succ:       139

;;   basic block 139, loop depth 1
;;    pred:       312
;;                335
  # i_1413 = PHI <0(312), i_1066(335)>
  # ivtmp_1446 = PHI <32000(312), ivtmp_1438(335)>
  _1063 = (long unsigned int) i_1413;
  _1064 = _1063 * 4;
  _1065 = &a[16000] + _1064;
  *_1065 = 1.0e+0;
  i_1066 = i_1413 + 1;
  ivtmp_1438 = ivtmp_1446 - 1;
  if (ivtmp_1438 != 0)
    goto <bb 335>; [89.00%]
  else
    goto <bb 140>; [11.00%]
;;    succ:       335
;;                140

;;   basic block 335, loop depth 1
;;    pred:       139
  goto <bb 139>; [100.00%]
;;    succ:       139

;;   basic block 140, loop depth 0
;;    pred:       139
;;                143
  set1d.constprop (&b, 1.0e+0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 141, loop depth 0
;;    pred:       137
  iftmp.62_71 = __builtin_strcmp (name_1(D), "s279 ");
  if (iftmp.62_71 == 0)
    goto <bb 315>; [33.00%]
  else
    goto <bb 145>; [67.00%]
;;    succ:       315
;;                145

;;   basic block 315, loop depth 0
;;    pred:       141
;;    succ:       142

;;   basic block 142, loop depth 1
;;    pred:       315
;;                338
  # i_1416 = PHI <0(315), i_1121(338)>
  # ivtmp_1427 = PHI <32000(315), ivtmp_1426(338)>
  _1118 = (long unsigned int) i_1416;
  _1119 = _1118 * 4;
  _1120 = &a + _1119;
  *_1120 = -1.0e+0;
  i_1121 = i_1416 + 1;
  ivtmp_1426 = ivtmp_1427 - 1;
  if (ivtmp_1426 != 0)
    goto <bb 338>; [89.00%]
  else
    goto <bb 314>; [11.00%]
;;    succ:       338
;;                314

;;   basic block 338, loop depth 1
;;    pred:       142
  goto <bb 142>; [100.00%]
;;    succ:       142

;;   basic block 314, loop depth 0
;;    pred:       142
;;    succ:       143

;;   basic block 143, loop depth 1
;;    pred:       314
;;                337
  # i_1415 = PHI <0(314), i_1108(337)>
  # ivtmp_1429 = PHI <32000(314), ivtmp_1428(337)>
  _1105 = (long unsigned int) i_1415;
  _1106 = _1105 * 4;
  _1107 = &a[16000] + _1106;
  *_1107 = 1.0e+0;
  i_1108 = i_1415 + 1;
  ivtmp_1428 = ivtmp_1429 - 1;
  if (ivtmp_1428 != 0)
    goto <bb 337>; [89.00%]
  else
    goto <bb 140>; [11.00%]
;;    succ:       337
;;                140

;;   basic block 337, loop depth 1
;;    pred:       143
  goto <bb 143>; [100.00%]
;;    succ:       143

;;   basic block 145, loop depth 0
;;    pred:       141
  iftmp.63_72 = __builtin_strcmp (name_1(D), "s2710");
  if (iftmp.63_72 == 0)
    goto <bb 146>; [33.00%]
  else
    goto <bb 147>; [67.00%]
;;    succ:       146
;;                147

;;   basic block 146, loop depth 0
;;    pred:       145
;;                194
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 147, loop depth 0
;;    pred:       145
  iftmp.64_73 = __builtin_strcmp (name_1(D), "s2711");
  if (iftmp.64_73 == 0)
    goto <bb 63>; [33.00%]
  else
    goto <bb 149>; [67.00%]
;;    succ:       63
;;                149

;;   basic block 149, loop depth 0
;;    pred:       147
  iftmp.65_74 = __builtin_strcmp (name_1(D), "s2712");
  if (iftmp.65_74 == 0)
    goto <bb 63>; [33.00%]
  else
    goto <bb 151>; [67.00%]
;;    succ:       63
;;                151

;;   basic block 151, loop depth 0
;;    pred:       149
  iftmp.66_75 = __builtin_strcmp (name_1(D), "s281 ");
  if (iftmp.66_75 == 0)
    goto <bb 83>; [33.00%]
  else
    goto <bb 153>; [67.00%]
;;    succ:       83
;;                153

;;   basic block 153, loop depth 0
;;    pred:       151
  iftmp.67_76 = __builtin_strcmp (name_1(D), "s291 ");
  if (iftmp.67_76 == 0)
    goto <bb 109>; [33.00%]
  else
    goto <bb 155>; [67.00%]
;;    succ:       109
;;                155

;;   basic block 155, loop depth 0
;;    pred:       153
  iftmp.68_77 = __builtin_strcmp (name_1(D), "s292 ");
  if (iftmp.68_77 == 0)
    goto <bb 109>; [33.00%]
  else
    goto <bb 157>; [67.00%]
;;    succ:       109
;;                157

;;   basic block 157, loop depth 0
;;    pred:       155
  iftmp.69_78 = __builtin_strcmp (name_1(D), "s293 ");
  if (iftmp.69_78 == 0)
    goto <bb 158>; [33.00%]
  else
    goto <bb 159>; [67.00%]
;;    succ:       158
;;                159

;;   basic block 158, loop depth 0
;;    pred:       184
;;                157
;;                165
;;                171
;;                173
;;                175
;;                294
  set1d (&a, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 159, loop depth 0
;;    pred:       157
  iftmp.70_79 = __builtin_strcmp (name_1(D), "s2101");
  if (iftmp.70_79 == 0)
    goto <bb 91>; [33.00%]
  else
    goto <bb 161>; [67.00%]
;;    succ:       91
;;                161

;;   basic block 161, loop depth 0
;;    pred:       159
  iftmp.71_80 = __builtin_strcmp (name_1(D), "s2102");
  if (iftmp.71_80 == 0)
    goto <bb 162>; [33.00%]
  else
    goto <bb 163>; [67.00%]
;;    succ:       162
;;                163

;;   basic block 162, loop depth 0
;;    pred:       161
;;                163
  set2d.constprop (&aa, 0.0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 163, loop depth 0
;;    pred:       161
  iftmp.72_81 = __builtin_strcmp (name_1(D), "s2111");
  if (iftmp.72_81 == 0)
    goto <bb 162>; [33.00%]
  else
    goto <bb 165>; [67.00%]
;;    succ:       162
;;                165

;;   basic block 165, loop depth 0
;;    pred:       163
  iftmp.73_82 = __builtin_strcmp (name_1(D), "s311 ");
  if (iftmp.73_82 == 0)
    goto <bb 158>; [33.00%]
  else
    goto <bb 167>; [67.00%]
;;    succ:       158
;;                167

;;   basic block 167, loop depth 0
;;    pred:       165
  iftmp.74_83 = __builtin_strcmp (name_1(D), "s312 ");
  if (iftmp.74_83 == 0)
    goto <bb 168>; [33.00%]
  else
    goto <bb 169>; [67.00%]
;;    succ:       168
;;                169

;;   basic block 168, loop depth 0
;;    pred:       167
  set1d.constprop (&a, 1.00000095367431640625e+0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 169, loop depth 0
;;    pred:       167
  iftmp.75_84 = __builtin_strcmp (name_1(D), "s313 ");
  if (iftmp.75_84 == 0)
    goto <bb 170>; [33.00%]
  else
    goto <bb 171>; [67.00%]
;;    succ:       170
;;                171

;;   basic block 170, loop depth 0
;;    pred:       263
;;                169
;;                202
;;                208
;;                296
  set1d (&a, 0.0, -1);
  set1d (&b, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 171, loop depth 0
;;    pred:       169
  iftmp.76_85 = __builtin_strcmp (name_1(D), "s314 ");
  if (iftmp.76_85 == 0)
    goto <bb 158>; [33.00%]
  else
    goto <bb 173>; [67.00%]
;;    succ:       158
;;                173

;;   basic block 173, loop depth 0
;;    pred:       171
  iftmp.77_86 = __builtin_strcmp (name_1(D), "s315 ");
  if (iftmp.77_86 == 0)
    goto <bb 158>; [33.00%]
  else
    goto <bb 175>; [67.00%]
;;    succ:       158
;;                175

;;   basic block 175, loop depth 0
;;    pred:       173
  iftmp.78_87 = __builtin_strcmp (name_1(D), "s316 ");
  if (iftmp.78_87 == 0)
    goto <bb 158>; [33.00%]
  else
    goto <bb 177>; [67.00%]
;;    succ:       158
;;                177

;;   basic block 177, loop depth 0
;;    pred:       175
  iftmp.79_88 = __builtin_strcmp (name_1(D), "s317 ");
  if (iftmp.79_88 == 0)
    goto <bb 342>; [50.00%]
  else
    goto <bb 178>; [50.00%]
;;    succ:       342
;;                178

;;   basic block 178, loop depth 0
;;    pred:       177
  iftmp.80_89 = __builtin_strcmp (name_1(D), "s318 ");
  if (iftmp.80_89 == 0)
    goto <bb 179>; [33.00%]
  else
    goto <bb 180>; [67.00%]
;;    succ:       179
;;                180

;;   basic block 179, loop depth 0
;;    pred:       178
;;                188
  set1d (&a, 0.0, -1);
  a[31999] = -2.0e+0;
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 180, loop depth 0
;;    pred:       178
  iftmp.81_90 = __builtin_strcmp (name_1(D), "s319 ");
  if (iftmp.81_90 == 0)
    goto <bb 181>; [33.00%]
  else
    goto <bb 182>; [67.00%]
;;    succ:       181
;;                182

;;   basic block 181, loop depth 0
;;    pred:       180
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 0.0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 182, loop depth 0
;;    pred:       180
  iftmp.82_91 = __builtin_strcmp (name_1(D), "s3110");
  if (iftmp.82_91 == 0)
    goto <bb 183>; [33.00%]
  else
    goto <bb 184>; [67.00%]
;;    succ:       183
;;                184

;;   basic block 183, loop depth 0
;;    pred:       182
  set2d.constprop (&aa);
  aa[255][255] = 2.0e+0;
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 184, loop depth 0
;;    pred:       182
  iftmp.83_92 = __builtin_strcmp (name_1(D), "s3111");
  if (iftmp.83_92 == 0)
    goto <bb 158>; [33.00%]
  else
    goto <bb 186>; [67.00%]
;;    succ:       158
;;                186

;;   basic block 186, loop depth 0
;;    pred:       184
  iftmp.84_93 = __builtin_strcmp (name_1(D), "s3112");
  if (iftmp.84_93 == 0)
    goto <bb 187>; [33.00%]
  else
    goto <bb 188>; [67.00%]
;;    succ:       187
;;                188

;;   basic block 187, loop depth 0
;;    pred:       186
  set1d.part.0 (&a);
  set1d.constprop (&b, 0.0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 188, loop depth 0
;;    pred:       186
  iftmp.85_94 = __builtin_strcmp (name_1(D), "s3113");
  if (iftmp.85_94 == 0)
    goto <bb 179>; [33.00%]
  else
    goto <bb 190>; [67.00%]
;;    succ:       179
;;                190

;;   basic block 190, loop depth 0
;;    pred:       188
  iftmp.86_95 = __builtin_strcmp (name_1(D), "s321 ");
  if (iftmp.86_95 == 0)
    goto <bb 191>; [33.00%]
  else
    goto <bb 192>; [67.00%]
;;    succ:       191
;;                192

;;   basic block 191, loop depth 0
;;    pred:       190
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 0.0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 192, loop depth 0
;;    pred:       190
  iftmp.87_96 = __builtin_strcmp (name_1(D), "s322 ");
  if (iftmp.87_96 == 0)
    goto <bb 193>; [33.00%]
  else
    goto <bb 194>; [67.00%]
;;    succ:       193
;;                194

;;   basic block 193, loop depth 0
;;    pred:       192
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 0.0);
  set1d.constprop (&c, 0.0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 194, loop depth 0
;;    pred:       192
  iftmp.88_97 = __builtin_strcmp (name_1(D), "s323 ");
  if (iftmp.88_97 == 0)
    goto <bb 146>; [33.00%]
  else
    goto <bb 196>; [67.00%]
;;    succ:       146
;;                196

;;   basic block 196, loop depth 0
;;    pred:       194
  iftmp.89_98 = __builtin_strcmp (name_1(D), "s331 ");
  if (iftmp.89_98 == 0)
    goto <bb 197>; [33.00%]
  else
    goto <bb 198>; [67.00%]
;;    succ:       197
;;                198

;;   basic block 197, loop depth 0
;;    pred:       196
  set1d (&a, 0.0, -1);
  a[31999] = -1.0e+0;
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 198, loop depth 0
;;    pred:       196
  iftmp.90_99 = __builtin_strcmp (name_1(D), "s332 ");
  if (iftmp.90_99 == 0)
    goto <bb 199>; [33.00%]
  else
    goto <bb 200>; [67.00%]
;;    succ:       199
;;                200

;;   basic block 199, loop depth 0
;;    pred:       198
  set1d.part.0 (&a);
  a[31999] = 2.0e+0;
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 200, loop depth 0
;;    pred:       198
  iftmp.91_100 = __builtin_strcmp (name_1(D), "s341 ");
  if (iftmp.91_100 == 0)
    goto <bb 201>; [33.00%]
  else
    goto <bb 202>; [67.00%]
;;    succ:       201
;;                202

;;   basic block 201, loop depth 0
;;    pred:       200
  set1d.constprop (&a, 0.0);
  set1d (&b, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 202, loop depth 0
;;    pred:       200
  iftmp.92_101 = __builtin_strcmp (name_1(D), "s342 ");
  if (iftmp.92_101 == 0)
    goto <bb 170>; [33.00%]
  else
    goto <bb 204>; [67.00%]
;;    succ:       170
;;                204

;;   basic block 204, loop depth 0
;;    pred:       202
  iftmp.93_102 = __builtin_strcmp (name_1(D), "s343 ");
  if (iftmp.93_102 == 0)
    goto <bb 205>; [33.00%]
  else
    goto <bb 206>; [67.00%]
;;    succ:       205
;;                206

;;   basic block 205, loop depth 0
;;    pred:       204
  set2d.constprop (&aa);
  set2d.constprop (&bb, 1.0e+0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 206, loop depth 0
;;    pred:       204
  iftmp.94_103 = __builtin_strcmp (name_1(D), "s351 ");
  if (iftmp.94_103 == 0)
    goto <bb 207>; [33.00%]
  else
    goto <bb 208>; [67.00%]
;;    succ:       207
;;                208

;;   basic block 207, loop depth 0
;;    pred:       206
;;                210
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  c[0] = 1.0e+0;
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 208, loop depth 0
;;    pred:       206
  iftmp.95_104 = __builtin_strcmp (name_1(D), "s352 ");
  if (iftmp.95_104 == 0)
    goto <bb 170>; [33.00%]
  else
    goto <bb 210>; [67.00%]
;;    succ:       170
;;                210

;;   basic block 210, loop depth 0
;;    pred:       208
  iftmp.96_105 = __builtin_strcmp (name_1(D), "s353 ");
  if (iftmp.96_105 == 0)
    goto <bb 207>; [33.00%]
  else
    goto <bb 212>; [67.00%]
;;    succ:       207
;;                212

;;   basic block 212, loop depth 0
;;    pred:       210
  iftmp.97_106 = __builtin_strcmp (name_1(D), "s411 ");
  if (iftmp.97_106 == 0)
    goto <bb 63>; [33.00%]
  else
    goto <bb 214>; [67.00%]
;;    succ:       63
;;                214

;;   basic block 214, loop depth 0
;;    pred:       212
  iftmp.98_107 = __builtin_strcmp (name_1(D), "s412 ");
  if (iftmp.98_107 == 0)
    goto <bb 63>; [33.00%]
  else
    goto <bb 216>; [67.00%]
;;    succ:       63
;;                216

;;   basic block 216, loop depth 0
;;    pred:       214
  iftmp.99_108 = __builtin_strcmp (name_1(D), "s413 ");
  if (iftmp.99_108 == 0)
    goto <bb 32>; [33.00%]
  else
    goto <bb 218>; [67.00%]
;;    succ:       32
;;                218

;;   basic block 218, loop depth 0
;;    pred:       216
  iftmp.100_109 = __builtin_strcmp (name_1(D), "s414 ");
  if (iftmp.100_109 == 0)
    goto <bb 91>; [33.00%]
  else
    goto <bb 220>; [67.00%]
;;    succ:       91
;;                220

;;   basic block 220, loop depth 0
;;    pred:       218
  iftmp.101_110 = __builtin_strcmp (name_1(D), "s415 ");
  if (iftmp.101_110 == 0)
    goto <bb 221>; [33.00%]
  else
    goto <bb 222>; [67.00%]
;;    succ:       221
;;                222

;;   basic block 221, loop depth 0
;;    pred:       220
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  a[31999] = -1.0e+0;
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 222, loop depth 0
;;    pred:       220
  iftmp.102_111 = __builtin_strcmp (name_1(D), "s421 ");
  if (iftmp.102_111 == 0)
    goto <bb 223>; [33.00%]
  else
    goto <bb 224>; [67.00%]
;;    succ:       223
;;                224

;;   basic block 223, loop depth 0
;;    pred:       222
  set1d.part.0 (&a);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 224, loop depth 0
;;    pred:       222
  iftmp.103_112 = __builtin_strcmp (name_1(D), "s422 ");
  if (iftmp.103_112 == 0)
    goto <bb 225>; [33.00%]
  else
    goto <bb 226>; [67.00%]
;;    succ:       225
;;                226

;;   basic block 225, loop depth 0
;;    pred:       224
;;                228
  set1d.constprop (&array, 1.0e+0);
  set1d.part.0 (&a);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 226, loop depth 0
;;    pred:       224
  iftmp.104_113 = __builtin_strcmp (name_1(D), "s423 ");
  if (iftmp.104_113 == 0)
    goto <bb 227>; [33.00%]
  else
    goto <bb 228>; [67.00%]
;;    succ:       227
;;                228

;;   basic block 227, loop depth 0
;;    pred:       226
  set1d.constprop (&array, 0.0);
  set1d.part.0 (&a);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 228, loop depth 0
;;    pred:       226
  iftmp.105_114 = __builtin_strcmp (name_1(D), "s424 ");
  if (iftmp.105_114 == 0)
    goto <bb 225>; [33.00%]
  else
    goto <bb 230>; [67.00%]
;;    succ:       225
;;                230

;;   basic block 230, loop depth 0
;;    pred:       228
  iftmp.106_115 = __builtin_strcmp (name_1(D), "s431 ");
  if (iftmp.106_115 == 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 232>; [67.00%]
;;    succ:       28
;;                232

;;   basic block 232, loop depth 0
;;    pred:       230
  iftmp.107_116 = __builtin_strcmp (name_1(D), "s432 ");
  if (iftmp.107_116 == 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 234>; [67.00%]
;;    succ:       28
;;                234

;;   basic block 234, loop depth 0
;;    pred:       232
  iftmp.108_117 = __builtin_strcmp (name_1(D), "s441 ");
  if (iftmp.108_117 == 0)
    goto <bb 235>; [33.00%]
  else
    goto <bb 239>; [67.00%]
;;    succ:       235
;;                239

;;   basic block 235, loop depth 0
;;    pred:       234
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
;;    succ:       236

;;   basic block 236, loop depth 1
;;    pred:       235
;;                341
  # i_1406 = PHI <0(235), i_1280(341)>
  # ivtmp_1381 = PHI <32000(235), ivtmp_1380(341)>
  _1277 = (long unsigned int) i_1406;
  _1278 = _1277 * 4;
  _1279 = &d[0] + _1278;
  *_1279 = -1.0e+0;
  i_1280 = i_1406 + 1;
  ivtmp_1380 = ivtmp_1381 - 1;
  if (ivtmp_1380 != 0)
    goto <bb 341>; [89.00%]
  else
    goto <bb 317>; [11.00%]
;;    succ:       341
;;                317

;;   basic block 341, loop depth 1
;;    pred:       236
  goto <bb 236>; [100.00%]
;;    succ:       236

;;   basic block 317, loop depth 0
;;    pred:       236
;;    succ:       237

;;   basic block 237, loop depth 1
;;    pred:       317
;;                340
  # i_1405 = PHI <0(317), i_1267(340)>
  # ivtmp_1396 = PHI <32000(317), ivtmp_1383(340)>
  _1264 = (long unsigned int) i_1405;
  _1265 = _1264 * 4;
  _1266 = &d[10666] + _1265;
  *_1266 = 0.0;
  i_1267 = i_1405 + 1;
  ivtmp_1383 = ivtmp_1396 - 1;
  if (ivtmp_1383 != 0)
    goto <bb 340>; [89.00%]
  else
    goto <bb 316>; [11.00%]
;;    succ:       340
;;                316

;;   basic block 340, loop depth 1
;;    pred:       237
  goto <bb 237>; [100.00%]
;;    succ:       237

;;   basic block 316, loop depth 0
;;    pred:       237
;;    succ:       238

;;   basic block 238, loop depth 1
;;    pred:       316
;;                339
  # i_1404 = PHI <0(316), i_1254(339)>
  # ivtmp_1422 = PHI <32000(316), ivtmp_1409(339)>
  _1251 = (long unsigned int) i_1404;
  _1252 = _1251 * 4;
  _1253 = &d[21333] + _1252;
  *_1253 = 1.0e+0;
  i_1254 = i_1404 + 1;
  ivtmp_1409 = ivtmp_1422 - 1;
  if (ivtmp_1409 != 0)
    goto <bb 339>; [89.00%]
  else
    goto <bb 342>; [11.00%]
;;    succ:       339
;;                342

;;   basic block 339, loop depth 1
;;    pred:       238
  goto <bb 238>; [100.00%]
;;    succ:       238

;;   basic block 239, loop depth 0
;;    pred:       234
  iftmp.109_118 = __builtin_strcmp (name_1(D), "s442 ");
  if (iftmp.109_118 == 0)
    goto <bb 240>; [33.00%]
  else
    goto <bb 241>; [67.00%]
;;    succ:       240
;;                241

;;   basic block 240, loop depth 0
;;    pred:       239
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 241, loop depth 0
;;    pred:       239
  iftmp.110_119 = __builtin_strcmp (name_1(D), "s443 ");
  if (iftmp.110_119 == 0)
    goto <bb 63>; [33.00%]
  else
    goto <bb 243>; [67.00%]
;;    succ:       63
;;                243

;;   basic block 243, loop depth 0
;;    pred:       241
  iftmp.111_120 = __builtin_strcmp (name_1(D), "s451 ");
  if (iftmp.111_120 == 0)
    goto <bb 244>; [33.00%]
  else
    goto <bb 245>; [67.00%]
;;    succ:       244
;;                245

;;   basic block 244, loop depth 0
;;    pred:       243
  set1d (&b, 0.0, -1);
  set1d (&c, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 245, loop depth 0
;;    pred:       243
  iftmp.112_121 = __builtin_strcmp (name_1(D), "s452 ");
  if (iftmp.112_121 == 0)
    goto <bb 246>; [33.00%]
  else
    goto <bb 247>; [67.00%]
;;    succ:       246
;;                247

;;   basic block 246, loop depth 0
;;    pred:       245
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 9.999999974752427078783512115478515625e-7);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 247, loop depth 0
;;    pred:       245
  iftmp.113_122 = __builtin_strcmp (name_1(D), "s453 ");
  if (iftmp.113_122 == 0)
    goto <bb 248>; [33.00%]
  else
    goto <bb 249>; [67.00%]
;;    succ:       248
;;                249

;;   basic block 248, loop depth 0
;;    pred:       280
;;                247
;;                274
;;                276
;;                278
;;                282
  set1d.constprop (&a, 0.0);
  set1d.part.0 (&b);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 249, loop depth 0
;;    pred:       247
  iftmp.114_123 = __builtin_strcmp (name_1(D), "s471 ");
  if (iftmp.114_123 == 0)
    goto <bb 250>; [33.00%]
  else
    goto <bb 251>; [67.00%]
;;    succ:       250
;;                251

;;   basic block 250, loop depth 0
;;    pred:       249
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, 1.0e+0);
  set1d (&d, 0.0, -1);
  set1d (&e, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 251, loop depth 0
;;    pred:       249
  iftmp.115_124 = __builtin_strcmp (name_1(D), "s481 ");
  if (iftmp.115_124 == 0)
    goto <bb 81>; [33.00%]
  else
    goto <bb 253>; [67.00%]
;;    succ:       81
;;                253

;;   basic block 253, loop depth 0
;;    pred:       251
  iftmp.116_125 = __builtin_strcmp (name_1(D), "s482 ");
  if (iftmp.116_125 == 0)
    goto <bb 63>; [33.00%]
  else
    goto <bb 255>; [67.00%]
;;    succ:       63
;;                255

;;   basic block 255, loop depth 0
;;    pred:       253
  iftmp.117_126 = __builtin_strcmp (name_1(D), "s491 ");
  if (iftmp.117_126 == 0)
    goto <bb 256>; [33.00%]
  else
    goto <bb 257>; [67.00%]
;;    succ:       256
;;                257

;;   basic block 256, loop depth 0
;;    pred:       261
;;                255
;;                267
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d (&c, 0.0, -1);
  set1d (&d, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 257, loop depth 0
;;    pred:       255
  iftmp.118_127 = __builtin_strcmp (name_1(D), "s4112");
  if (iftmp.118_127 == 0)
    goto <bb 258>; [33.00%]
  else
    goto <bb 259>; [67.00%]
;;    succ:       258
;;                259

;;   basic block 258, loop depth 0
;;    pred:       257
  set1d.constprop (&a, 1.0e+0);
  set1d (&b, 0.0, -1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 259, loop depth 0
;;    pred:       257
  iftmp.119_128 = __builtin_strcmp (name_1(D), "s4113");
  if (iftmp.119_128 == 0)
    goto <bb 260>; [33.00%]
  else
    goto <bb 261>; [67.00%]
;;    succ:       260
;;                261

;;   basic block 260, loop depth 0
;;    pred:       259
  set1d.constprop (&a, 0.0);
  set1d.constprop (&b, 1.0e+0);
  set1d.part.0 (&c);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 261, loop depth 0
;;    pred:       259
  iftmp.120_129 = __builtin_strcmp (name_1(D), "s4114");
  if (iftmp.120_129 == 0)
    goto <bb 256>; [33.00%]
  else
    goto <bb 263>; [67.00%]
;;    succ:       256
;;                263

;;   basic block 263, loop depth 0
;;    pred:       261
  iftmp.121_130 = __builtin_strcmp (name_1(D), "s4115");
  if (iftmp.121_130 == 0)
    goto <bb 170>; [33.00%]
  else
    goto <bb 265>; [67.00%]
;;    succ:       170
;;                265

;;   basic block 265, loop depth 0
;;    pred:       263
  iftmp.122_131 = __builtin_strcmp (name_1(D), "s4116");
  if (iftmp.122_131 == 0)
    goto <bb 266>; [33.00%]
  else
    goto <bb 267>; [67.00%]
;;    succ:       266
;;                267

;;   basic block 266, loop depth 0
;;    pred:       265
  set1d (&a, 0.0, -1);
  set2d.constprop (&aa);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 267, loop depth 0
;;    pred:       265
  iftmp.123_132 = __builtin_strcmp (name_1(D), "s4117");
  if (iftmp.123_132 == 0)
    goto <bb 256>; [33.00%]
  else
    goto <bb 269>; [67.00%]
;;    succ:       256
;;                269

;;   basic block 269, loop depth 0
;;    pred:       267
  iftmp.124_133 = __builtin_strcmp (name_1(D), "s4121");
  if (iftmp.124_133 == 0)
    goto <bb 63>; [33.00%]
  else
    goto <bb 271>; [67.00%]
;;    succ:       63
;;                271

;;   basic block 271, loop depth 0
;;    pred:       269
  _134 = MEM[(const unsigned char *)name_1(D)];
  if (_134 == 118)
    goto <bb 272>; [50.00%]
  else
    goto <bb 276>; [50.00%]
;;    succ:       272
;;                276

;;   basic block 272, loop depth 0
;;    pred:       271
  _137 = MEM[(const unsigned char *)name_1(D) + 1B];
  if (_137 == 97)
    goto <bb 273>; [50.00%]
  else
    goto <bb 276>; [50.00%]
;;    succ:       273
;;                276

;;   basic block 273, loop depth 0
;;    pred:       272
  _140 = MEM[(const unsigned char *)name_1(D) + 2B];
  if (_140 == 9)
    goto <bb 274>; [50.00%]
  else
    goto <bb 276>; [50.00%]
;;    succ:       274
;;                276

;;   basic block 274, loop depth 0
;;    pred:       273
  _143 = MEM[(const unsigned char *)name_1(D) + 3B];
  if (_143 == 0)
    goto <bb 248>; [33.00%]
  else
    goto <bb 276>; [67.00%]
;;    succ:       248
;;                276

;;   basic block 276, loop depth 0
;;    pred:       271
;;                273
;;                274
;;                272
  iftmp.126_146 = __builtin_strcmp (name_1(D), "vag  ");
  if (iftmp.126_146 == 0)
    goto <bb 248>; [33.00%]
  else
    goto <bb 278>; [67.00%]
;;    succ:       248
;;                278

;;   basic block 278, loop depth 0
;;    pred:       276
  iftmp.127_147 = __builtin_strcmp (name_1(D), "vas  ");
  if (iftmp.127_147 == 0)
    goto <bb 248>; [33.00%]
  else
    goto <bb 280>; [67.00%]
;;    succ:       248
;;                280

;;   basic block 280, loop depth 0
;;    pred:       278
  iftmp.128_148 = __builtin_strcmp (name_1(D), "vif  ");
  if (iftmp.128_148 == 0)
    goto <bb 248>; [33.00%]
  else
    goto <bb 282>; [67.00%]
;;    succ:       248
;;                282

;;   basic block 282, loop depth 0
;;    pred:       280
  iftmp.129_149 = __builtin_strcmp (name_1(D), "vpv  ");
  if (iftmp.129_149 == 0)
    goto <bb 248>; [33.00%]
  else
    goto <bb 284>; [67.00%]
;;    succ:       248
;;                284

;;   basic block 284, loop depth 0
;;    pred:       282
  iftmp.130_150 = __builtin_strcmp (name_1(D), "vtv  ");
  if (iftmp.130_150 == 0)
    goto <bb 285>; [33.00%]
  else
    goto <bb 286>; [67.00%]
;;    succ:       285
;;                286

;;   basic block 285, loop depth 0
;;    pred:       284
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 1.0e+0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 286, loop depth 0
;;    pred:       284
  iftmp.131_151 = __builtin_strcmp (name_1(D), "vpvtv");
  if (iftmp.131_151 == 0)
    goto <bb 63>; [33.00%]
  else
    goto <bb 288>; [67.00%]
;;    succ:       63
;;                288

;;   basic block 288, loop depth 0
;;    pred:       286
  iftmp.132_152 = __builtin_strcmp (name_1(D), "vpvts");
  if (iftmp.132_152 == 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 290>; [67.00%]
;;    succ:       28
;;                290

;;   basic block 290, loop depth 0
;;    pred:       288
  iftmp.133_153 = __builtin_strcmp (name_1(D), "vpvpv");
  if (iftmp.133_153 == 0)
    goto <bb 291>; [33.00%]
  else
    goto <bb 292>; [67.00%]
;;    succ:       291
;;                292

;;   basic block 291, loop depth 0
;;    pred:       290
  set1d.part.0 (&a);
  set1d.constprop (&b, 1.0e+0);
  set1d.constprop (&c, -1.0e+0);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 292, loop depth 0
;;    pred:       290
  iftmp.134_154 = __builtin_strcmp (name_1(D), "vtvtv");
  if (iftmp.134_154 == 0)
    goto <bb 293>; [33.00%]
  else
    goto <bb 294>; [67.00%]
;;    succ:       293
;;                294

;;   basic block 293, loop depth 0
;;    pred:       292
  set1d.constprop (&a, 1.0e+0);
  set1d.constprop (&b, 2.0e+0);
  set1d.constprop (&c, 5.0e-1);
  goto <bb 300>; [100.00%]
;;    succ:       300

;;   basic block 294, loop depth 0
;;    pred:       292
  iftmp.135_155 = __builtin_strcmp (name_1(D), "vsumr");
  if (iftmp.135_155 == 0)
    goto <bb 158>; [33.00%]
  else
    goto <bb 296>; [67.00%]
;;    succ:       158
;;                296

;;   basic block 296, loop depth 0
;;    pred:       294
  iftmp.136_156 = __builtin_strcmp (name_1(D), "vdotr");
  if (iftmp.136_156 == 0)
    goto <bb 170>; [33.00%]
  else
    goto <bb 298>; [67.00%]
;;    succ:       170
;;                298

;;   basic block 298, loop depth 0
;;    pred:       296
  iftmp.137_157 = __builtin_strcmp (name_1(D), "vbor ");
  if (iftmp.137_157 == 0)
    goto <bb 299>; [33.00%]
  else
    goto <bb 342>; [67.00%]
;;    succ:       299
;;                342

;;   basic block 299, loop depth 0
;;    pred:       298
  set1d (&a, 0.0, -1);
  set1d (&b, 0.0, -1);
  set1d (&c, 1.0e+0, -1);
  set1d (&d, 2.0e+0, -1);
  set1d (&e, 5.0e-1, -1);
  set2d.constprop (&aa);
;;    succ:       300

;;   basic block 300, loop depth 0
;;    pred:       299
;;                342
;;                291
;;                266
;;                20
;;                22
;;                24
;;                26
;;                28
;;                256
;;                32
;;                201
;;                308
;;                41
;;                43
;;                45
;;                193
;;                49
;;                52
;;                191
;;                56
;;                61
;;                63
;;                205
;;                187
;;                260
;;                183
;;                181
;;                221
;;                227
;;                79
;;                81
;;                83
;;                293
;;                87
;;                89
;;                91
;;                93
;;                95
;;                97
;;                225
;;                101
;;                223
;;                170
;;                107
;;                109
;;                258
;;                113
;;                244
;;                117
;;                119
;;                246
;;                123
;;                125
;;                199
;;                129
;;                248
;;                136
;;                140
;;                250
;;                146
;;                197
;;                285
;;                179
;;                240
;;                168
;;                158
;;                207
;;                162
  return;
;;    succ:       EXIT

}



;; Function set1ds (set1ds, funcdef_no=563, decl_uid=7455, cgraph_uid=563, symbol_order=584)

Removing basic block 8
Removing basic block 9
set1ds (int _n, float * arr, float value, int stride)
{
  vector(4) float * vectp_arr.511;
  vector(4) float * vectp_arr.510;
  vector(4) float vect__33.509;
  vector(4) float vect__29.508;
  vector(4) int vect__28.507;
  vector(4) int vect__27.506;
  vector(4) int vect_vec_iv_.505;
  vector(4) float * vectp_arr.504;
  vector(4) float * vectp_arr.503;
  vector(4) float vect__6.502;
  vector(4) float vect__2.501;
  vector(4) int vect__1.500;
  vector(4) int vect_vec_iv_.499;
  int i;
  int i;
  int i;
  int i;
  int _1;
  float _2;
  long unsigned int _3;
  long unsigned int _4;
  float * _5;
  float _6;
  long unsigned int _8;
  long unsigned int _9;
  float * _10;
  vector(4) int vect_cst__13;
  unsigned int ivtmp_22;
  unsigned int ivtmp_26;
  int _27;
  int _28;
  float _29;
  long unsigned int _30;
  long unsigned int _31;
  float * _32;
  float _33;
  unsigned int ivtmp_34;
  unsigned int ivtmp_37;
  vector(4) float vect_cst__42;
  vector(4) int vect_cst__51;
  unsigned int ivtmp_55;
  vector(4) int vect_cst__58;
  vector(4) int vect_cst__60;
  vector(4) float vect_cst__63;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;
  unsigned int ivtmp_69;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (stride_17(D) == -1)
    goto <bb 17>; [34.00%]
  else
    goto <bb 4>; [66.00%]
;;    succ:       17
;;                4

;;   basic block 17, loop depth 0
;;    pred:       2
  vect_cst__58 = { 4, 4, 4, 4 };
  vect_cst__51 = { 1, 1, 1, 1 };
  vect_cst__42 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       11
;;                17
  # i_44 = PHI <_1(11), 0(17)>
  # ivtmp_22 = PHI <ivtmp_69(11), 32000(17)>
  # vect_vec_iv_.499_57 = PHI <vect_vec_iv_.499_52(11), { 0, 1, 2, 3 }(17)>
  # vectp_arr.503_40 = PHI <vectp_arr.503_39(11), arr_19(D)(17)>
  # ivtmp_34 = PHI <ivtmp_26(11), 0(17)>
  vect_vec_iv_.499_52 = vect_vec_iv_.499_57 + vect_cst__58;
  vect__1.500_50 = vect_vec_iv_.499_57 + vect_cst__51;
  _1 = i_44 + 1;
  vect__2.501_43 = (vector(4) float) vect__1.500_50;
  _2 = (float) _1;
  _3 = (long unsigned int) i_44;
  _4 = _3 * 4;
  _5 = arr_19(D) + _4;
  vect__6.502_41 = vect_cst__42 / vect__2.501_43;
  _6 = 1.0e+0 / _2;
  MEM[(float *)vectp_arr.503_40] = vect__6.502_41;
  ivtmp_69 = ivtmp_22 - 1;
  vectp_arr.503_39 = vectp_arr.503_40 + 16;
  ivtmp_26 = ivtmp_34 + 1;
  if (ivtmp_26 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 16>; [4.00%]
;;    succ:       11
;;                16

;;   basic block 11, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       2
  if (stride_17(D) == -2)
    goto <bb 19>; [34.00%]
  else
    goto <bb 10>; [66.00%]
;;    succ:       19
;;                10

;;   basic block 19, loop depth 0
;;    pred:       4
  vect_cst__13 = { 4, 4, 4, 4 };
  vect_cst__60 = { 1, 1, 1, 1 };
  vect_cst__63 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       12
;;                19
  # i_48 = PHI <_27(12), 0(19)>
  # ivtmp_68 = PHI <ivtmp_67(12), 32000(19)>
  # vect_vec_iv_.505_11 = PHI <vect_vec_iv_.505_59(12), { 0, 1, 2, 3 }(19)>
  # vectp_arr.510_56 = PHI <vectp_arr.510_53(12), arr_19(D)(19)>
  # ivtmp_55 = PHI <ivtmp_37(12), 0(19)>
  vect_vec_iv_.505_59 = vect_vec_iv_.505_11 + vect_cst__13;
  vect__27.506_61 = vect_vec_iv_.505_11 + vect_cst__60;
  _27 = i_48 + 1;
  vect__28.507_65 = vect__27.506_61 * vect__27.506_61;
  _28 = _27 * _27;
  vect__29.508_62 = (vector(4) float) vect__28.507_65;
  _29 = (float) _28;
  _30 = (long unsigned int) i_48;
  _31 = _30 * 4;
  _32 = arr_19(D) + _31;
  vect__33.509_64 = vect_cst__63 / vect__29.508_62;
  _33 = 1.0e+0 / _29;
  MEM[(float *)vectp_arr.510_56] = vect__33.509_64;
  ivtmp_67 = ivtmp_68 - 1;
  vectp_arr.510_53 = vectp_arr.510_56 + 16;
  ivtmp_37 = ivtmp_55 + 1;
  if (ivtmp_37 < 8000)
    goto <bb 12>; [96.00%]
  else
    goto <bb 18>; [4.00%]
;;    succ:       12
;;                18

;;   basic block 18, loop depth 0
;;    pred:       5
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 12, loop depth 1
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 10, loop depth 0
;;    pred:       4
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       10
;;                13
  # i_45 = PHI <0(10), i_25(13)>
  _8 = (long unsigned int) i_45;
  _9 = _8 * 4;
  _10 = arr_19(D) + _9;
  *_10 = value_23(D);
  i_25 = stride_17(D) + i_45;
  if (i_25 <= 31999)
    goto <bb 13>; [87.64%]
  else
    goto <bb 7>; [12.36%]
;;    succ:       13
;;                7

;;   basic block 13, loop depth 1
;;    pred:       6
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 16, loop depth 0
;;    pred:       3
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       16
;;                6
;;                18
  return 0;
;;    succ:       EXIT

}



;; Function set2d (set2d, funcdef_no=564, decl_uid=7472, cgraph_uid=564, symbol_order=585)

Merging blocks 5 and 26
Merging blocks 9 and 27
set2d (float[256] * arr, float value, int stride)
{
  vector(4) float * vectp.534;
  vector(4) float * vectp.533;
  vector(4) float * vectp.532;
  vector(4) float * vectp.531;
  int i;
  int j;
  int j;
  int i;
  int i;
  int j;
  int i;
  int _1;
  float _2;
  long unsigned int _3;
  long unsigned int _4;
  float[256] * _5;
  float _6;
  unsigned int ivtmp_7;
  long unsigned int _8;
  long unsigned int _9;
  float[256] * _10;
  long unsigned int _12;
  vector(4) float vect_cst__15;
  long unsigned int _17;
  unsigned int ivtmp_26;
  unsigned int ivtmp_32;
  int _33;
  int _34;
  float _35;
  long unsigned int _36;
  long unsigned int _37;
  float[256] * _38;
  float _39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_42;
  long unsigned int _43;
  unsigned int ivtmp_46;
  unsigned int ivtmp_49;
  unsigned int ivtmp_53;
  vector(4) float vect_cst__54;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  unsigned int ivtmp_59;
  unsigned int ivtmp_61;
  long unsigned int _62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (stride_21(D) == -1)
    goto <bb 14>; [34.00%]
  else
    goto <bb 6>; [66.00%]
;;    succ:       14
;;                6

;;   basic block 14, loop depth 0
;;    pred:       2
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 18, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       18
;;                5
  # j_64 = PHI <j_25(18), 0(5)>
  # ivtmp_7 = PHI <ivtmp_59(18), 256(5)>
  # vectp.531_60 = PHI <vectp.531_51(18), vectp.532_14(5)>
  # ivtmp_58 = PHI <ivtmp_56(18), 0(5)>
  MEM[(float *)vectp.531_60] = vect_cst__15;
  j_25 = j_64 + 1;
  ivtmp_59 = ivtmp_7 - 1;
  vectp.531_51 = vectp.531_60 + 16;
  ivtmp_56 = ivtmp_58 + 1;
  if (ivtmp_56 < 64)
    goto <bb 18>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       18
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  ivtmp_57 = ivtmp_61 - 1;
  if (ivtmp_57 != 0)
    goto <bb 17>; [98.99%]
  else
    goto <bb 13>; [1.01%]
;;    succ:       17
;;                13

;;   basic block 17, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       14
;;                17
  # i_63 = PHI <0(14), _1(17)>
  # ivtmp_61 = PHI <256(14), ivtmp_57(17)>
  _1 = i_63 + 1;
  _2 = (float) _1;
  _3 = (long unsigned int) i_63;
  _4 = _3 * 1024;
  _5 = arr_23(D) + _4;
  _6 = 1.0e+0 / _2;
  vect_cst__15 = {_6, _6, _6, _6};
  _12 = (long unsigned int) i_63;
  _62 = _12 * 1024;
  vectp.532_14 = arr_23(D) + _62;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       2
  if (stride_21(D) == -2)
    goto <bb 15>; [34.00%]
  else
    goto <bb 16>; [66.00%]
;;    succ:       15
;;                16

;;   basic block 16, loop depth 0
;;    pred:       6
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 15, loop depth 0
;;    pred:       6
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 20, loop depth 2
;;    pred:       7
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       20
;;                9
  # j_72 = PHI <j_41(20), 0(9)>
  # ivtmp_55 = PHI <ivtmp_53(20), 256(9)>
  # vectp.533_16 = PHI <vectp.533_50(20), vectp.534_52(9)>
  # ivtmp_46 = PHI <ivtmp_49(20), 0(9)>
  MEM[(float *)vectp.533_16] = vect_cst__54;
  j_41 = j_72 + 1;
  ivtmp_53 = ivtmp_55 - 1;
  vectp.533_50 = vectp.533_16 + 16;
  ivtmp_49 = ivtmp_46 + 1;
  if (ivtmp_49 < 64)
    goto <bb 20>; [96.00%]
  else
    goto <bb 8>; [4.00%]
;;    succ:       20
;;                8

;;   basic block 8, loop depth 1
;;    pred:       7
  ivtmp_40 = ivtmp_42 - 1;
  if (ivtmp_40 != 0)
    goto <bb 19>; [98.99%]
  else
    goto <bb 13>; [1.01%]
;;    succ:       19
;;                13

;;   basic block 19, loop depth 1
;;    pred:       8
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       15
;;                19
  # i_71 = PHI <0(15), _33(19)>
  # ivtmp_42 = PHI <256(15), ivtmp_40(19)>
  _33 = i_71 + 1;
  _34 = _33 * _33;
  _35 = (float) _34;
  _36 = (long unsigned int) i_71;
  _37 = _36 * 1024;
  _38 = arr_23(D) + _37;
  _39 = 1.0e+0 / _35;
  vect_cst__54 = {_39, _39, _39, _39};
  _43 = (long unsigned int) i_71;
  _17 = _43 * 1024;
  vectp.534_52 = arr_23(D) + _17;
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 22, loop depth 2
;;    pred:       10
;;    succ:       10

;;   basic block 10, loop depth 2
;;    pred:       12
;;                22
  # j_66 = PHI <0(12), j_30(22)>
  *_10[j_66] = value_28(D);
  j_30 = stride_21(D) + j_66;
  if (j_30 <= 255)
    goto <bb 22>; [87.64%]
  else
    goto <bb 11>; [12.36%]
;;    succ:       22
;;                11

;;   basic block 11, loop depth 1
;;    pred:       10
  i_31 = i_65 + 1;
  ivtmp_26 = ivtmp_32 - 1;
  if (ivtmp_26 != 0)
    goto <bb 21>; [98.99%]
  else
    goto <bb 13>; [1.01%]
;;    succ:       21
;;                13

;;   basic block 21, loop depth 1
;;    pred:       11
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       16
;;                21
  # i_65 = PHI <0(16), i_31(21)>
  # ivtmp_32 = PHI <256(16), ivtmp_26(21)>
  _8 = (long unsigned int) i_65;
  _9 = _8 * 1024;
  _10 = arr_23(D) + _9;
  goto <bb 10>; [100.00%]
;;    succ:       10

;;   basic block 13, loop depth 0
;;    pred:       4
;;                8
;;                11
  return 0;
;;    succ:       EXIT

}



;; Function sum1d (sum1d, funcdef_no=565, decl_uid=7499, cgraph_uid=565, symbol_order=586)

Merging blocks 2 and 6
sum1d (float * arr)
{
  float vect_ret_10.585;
  float stmp_ret_10.584;
  vector(4) float vect_ret_10.583;
  vector(4) float vect__4.582;
  vector(4) float * vectp_arr.581;
  vector(4) float * vectp_arr.580;
  vector(4) float vect_ret_10.579;
  int i;
  float ret;
  long unsigned int _1;
  long unsigned int _2;
  float * _3;
  float _4;
  unsigned int ivtmp_18;
  unsigned int ivtmp_20;
  unsigned int ivtmp_21;
  unsigned int ivtmp_23;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       5
;;                2
  # ret_15 = PHI <ret_10(5), 0.0(2)>
  # i_16 = PHI <i_11(5), 0(2)>
  # ivtmp_21 = PHI <ivtmp_20(5), 32000(2)>
  # vect_ret_10.579_14 = PHI <vect_ret_10.583_5(5), { 0.0, 0.0, 0.0, 0.0 }(2)>
  # vectp_arr.580_13 = PHI <vectp_arr.580_7(5), arr_8(D)(2)>
  # ivtmp_18 = PHI <ivtmp_23(5), 0(2)>
  _1 = (long unsigned int) i_16;
  _2 = _1 * 4;
  _3 = arr_8(D) + _2;
  vect__4.582_6 = MEM[(float *)vectp_arr.580_13];
  _4 = *_3;
  vect_ret_10.583_5 = vect__4.582_6 + vect_ret_10.579_14;
  ret_10 = _4 + ret_15;
  i_11 = i_16 + 1;
  ivtmp_20 = ivtmp_21 - 1;
  vectp_arr.580_7 = vectp_arr.580_13 + 16;
  ivtmp_23 = ivtmp_18 + 1;
  if (ivtmp_23 < 8000)
    goto <bb 5>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       5
;;                4

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  # ret_22 = PHI <ret_10(3)>
  # vect_ret_10.583_19 = PHI <vect_ret_10.583_5(3)>
  stmp_ret_10.584_12 = REDUC_PLUS (vect_ret_10.583_19);
  vect_ret_10.585_17 = stmp_ret_10.584_12 + 0.0;
  return vect_ret_10.585_17;
;;    succ:       EXIT

}



;; Function check (check, funcdef_no=568, decl_uid=7514, cgraph_uid=568, symbol_order=589)

Merging blocks 2 and 69
Merging blocks 6 and 68
Merging blocks 45 and 67
check (int name)
{
  float vect_sume_85.654;
  float stmp_sume_85.653;
  vector(4) float vect_sume_85.652;
  vector(4) float vect__5.651;
  vector(4) float * vectp_e.650;
  vector(4) float * vectp_e.649;
  float vect_sumd_84.648;
  float stmp_sumd_84.647;
  vector(4) float vect_sumd_84.646;
  vector(4) float vect__4.645;
  vector(4) float * vectp_d.644;
  vector(4) float * vectp_d.643;
  float vect_sumc_83.642;
  float stmp_sumc_83.641;
  vector(4) float vect_sumc_83.640;
  vector(4) float vect__3.639;
  vector(4) float * vectp_c.638;
  vector(4) float * vectp_c.637;
  float vect_sumb_82.636;
  float stmp_sumb_82.635;
  vector(4) float vect_sumb_82.634;
  vector(4) float vect__2.633;
  vector(4) float * vectp_b.632;
  vector(4) float * vectp_b.631;
  float vect_suma_81.630;
  float stmp_suma_81.629;
  vector(4) float vect_suma_81.628;
  vector(4) float vect__1.627;
  vector(4) float * vectp_a.626;
  vector(4) float * vectp_a.625;
  vector(4) float vect_sume_85.624;
  vector(4) float vect_sumd_84.623;
  vector(4) float vect_sumc_83.622;
  vector(4) float vect_sumb_82.621;
  vector(4) float vect_suma_81.620;
  float vect_sumcc_93.619;
  float stmp_sumcc_93.618;
  vector(4) float vect_sumcc_93.617;
  vector(4) float vect__8.616;
  vector(4) float * vectp_cc.615;
  vector(4) float * vectp_cc.614;
  float vect_sumbb_92.613;
  float stmp_sumbb_92.612;
  vector(4) float vect_sumbb_92.611;
  vector(4) float vect__7.610;
  vector(4) float * vectp_bb.609;
  vector(4) float * vectp_bb.608;
  float vect_sumaa_91.607;
  float stmp_sumaa_91.606;
  vector(4) float vect_sumaa_91.605;
  vector(4) float vect__6.604;
  vector(4) float * vectp_aa.603;
  vector(4) float * vectp_aa.602;
  vector(4) float vect_sumcc_93.601;
  vector(4) float vect_sumbb_92.600;
  vector(4) float vect_sumaa_91.599;
  float vect_sumarray_98.598;
  float stmp_sumarray_98.597;
  vector(4) float vect_sumarray_98.596;
  vector(4) float vect__9.595;
  vector(4) float * vectp_array.594;
  vector(4) float * vectp_array.593;
  vector(4) float vect_sumarray_98.592;
  int i;
  int j;
  int i;
  int i;
  float sumarray;
  float sumcc;
  float sumbb;
  float sumaa;
  float sume;
  float sumd;
  float sumc;
  float sumb;
  float suma;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  double _10;
  double _11;
  double _12;
  double _13;
  double _14;
  double _15;
  double _16;
  double _17;
  double _18;
  float _19;
  double _20;
  float _21;
  double _22;
  float _23;
  double _24;
  float _25;
  float _26;
  double _27;
  float _28;
  double _29;
  float _30;
  float _31;
  double _32;
  float _33;
  double _34;
  float temp.0_35;
  double _36;
  float temp.1_37;
  float _38;
  double _39;
  unsigned int ivtmp_124;
  unsigned int ivtmp_130;
  unsigned int ivtmp_131;
  unsigned int ivtmp_136;
  sizetype _140;
  sizetype _141;
  sizetype _150;
  sizetype _151;
  sizetype _160;
  sizetype _161;
  unsigned int ivtmp_166;
  unsigned int ivtmp_167;
  unsigned int ivtmp_176;
  unsigned int ivtmp_177;
  unsigned int ivtmp_178;
  unsigned int ivtmp_179;
  unsigned int ivtmp_180;
  unsigned int ivtmp_181;
  unsigned int ivtmp_182;
  unsigned int ivtmp_183;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       50
;;                2
  # suma_190 = PHI <suma_81(50), 0.0(2)>
  # sumb_191 = PHI <sumb_82(50), 0.0(2)>
  # sumc_192 = PHI <sumc_83(50), 0.0(2)>
  # sumd_193 = PHI <sumd_84(50), 0.0(2)>
  # sume_194 = PHI <sume_85(50), 0.0(2)>
  # i_195 = PHI <i_86(50), 0(2)>
  # ivtmp_177 = PHI <ivtmp_176(50), 32000(2)>
  # vect_suma_81.620_129 = PHI <vect_suma_81.628_119(50), { 0.0, 0.0, 0.0, 0.0 }(2)>
  # vect_sumb_82.621_128 = PHI <vect_sumb_82.634_79(50), { 0.0, 0.0, 0.0, 0.0 }(2)>
  # vect_sumc_83.622_127 = PHI <vect_sumc_83.640_56(50), { 0.0, 0.0, 0.0, 0.0 }(2)>
  # vect_sumd_84.623_126 = PHI <vect_sumd_84.646_49(50), { 0.0, 0.0, 0.0, 0.0 }(2)>
  # vect_sume_85.624_125 = PHI <vect_sume_85.652_42(50), { 0.0, 0.0, 0.0, 0.0 }(2)>
  # vectp_a.625_122 = PHI <vectp_a.625_121(50), &a(2)>
  # vectp_b.631_89 = PHI <vectp_b.631_88(50), &b(2)>
  # vectp_c.637_75 = PHI <vectp_c.637_74(50), &c(2)>
  # vectp_d.643_52 = PHI <vectp_d.643_51(50), &d(2)>
  # vectp_e.649_45 = PHI <vectp_e.649_44(50), &e(2)>
  # ivtmp_136 = PHI <ivtmp_124(50), 0(2)>
  vect__1.627_120 = MEM[(float *)vectp_a.625_122];
  _1 = a[i_195];
  vect_suma_81.628_119 = vect__1.627_120 + vect_suma_81.620_129;
  suma_81 = _1 + suma_190;
  vect__2.633_87 = MEM[(float *)vectp_b.631_89];
  _2 = b[i_195];
  vect_sumb_82.634_79 = vect__2.633_87 + vect_sumb_82.621_128;
  sumb_82 = _2 + sumb_191;
  vect__3.639_57 = MEM[(float *)vectp_c.637_75];
  _3 = c[i_195];
  vect_sumc_83.640_56 = vect__3.639_57 + vect_sumc_83.622_127;
  sumc_83 = _3 + sumc_192;
  vect__4.645_50 = MEM[(float *)vectp_d.643_52];
  _4 = d[i_195];
  vect_sumd_84.646_49 = vect__4.645_50 + vect_sumd_84.623_126;
  sumd_84 = _4 + sumd_193;
  vect__5.651_43 = MEM[(float *)vectp_e.649_45];
  _5 = e[i_195];
  vect_sume_85.652_42 = vect__5.651_43 + vect_sume_85.624_125;
  sume_85 = _5 + sume_194;
  i_86 = i_195 + 1;
  ivtmp_176 = ivtmp_177 - 1;
  vectp_a.625_121 = vectp_a.625_122 + 16;
  vectp_b.631_88 = vectp_b.631_89 + 16;
  vectp_c.637_74 = vectp_c.637_75 + 16;
  vectp_d.643_51 = vectp_d.643_52 + 16;
  vectp_e.649_44 = vectp_e.649_45 + 16;
  ivtmp_124 = ivtmp_136 + 1;
  if (ivtmp_124 < 8000)
    goto <bb 50>; [96.00%]
  else
    goto <bb 46>; [4.00%]
;;    succ:       50
;;                46

;;   basic block 50, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 46, loop depth 0
;;    pred:       3
  # suma_212 = PHI <suma_81(3)>
  # sumb_210 = PHI <sumb_82(3)>
  # sumc_209 = PHI <sumc_83(3)>
  # sumd_208 = PHI <sumd_84(3)>
  # sume_207 = PHI <sume_85(3)>
  # vect_suma_81.628_97 = PHI <vect_suma_81.628_119(3)>
  # vect_sumb_82.634_78 = PHI <vect_sumb_82.634_79(3)>
  # vect_sumc_83.640_55 = PHI <vect_sumc_83.640_56(3)>
  # vect_sumd_84.646_48 = PHI <vect_sumd_84.646_49(3)>
  # vect_sume_85.652_41 = PHI <vect_sume_85.652_42(3)>
  stmp_sume_85.653_40 = REDUC_PLUS (vect_sume_85.652_41);
  vect_sume_85.654_211 = stmp_sume_85.653_40 + 0.0;
  stmp_sumd_84.647_47 = REDUC_PLUS (vect_sumd_84.646_48);
  vect_sumd_84.648_46 = stmp_sumd_84.647_47 + 0.0;
  stmp_sumc_83.641_54 = REDUC_PLUS (vect_sumc_83.640_55);
  vect_sumc_83.642_53 = stmp_sumc_83.641_54 + 0.0;
  stmp_sumb_82.635_77 = REDUC_PLUS (vect_sumb_82.634_78);
  vect_sumb_82.636_76 = stmp_sumb_82.635_77 + 0.0;
  stmp_suma_81.629_96 = REDUC_PLUS (vect_suma_81.628_97);
  vect_suma_81.630_90 = stmp_suma_81.629_96 + 0.0;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 49, loop depth 2
;;    pred:       4
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       49
;;                6
  # sumaa_196 = PHI <sumaa_91(49), sumaa_197(6)>
  # sumbb_198 = PHI <sumbb_92(49), sumbb_199(6)>
  # sumcc_200 = PHI <sumcc_93(49), sumcc_201(6)>
  # j_203 = PHI <j_94(49), 0(6)>
  # ivtmp_181 = PHI <ivtmp_180(49), 256(6)>
  # vect_sumaa_91.599_165 = PHI <vect_sumaa_91.605_156(49), { 0.0, 0.0, 0.0, 0.0 }(6)>
  # vect_sumbb_92.600_164 = PHI <vect_sumbb_92.611_146(49), { 0.0, 0.0, 0.0, 0.0 }(6)>
  # vect_sumcc_93.601_163 = PHI <vect_sumcc_93.617_135(49), { 0.0, 0.0, 0.0, 0.0 }(6)>
  # vectp_aa.602_159 = PHI <vectp_aa.602_158(49), vectp_aa.603_162(6)>
  # vectp_bb.608_149 = PHI <vectp_bb.608_148(49), vectp_bb.609_152(6)>
  # vectp_cc.614_139 = PHI <vectp_cc.614_138(49), vectp_cc.615_142(6)>
  # ivtmp_131 = PHI <ivtmp_130(49), 0(6)>
  vect__6.604_157 = MEM[(float *)vectp_aa.602_159];
  _6 = aa[i_202][j_203];
  vect_sumaa_91.605_156 = vect__6.604_157 + vect_sumaa_91.599_165;
  sumaa_91 = _6 + sumaa_196;
  vect__7.610_147 = MEM[(float *)vectp_bb.608_149];
  _7 = bb[i_202][j_203];
  vect_sumbb_92.611_146 = vect__7.610_147 + vect_sumbb_92.600_164;
  sumbb_92 = _7 + sumbb_198;
  vect__8.616_137 = MEM[(float *)vectp_cc.614_139];
  _8 = cc[i_202][j_203];
  vect_sumcc_93.617_135 = vect__8.616_137 + vect_sumcc_93.601_163;
  sumcc_93 = _8 + sumcc_200;
  j_94 = j_203 + 1;
  ivtmp_180 = ivtmp_181 - 1;
  vectp_aa.602_158 = vectp_aa.602_159 + 16;
  vectp_bb.608_148 = vectp_bb.608_149 + 16;
  vectp_cc.614_138 = vectp_cc.614_139 + 16;
  ivtmp_130 = ivtmp_131 + 1;
  if (ivtmp_130 < 64)
    goto <bb 49>; [96.00%]
  else
    goto <bb 5>; [4.00%]
;;    succ:       49
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
  # sumaa_206 = PHI <sumaa_91(4)>
  # sumbb_188 = PHI <sumbb_92(4)>
  # sumcc_186 = PHI <sumcc_93(4)>
  # vect_sumaa_91.605_155 = PHI <vect_sumaa_91.605_156(4)>
  # vect_sumbb_92.611_145 = PHI <vect_sumbb_92.611_146(4)>
  # vect_sumcc_93.617_134 = PHI <vect_sumcc_93.617_135(4)>
  stmp_sumcc_93.618_133 = REDUC_PLUS (vect_sumcc_93.617_134);
  vect_sumcc_93.619_132 = stmp_sumcc_93.618_133 + sumcc_201;
  stmp_sumbb_92.612_144 = REDUC_PLUS (vect_sumbb_92.611_145);
  vect_sumbb_92.613_143 = stmp_sumbb_92.612_144 + sumbb_199;
  stmp_sumaa_91.606_154 = REDUC_PLUS (vect_sumaa_91.605_155);
  vect_sumaa_91.607_153 = stmp_sumaa_91.606_154 + sumaa_197;
  i_95 = i_202 + 1;
  ivtmp_178 = ivtmp_179 - 1;
  if (ivtmp_178 != 0)
    goto <bb 48>; [98.99%]
  else
    goto <bb 45>; [1.01%]
;;    succ:       48
;;                45

;;   basic block 48, loop depth 1
;;    pred:       5
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       46
;;                48
  # sumaa_197 = PHI <0.0(46), vect_sumaa_91.607_153(48)>
  # sumbb_199 = PHI <0.0(46), vect_sumbb_92.613_143(48)>
  # sumcc_201 = PHI <0.0(46), vect_sumcc_93.619_132(48)>
  # i_202 = PHI <0(46), i_95(48)>
  # ivtmp_179 = PHI <256(46), ivtmp_178(48)>
  _161 = (sizetype) i_202;
  _160 = _161 * 1024;
  vectp_aa.603_162 = &aa + _160;
  _151 = (sizetype) i_202;
  _150 = _151 * 1024;
  vectp_bb.609_152 = &bb + _150;
  _141 = (sizetype) i_202;
  _140 = _141 * 1024;
  vectp_cc.615_142 = &cc + _140;
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 45, loop depth 0
;;    pred:       5
  # sumaa_189 = PHI <vect_sumaa_91.607_153(5)>
  # sumbb_187 = PHI <vect_sumbb_92.613_143(5)>
  # sumcc_185 = PHI <vect_sumcc_93.619_132(5)>
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       47
;;                45
  # sumarray_204 = PHI <sumarray_98(47), 0.0(45)>
  # i_205 = PHI <i_99(47), 0(45)>
  # ivtmp_183 = PHI <ivtmp_182(47), 65536(45)>
  # vect_sumarray_98.592_175 = PHI <vect_sumarray_98.596_171(47), { 0.0, 0.0, 0.0, 0.0 }(45)>
  # vectp_array.593_174 = PHI <vectp_array.593_173(47), &array(45)>
  # ivtmp_167 = PHI <ivtmp_166(47), 0(45)>
  vect__9.595_172 = MEM[(float *)vectp_array.593_174];
  _9 = array[i_205];
  vect_sumarray_98.596_171 = vect__9.595_172 + vect_sumarray_98.592_175;
  sumarray_98 = _9 + sumarray_204;
  i_99 = i_205 + 1;
  ivtmp_182 = ivtmp_183 - 1;
  vectp_array.593_173 = vectp_array.593_174 + 16;
  ivtmp_166 = ivtmp_167 + 1;
  if (ivtmp_166 < 16384)
    goto <bb 47>; [96.00%]
  else
    goto <bb 8>; [4.00%]
;;    succ:       47
;;                8

;;   basic block 47, loop depth 1
;;    pred:       7
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 8, loop depth 0
;;    pred:       7
  # sumarray_184 = PHI <sumarray_98(7)>
  # vect_sumarray_98.596_170 = PHI <vect_sumarray_98.596_171(7)>
  stmp_sumarray_98.597_169 = REDUC_PLUS (vect_sumarray_98.596_170);
  vect_sumarray_98.598_168 = stmp_sumarray_98.597_169 + 0.0;
  if (name_100(D) == 1)
    goto <bb 9>; [20.24%]
  else
    goto <bb 10>; [79.76%]
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  _10 = (double) vect_suma_81.630_90;
  printf ("%f \n", _10);
  goto <bb 14>; [100.00%]
;;    succ:       14

;;   basic block 10, loop depth 0
;;    pred:       8
  if (name_100(D) == 2)
    goto <bb 11>; [25.38%]
  else
    goto <bb 12>; [74.62%]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _11 = (double) vect_sumb_82.636_76;
  printf ("%f \n", _11);
  goto <bb 16>; [100.00%]
;;    succ:       16

;;   basic block 12, loop depth 0
;;    pred:       10
  if (name_100(D) == 3)
    goto <bb 13>; [34.01%]
  else
    goto <bb 14>; [65.99%]
;;    succ:       13
;;                14

;;   basic block 13, loop depth 0
;;    pred:       12
  _12 = (double) vect_sumc_83.642_53;
  printf ("%f \n", _12);
  goto <bb 18>; [100.00%]
;;    succ:       18

;;   basic block 14, loop depth 0
;;    pred:       9
;;                12
  if (name_100(D) == 4)
    goto <bb 15>; [34.01%]
  else
    goto <bb 16>; [65.99%]
;;    succ:       15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
  _13 = (double) vect_sumd_84.648_46;
  printf ("%f \n", _13);
  goto <bb 20>; [100.00%]
;;    succ:       20

;;   basic block 16, loop depth 0
;;    pred:       11
;;                14
  if (name_100(D) == 5)
    goto <bb 17>; [34.01%]
  else
    goto <bb 18>; [65.99%]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  _14 = (double) vect_sume_85.654_211;
  printf ("%f \n", _14);
  goto <bb 22>; [100.00%]
;;    succ:       22

;;   basic block 18, loop depth 0
;;    pred:       13
;;                16
  if (name_100(D) == 11)
    goto <bb 19>; [34.01%]
  else
    goto <bb 20>; [65.99%]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 0
;;    pred:       18
  _15 = (double) sumaa_189;
  printf ("%f \n", _15);
  goto <bb 24>; [100.00%]
;;    succ:       24

;;   basic block 20, loop depth 0
;;    pred:       15
;;                18
  if (name_100(D) == 22)
    goto <bb 21>; [34.01%]
  else
    goto <bb 22>; [65.99%]
;;    succ:       21
;;                22

;;   basic block 21, loop depth 0
;;    pred:       20
  _16 = (double) sumbb_187;
  printf ("%f \n", _16);
  goto <bb 26>; [100.00%]
;;    succ:       26

;;   basic block 22, loop depth 0
;;    pred:       17
;;                20
  if (name_100(D) == 33)
    goto <bb 23>; [34.01%]
  else
    goto <bb 24>; [65.99%]
;;    succ:       23
;;                24

;;   basic block 23, loop depth 0
;;    pred:       22
  _17 = (double) sumcc_185;
  printf ("%f \n", _17);
  goto <bb 28>; [100.00%]
;;    succ:       28

;;   basic block 24, loop depth 0
;;    pred:       19
;;                22
  if (name_100(D) == 0)
    goto <bb 25>; [55.44%]
  else
    goto <bb 26>; [44.56%]
;;    succ:       25
;;                26

;;   basic block 25, loop depth 0
;;    pred:       24
  _18 = (double) vect_sumarray_98.598_168;
  printf ("%f \n", _18);
  goto <bb 30>; [100.00%]
;;    succ:       30

;;   basic block 26, loop depth 0
;;    pred:       21
;;                24
  if (name_100(D) == 12)
    goto <bb 27>; [43.28%]
  else
    goto <bb 28>; [56.72%]
;;    succ:       27
;;                28

;;   basic block 27, loop depth 0
;;    pred:       26
  _19 = vect_suma_81.630_90 + vect_sumb_82.636_76;
  _20 = (double) _19;
  printf ("%f \n", _20);
  goto <bb 32>; [100.00%]
;;    succ:       32

;;   basic block 28, loop depth 0
;;    pred:       23
;;                26
  if (name_100(D) == 25)
    goto <bb 29>; [43.28%]
  else
    goto <bb 30>; [56.72%]
;;    succ:       29
;;                30

;;   basic block 29, loop depth 0
;;    pred:       28
  _21 = vect_sumb_82.636_76 + vect_sume_85.654_211;
  _22 = (double) _21;
  printf ("%f \n", _22);
  goto <bb 34>; [100.00%]
;;    succ:       34

;;   basic block 30, loop depth 0
;;    pred:       25
;;                28
  if (name_100(D) == 13)
    goto <bb 31>; [34.01%]
  else
    goto <bb 32>; [65.99%]
;;    succ:       31
;;                32

;;   basic block 31, loop depth 0
;;    pred:       30
  _23 = vect_suma_81.630_90 + vect_sumc_83.642_53;
  _24 = (double) _23;
  printf ("%f \n", _24);
  goto <bb 36>; [100.00%]
;;    succ:       36

;;   basic block 32, loop depth 0
;;    pred:       27
;;                30
  if (name_100(D) == 123)
    goto <bb 33>; [34.01%]
  else
    goto <bb 34>; [65.99%]
;;    succ:       33
;;                34

;;   basic block 33, loop depth 0
;;    pred:       32
  _25 = vect_suma_81.630_90 + vect_sumb_82.636_76;
  _26 = _25 + vect_sumc_83.642_53;
  _27 = (double) _26;
  printf ("%f \n", _27);
  goto <bb 38>; [100.00%]
;;    succ:       38

;;   basic block 34, loop depth 0
;;    pred:       29
;;                32
  if (name_100(D) == 1122)
    goto <bb 35>; [34.01%]
  else
    goto <bb 36>; [65.99%]
;;    succ:       35
;;                36

;;   basic block 35, loop depth 0
;;    pred:       34
  _28 = sumaa_189 + sumbb_187;
  _29 = (double) _28;
  printf ("%f \n", _29);
  goto <bb 40>; [100.00%]
;;    succ:       40

;;   basic block 36, loop depth 0
;;    pred:       31
;;                34
  if (name_100(D) == 112233)
    goto <bb 37>; [34.01%]
  else
    goto <bb 38>; [65.99%]
;;    succ:       37
;;                38

;;   basic block 37, loop depth 0
;;    pred:       36
  _30 = sumaa_189 + sumbb_187;
  _31 = _30 + sumcc_185;
  _32 = (double) _31;
  printf ("%f \n", _32);
  goto <bb 42>; [100.00%]
;;    succ:       42

;;   basic block 38, loop depth 0
;;    pred:       33
;;                36
  if (name_100(D) == 111)
    goto <bb 39>; [34.01%]
  else
    goto <bb 40>; [65.99%]
;;    succ:       39
;;                40

;;   basic block 39, loop depth 0
;;    pred:       38
  _33 = vect_suma_81.630_90 + sumaa_189;
  _34 = (double) _33;
  printf ("%f \n", _34);
  goto <bb 44>; [100.00%]
;;    succ:       44

;;   basic block 40, loop depth 0
;;    pred:       35
;;                38
  if (name_100(D) == -1)
    goto <bb 41>; [34.01%]
  else
    goto <bb 42>; [65.99%]
;;    succ:       41
;;                42

;;   basic block 41, loop depth 0
;;    pred:       40
  temp.0_35 = temp;
  _36 = (double) temp.0_35;
  printf ("%f \n", _36);
  goto <bb 44>; [100.00%]
;;    succ:       44

;;   basic block 42, loop depth 0
;;    pred:       37
;;                40
  if (name_100(D) == -12)
    goto <bb 43>; [34.01%]
  else
    goto <bb 44>; [65.99%]
;;    succ:       43
;;                44

;;   basic block 43, loop depth 0
;;    pred:       42
  temp.1_37 = temp;
  _38 = temp.1_37 + vect_sumb_82.636_76;
  _39 = (double) _38;
  printf ("%f \n", _39);
;;    succ:       44

;;   basic block 44, loop depth 0
;;    pred:       39
;;                43
;;                41
;;                42
  return;
;;    succ:       EXIT

}



;; Function init (init, funcdef_no=569, decl_uid=7542, cgraph_uid=569, symbol_order=590)

Removing basic block 6
init (char * name)
{
  vector(4) float * vectp_V.715;
  vector(4) float * vectp_V.714;
  vector(4) float vect__10.713;
  vector(4) int vect__9.712;
  vector(4) float * vectp_U.711;
  vector(4) float * vectp_U.710;
  vector(4) float vect__8.709;
  vector(4) int vect__7.708;
  vector(4) float * vectp_Z.707;
  vector(4) float * vectp_Z.706;
  vector(4) float vect__6.705;
  vector(4) int vect__5.704;
  vector(4) float * vectp_Y.703;
  vector(4) float * vectp_Y.702;
  vector(4) float vect__4.701;
  vector(4) int vect__3.700;
  vector(4) float * vectp_X.699;
  vector(4) float * vectp_X.698;
  vector(4) float vect__2.697;
  vector(4) int vect__1.696;
  vector(4) int vect_vec_iv_.695;
  int i;
  int _1;
  float _2;
  int _3;
  float _4;
  int _5;
  float _6;
  int _7;
  float _8;
  int _9;
  float _10;
  int iftmp.2_15;
  vector(4) int vect_cst__24;
  vector(4) int vect_cst__25;
  vector(4) int vect_cst__34;
  vector(4) int vect_cst__39;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;
  vector(4) int vect_cst__47;
  vector(4) int vect_cst__53;
  unsigned int ivtmp_59;
  unsigned int ivtmp_60;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  iftmp.2_15 = __builtin_strcmp (name_13(D), "s000 ");
  if (iftmp.2_15 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 4>; [50.00%]
;;    succ:       10
;;                4

;;   basic block 10, loop depth 0
;;    pred:       2
  vect_cst__39 = { 4, 4, 4, 4 };
  vect_cst__25 = { 1, 1, 1, 1 };
  vect_cst__34 = { 2, 2, 2, 2 };
  vect_cst__24 = { 3, 3, 3, 3 };
  vect_cst__47 = { 4, 4, 4, 4 };
  vect_cst__53 = { 5, 5, 5, 5 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       7
;;                10
  # i_27 = PHI <_1(7), 0(10)>
  # ivtmp_42 = PHI <ivtmp_41(7), 32000(10)>
  # vect_vec_iv_.695_38 = PHI <vect_vec_iv_.695_26(7), { 0, 1, 2, 3 }(10)>
  # vectp_X.698_11 = PHI <vectp_X.698_36(7), &X(10)>
  # vectp_Y.702_33 = PHI <vectp_Y.702_30(7), &Y(10)>
  # vectp_Z.706_44 = PHI <vectp_Z.706_45(7), &Z(10)>
  # vectp_U.710_50 = PHI <vectp_U.710_51(7), &U(10)>
  # vectp_V.714_56 = PHI <vectp_V.714_57(7), &V(10)>
  # ivtmp_59 = PHI <ivtmp_60(7), 0(10)>
  vect_vec_iv_.695_26 = vect_vec_iv_.695_38 + vect_cst__39;
  vect__1.696_23 = vect_vec_iv_.695_38 + vect_cst__25;
  _1 = i_27 + 1;
  vect__2.697_12 = (vector(4) float) vect__1.696_23;
  _2 = (float) _1;
  MEM[(float *)vectp_X.698_11] = vect__2.697_12;
  vect__3.700_35 = vect_vec_iv_.695_38 + vect_cst__34;
  _3 = i_27 + 2;
  vect__4.701_32 = (vector(4) float) vect__3.700_35;
  _4 = (float) _3;
  MEM[(float *)vectp_Y.702_33] = vect__4.701_32;
  vect__5.704_29 = vect_vec_iv_.695_38 + vect_cst__24;
  _5 = i_27 + 3;
  vect__6.705_43 = (vector(4) float) vect__5.704_29;
  _6 = (float) _5;
  MEM[(float *)vectp_Z.706_44] = vect__6.705_43;
  vect__7.708_48 = vect_vec_iv_.695_38 + vect_cst__47;
  _7 = i_27 + 4;
  vect__8.709_49 = (vector(4) float) vect__7.708_48;
  _8 = (float) _7;
  MEM[(float *)vectp_U.710_50] = vect__8.709_49;
  vect__9.712_54 = vect_vec_iv_.695_38 + vect_cst__53;
  _9 = i_27 + 5;
  vect__10.713_55 = (vector(4) float) vect__9.712_54;
  _10 = (float) _9;
  MEM[(float *)vectp_V.714_56] = vect__10.713_55;
  ivtmp_41 = ivtmp_42 - 1;
  vectp_X.698_36 = vectp_X.698_11 + 16;
  vectp_Y.702_30 = vectp_Y.702_33 + 16;
  vectp_Z.706_45 = vectp_Z.706_44 + 16;
  vectp_U.710_51 = vectp_U.710_50 + 16;
  vectp_V.714_57 = vectp_V.714_56 + 16;
  ivtmp_60 = ivtmp_59 + 1;
  if (ivtmp_60 < 8000)
    goto <bb 7>; [96.00%]
  else
    goto <bb 9>; [4.00%]
;;    succ:       7
;;                9

;;   basic block 9, loop depth 0
;;    pred:       3
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       2
  init.part.3 (name_13(D));
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
;;                9
  return 0;
;;    succ:       EXIT

}



;; Function s000 (s000, funcdef_no=570, decl_uid=8781, cgraph_uid=570, symbol_order=591)

Merging blocks 2 and 13
Merging blocks 7 and 12
s000 ()
{
  vector(4) float * vectp_V.756;
  vector(4) float * vectp_V.755;
  vector(4) float vect__31.754;
  vector(4) int vect__30.753;
  vector(4) float * vectp_U.752;
  vector(4) float * vectp_U.751;
  vector(4) float vect__29.750;
  vector(4) int vect__28.749;
  vector(4) float * vectp_Z.748;
  vector(4) float * vectp_Z.747;
  vector(4) float vect__27.746;
  vector(4) int vect__26.745;
  vector(4) float * vectp_Y.744;
  vector(4) float * vectp_Y.743;
  vector(4) float vect__25.742;
  vector(4) int vect__24.741;
  vector(4) float * vectp_X.740;
  vector(4) float * vectp_X.739;
  vector(4) float vect__23.738;
  vector(4) int vect__22.737;
  vector(4) int vect_vec_iv_.736;
  vector(4) float * vectp_X.735;
  vector(4) float * vectp_X.734;
  vector(4) float vect__2.733;
  vector(4) float vect__1.732;
  vector(4) float * vectp_Y.731;
  vector(4) float * vectp_Y.730;
  int i;
  int D.15641;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  unsigned int ivtmp_3;
  vector(4) int vect_cst__6;
  int _22;
  float _23;
  int _24;
  float _25;
  int _26;
  float _27;
  int _28;
  float _29;
  int _30;
  float _31;
  vector(4) int vect_cst__39;
  vector(4) float vect_cst__42;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  unsigned int ivtmp_59;
  vector(4) int vect_cst__60;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;
  vector(4) int vect_cst__67;
  vector(4) int vect_cst__73;
  vector(4) int vect_cst__79;
  unsigned int ivtmp_85;
  unsigned int ivtmp_86;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  vect_cst__60 = { 4, 4, 4, 4 };
  vect_cst__39 = { 1, 1, 1, 1 };
  vect_cst__6 = { 2, 2, 2, 2 };
  vect_cst__67 = { 3, 3, 3, 3 };
  vect_cst__73 = { 4, 4, 4, 4 };
  vect_cst__79 = { 5, 5, 5, 5 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       11
;;                2
  # i_50 = PHI <_22(11), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(11), 32000(2)>
  # vect_vec_iv_.736_53 = PHI <vect_vec_iv_.736_54(11), { 0, 1, 2, 3 }(2)>
  # vectp_X.739_33 = PHI <vectp_X.739_32(11), &X(2)>
  # vectp_Y.743_64 = PHI <vectp_Y.743_65(11), &Y(2)>
  # vectp_Z.747_70 = PHI <vectp_Z.747_71(11), &Z(2)>
  # vectp_U.751_76 = PHI <vectp_U.751_77(11), &U(2)>
  # vectp_V.755_82 = PHI <vectp_V.755_83(11), &V(2)>
  # ivtmp_85 = PHI <ivtmp_86(11), 0(2)>
  vect_vec_iv_.736_54 = vect_vec_iv_.736_53 + vect_cst__60;
  vect__22.737_52 = vect_vec_iv_.736_53 + vect_cst__39;
  _22 = i_50 + 1;
  vect__23.738_40 = (vector(4) float) vect__22.737_52;
  _23 = (float) _22;
  MEM[(float *)vectp_X.739_33] = vect__23.738_40;
  vect__24.741_5 = vect_vec_iv_.736_53 + vect_cst__6;
  _24 = i_50 + 2;
  vect__25.742_63 = (vector(4) float) vect__24.741_5;
  _25 = (float) _24;
  MEM[(float *)vectp_Y.743_64] = vect__25.742_63;
  vect__26.745_68 = vect_vec_iv_.736_53 + vect_cst__67;
  _26 = i_50 + 3;
  vect__27.746_69 = (vector(4) float) vect__26.745_68;
  _27 = (float) _26;
  MEM[(float *)vectp_Z.747_70] = vect__27.746_69;
  vect__28.749_74 = vect_vec_iv_.736_53 + vect_cst__73;
  _28 = i_50 + 4;
  vect__29.750_75 = (vector(4) float) vect__28.749_74;
  _29 = (float) _28;
  MEM[(float *)vectp_U.751_76] = vect__29.750_75;
  vect__30.753_80 = vect_vec_iv_.736_53 + vect_cst__79;
  _30 = i_50 + 5;
  vect__31.754_81 = (vector(4) float) vect__30.753_80;
  _31 = (float) _30;
  MEM[(float *)vectp_V.755_82] = vect__31.754_81;
  ivtmp_55 = ivtmp_56 - 1;
  vectp_X.739_32 = vectp_X.739_33 + 16;
  vectp_Y.743_65 = vectp_Y.743_64 + 16;
  vectp_Z.747_71 = vectp_Z.747_70 + 16;
  vectp_U.751_77 = vectp_U.751_76 + 16;
  vectp_V.755_83 = vectp_V.755_82 + 16;
  ivtmp_86 = ivtmp_85 + 1;
  if (ivtmp_86 < 8000)
    goto <bb 11>; [92.31%]
  else
    goto <bb 4>; [7.69%]
;;    succ:       11
;;                4

;;   basic block 11, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  start_t_10 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       10
;;                7
  # i_47 = PHI <i_12(10), 0(7)>
  # ivtmp_62 = PHI <ivtmp_59(10), 32000(7)>
  # vectp_Y.730_45 = PHI <vectp_Y.730_44(10), &Y(7)>
  # vectp_X.734_21 = PHI <vectp_X.734_8(10), &X(7)>
  # ivtmp_3 = PHI <ivtmp_61(10), 0(7)>
  vect__1.732_43 = MEM[(float *)vectp_Y.730_45];
  _1 = Y[i_47];
  vect__2.733_41 = vect__1.732_43 + vect_cst__42;
  _2 = _1 + 1.0e+0;
  MEM[(float *)vectp_X.734_21] = vect__2.733_41;
  i_12 = i_47 + 1;
  ivtmp_59 = ivtmp_62 - 1;
  vectp_Y.730_44 = vectp_Y.730_45 + 16;
  vectp_X.734_8 = vectp_X.734_21 + 16;
  ivtmp_61 = ivtmp_3 + 1;
  if (ivtmp_61 < 8000)
    goto <bb 10>; [96.00%]
  else
    goto <bb 6>; [4.00%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&X, &Y, &Z, &U, &V, &aa, &bb, &cc, 0.0);
  nl_14 = nl_46 + 1;
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       4
;;                9
  # nl_46 = PHI <0(4), nl_14(9)>
  # ivtmp_58 = PHI <20000(4), ivtmp_57(9)>
  vect_cst__42 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_16 = mysecond ();
  clock_dif_17 = end_t_16 - start_t_10;
  printf ("S000\t %.3f \t\t", clock_dif_17);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s111 (s111, funcdef_no=571, decl_uid=8794, cgraph_uid=571, symbol_order=592)

Removing basic block 9
Merging blocks 5 and 13
s111 ()
{
  vector(4) float vect__4.794;
  vector(4) float vect__3.793;
  vector(4) float vect__3.792;
  vector(4) float * vectp_b.791;
  vector(4) float * vectp_b.790;
  vector(4) float vect__2.789;
  vector(4) float vect__2.788;
  vector(4) float * vectp_a.787;
  vector(4) float * vectp_a.786;
  unsigned int tmp.785;
  int tmp.784;
  int i;
  int D.15702;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  int _5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_24;
  unsigned int ivtmp_25;
  float _29;
  float _34;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  float _38;
  unsigned int ivtmp_39;
  vector(4) float vect_perm_even_43;
  vector(4) float vect_perm_odd_44;
  vector(4) float vect_perm_even_51;
  vector(4) float vect_perm_odd_52;
  float[32000] * _54;
  float[32000] * ivtmp_55;
  float[32000] * ivtmp_56;
  float _57;
  float[32000] * ivtmp_59;
  float _60;
  float[32000] * ivtmp_62;
  float _63;
  float[32000] * ivtmp_65;
  float _66;
  float[32000] * ivtmp_68;
  unsigned int ivtmp_69;
  unsigned int ivtmp_70;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s111 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_8 = PHI <31993(10), i_31(12)>
  # ivtmp_6 = PHI <4(10), ivtmp_39(12)>
  _5 = i_8 + -1;
  _38 = a[_5];
  _34 = b[i_8];
  _29 = _38 + _34;
  a[i_8] = _29;
  i_31 = i_8 + 2;
  ivtmp_39 = ivtmp_6 - 1;
  if (ivtmp_39 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_27 = PHI <i_14(8), 1(5)>
  # ivtmp_36 = PHI <ivtmp_35(8), 16000(5)>
  # vectp_a.786_33 = PHI <vectp_a.786_40(8), &a(5)>
  # vectp_b.790_46 = PHI <vectp_b.790_47(8), vectp_b.791_45(5)>
  # ivtmp_55 = PHI <ivtmp_56(8), _54(5)>
  # ivtmp_69 = PHI <ivtmp_70(8), 0(5)>
  _1 = i_27 + -1;
  vect__2.788_22 = MEM[(float *)vectp_a.786_33];
  vectp_a.786_41 = vectp_a.786_33 + 16;
  vect__2.789_10 = MEM[(float *)vectp_a.786_41];
  vect_perm_even_43 = VEC_PERM_EXPR <vect__2.788_22, vect__2.789_10, { 0, 2, 4, 6 }>;
  vect_perm_odd_44 = VEC_PERM_EXPR <vect__2.788_22, vect__2.789_10, { 1, 3, 5, 7 }>;
  _2 = a[_1];
  vect__3.792_48 = MEM[(float *)vectp_b.790_46];
  vectp_b.790_49 = vectp_b.790_46 + 16;
  vect__3.793_50 = MEM[(float *)vectp_b.790_49];
  vect_perm_even_51 = VEC_PERM_EXPR <vect__3.792_48, vect__3.793_50, { 0, 2, 4, 6 }>;
  vect_perm_odd_52 = VEC_PERM_EXPR <vect__3.792_48, vect__3.793_50, { 1, 3, 5, 7 }>;
  _3 = b[i_27];
  vect__4.794_53 = vect_perm_even_43 + vect_perm_even_51;
  _4 = _2 + _3;
  _57 = BIT_FIELD_REF <vect__4.794_53, 32, 0>;
  MEM[(float *)ivtmp_55] = _57;
  ivtmp_59 = ivtmp_55 + 8;
  _60 = BIT_FIELD_REF <vect__4.794_53, 32, 32>;
  MEM[(float *)ivtmp_59] = _60;
  ivtmp_62 = ivtmp_59 + 8;
  _63 = BIT_FIELD_REF <vect__4.794_53, 32, 64>;
  MEM[(float *)ivtmp_62] = _63;
  ivtmp_65 = ivtmp_62 + 8;
  _66 = BIT_FIELD_REF <vect__4.794_53, 32, 96>;
  MEM[(float *)ivtmp_65] = _66;
  ivtmp_68 = ivtmp_65 + 8;
  i_14 = i_27 + 2;
  ivtmp_35 = ivtmp_36 - 1;
  vectp_a.786_40 = vectp_a.786_41 + 16;
  vectp_b.790_47 = vectp_b.790_49 + 16;
  ivtmp_56 = ivtmp_55 + 32;
  ivtmp_70 = ivtmp_69 + 1;
  if (ivtmp_70 < 3999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_26 + 1;
  ivtmp_24 = ivtmp_25 - 1;
  if (ivtmp_24 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_26 = PHI <0(2), nl_16(7)>
  # ivtmp_25 = PHI <20000(2), ivtmp_24(7)>
  vectp_b.791_45 = &b + 4;
  _54 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_12;
  printf ("S111\t %.3f \t\t", clock_dif_19);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s1111 (s1111, funcdef_no=572, decl_uid=8807, cgraph_uid=572, symbol_order=593)

Merging blocks 5 and 9
s1111 ()
{
  vector(4) float vect__12.825;
  vector(4) float vect__34.824;
  vector(4) float vect__4.823;
  vector(4) float * vectp_b.822;
  vector(4) float * vectp_b.821;
  vector(4) float vect__14.820;
  vector(4) float vect__35.819;
  vector(4) float vect__13.818;
  vector(4) float vect__32.817;
  vector(4) float vect__2.816;
  vector(4) float * vectp_d.815;
  vector(4) float * vectp_d.814;
  vector(4) float vect__1.813;
  vector(4) float * vectp_c.812;
  vector(4) float * vectp_c.811;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _4;
  unsigned int ivtmp_8;
  unsigned int ivtmp_9;
  float[32000] * ivtmp_10;
  int _11;
  float _12;
  float _13;
  float _14;
  float _16;
  float[32000] * ivtmp_30;
  float _32;
  float _33;
  float _34;
  float _35;
  float[32000] * ivtmp_40;
  float _42;
  float[32000] * ivtmp_43;
  float _45;
  float[32000] * ivtmp_46;
  float[32000] * ivtmp_47;
  vector(4) float vect_cst__55;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;
  unsigned int ivtmp_69;
  unsigned int ivtmp_70;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s111 ");
  start_t_20 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_37 = PHI <i_22(8), 0(5)>
  # ivtmp_70 = PHI <ivtmp_69(8), 16000(5)>
  # vectp_c.811_66 = PHI <vectp_c.811_65(8), &c(5)>
  # vectp_d.814_63 = PHI <vectp_d.814_59(8), &d(5)>
  # vectp_b.821_52 = PHI <vectp_b.821_51(8), &b(5)>
  # ivtmp_47 = PHI <ivtmp_46(8), &a(5)>
  # ivtmp_9 = PHI <ivtmp_8(8), 0(5)>
  vect__1.813_64 = MEM[(float *)vectp_c.811_66];
  _1 = c[i_37];
  vect__2.816_58 = MEM[(float *)vectp_d.814_63];
  _2 = d[i_37];
  vect__32.817_57 = vect__1.813_64 + vect__2.816_58;
  _32 = _1 + _2;
  vect__13.818_56 = vect__1.813_64 * vect__32.817_57;
  _13 = _1 * _32;
  vect__35.819_54 = vect__2.816_58 * vect_cst__55;
  _35 = _2 * 2.0e+0;
  vect__14.820_53 = vect__1.813_64 + vect__35.819_54;
  _14 = _1 + _35;
  vect__4.823_50 = MEM[(float *)vectp_b.821_52];
  _4 = b[i_37];
  vect__34.824_49 = vect__4.823_50 * vect__14.820_53;
  _34 = _4 * _14;
  _11 = i_37 * 2;
  vect__12.825_48 = vect__13.818_56 + vect__34.824_49;
  _12 = _13 + _34;
  _45 = BIT_FIELD_REF <vect__12.825_48, 32, 0>;
  MEM[(float *)ivtmp_47] = _45;
  ivtmp_43 = ivtmp_47 + 8;
  _42 = BIT_FIELD_REF <vect__12.825_48, 32, 32>;
  MEM[(float *)ivtmp_43] = _42;
  ivtmp_40 = ivtmp_43 + 8;
  _33 = BIT_FIELD_REF <vect__12.825_48, 32, 64>;
  MEM[(float *)ivtmp_40] = _33;
  ivtmp_30 = ivtmp_40 + 8;
  _16 = BIT_FIELD_REF <vect__12.825_48, 32, 96>;
  MEM[(float *)ivtmp_30] = _16;
  ivtmp_10 = ivtmp_30 + 8;
  i_22 = i_37 + 1;
  ivtmp_69 = ivtmp_70 - 1;
  vectp_c.811_65 = vectp_c.811_66 + 16;
  vectp_d.814_59 = vectp_d.814_63 + 16;
  vectp_b.821_51 = vectp_b.821_52 + 16;
  ivtmp_46 = ivtmp_47 + 32;
  ivtmp_8 = ivtmp_9 + 1;
  if (ivtmp_8 < 4000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_36 + 1;
  ivtmp_67 = ivtmp_68 - 1;
  if (ivtmp_67 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_36 = PHI <0(2), nl_24(7)>
  # ivtmp_68 = PHI <20000(2), ivtmp_67(7)>
  vect_cst__55 = { 2.0e+0, 2.0e+0, 2.0e+0, 2.0e+0 };
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_20;
  printf ("S1111\t %.3f \t\t ", clock_dif_27);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s112 (s112, funcdef_no=573, decl_uid=8820, cgraph_uid=573, symbol_order=594)

Removing basic block 9
Merging blocks 5 and 13
s112 ()
{
  vector(4) float vect__4.857;
  vector(4) float * vectp_a.856;
  vector(4) float * vectp_a.855;
  vector(4) float vect__4.854;
  vector(4) float vect__2.853;
  vector(4) float vect__2.852;
  vector(4) float * vectp_b.851;
  vector(4) float * vectp_b.850;
  vector(4) float vect__1.849;
  vector(4) float vect__1.848;
  vector(4) float * vectp_a.847;
  vector(4) float * vectp_a.846;
  unsigned int tmp.845;
  int tmp.844;
  int i;
  int D.15771;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_25;
  int _29;
  float _34;
  float _35;
  unsigned int ivtmp_36;
  float _38;
  unsigned int ivtmp_39;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s112 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_7 = PHI <2(10), i_31(12)>
  # ivtmp_5 = PHI <3(10), ivtmp_39(12)>
  _35 = a[i_7];
  _34 = b[i_7];
  _29 = i_7 + 1;
  _38 = _35 + _34;
  a[_29] = _38;
  i_31 = i_7 + -1;
  ivtmp_39 = ivtmp_5 - 1;
  if (ivtmp_39 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_27 = PHI <i_14(8), 31998(5)>
  # ivtmp_36 = PHI <ivtmp_25(8), 31999(5)>
  # vectp_a.846_40 = PHI <vectp_a.846_22(8), vectp_a.847_33(5)>
  # vectp_b.850_44 = PHI <vectp_b.850_45(8), vectp_b.851_43(5)>
  # vectp_a.855_50 = PHI <vectp_a.855_51(8), vectp_a.856_49(5)>
  # ivtmp_54 = PHI <ivtmp_55(8), 0(5)>
  vect__1.848_41 = MEM[(float *)vectp_a.846_40];
  vect__1.849_10 = VEC_PERM_EXPR <vect__1.848_41, vect__1.848_41, { 3, 2, 1, 0 }>;
  _1 = a[i_27];
  vect__2.852_46 = MEM[(float *)vectp_b.850_44];
  vect__2.853_47 = VEC_PERM_EXPR <vect__2.852_46, vect__2.852_46, { 3, 2, 1, 0 }>;
  _2 = b[i_27];
  _3 = i_27 + 1;
  vect__4.854_48 = vect__1.849_10 + vect__2.853_47;
  _4 = _1 + _2;
  vect__4.857_52 = VEC_PERM_EXPR <vect__4.854_48, vect__4.854_48, { 3, 2, 1, 0 }>;
  MEM[(float *)vectp_a.855_50] = vect__4.857_52;
  i_14 = i_27 + -1;
  ivtmp_25 = ivtmp_36 - 1;
  vectp_a.846_22 = vectp_a.846_40 + 18446744073709551600;
  vectp_b.850_45 = vectp_b.850_44 + 18446744073709551600;
  vectp_a.855_51 = vectp_a.855_50 + 18446744073709551600;
  ivtmp_55 = ivtmp_54 + 1;
  if (ivtmp_55 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_26 + 1;
  ivtmp_23 = ivtmp_24 - 1;
  if (ivtmp_23 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_26 = PHI <0(2), nl_16(7)>
  # ivtmp_24 = PHI <30000(2), ivtmp_23(7)>
  vectp_a.847_33 = &a + 127980;
  vectp_b.851_43 = &b + 127980;
  vectp_a.856_49 = &a + 127984;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_12;
  printf ("S112\t %.3f \t\t", clock_dif_19);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s1112 (s1112, funcdef_no=574, decl_uid=8833, cgraph_uid=574, symbol_order=595)

Merging blocks 5 and 9
s1112 ()
{
  vector(4) float vect__2.883;
  vector(4) float * vectp_a.882;
  vector(4) float * vectp_a.881;
  vector(4) float vect__2.880;
  vector(4) float vect__1.879;
  vector(4) float vect__1.878;
  vector(4) float * vectp_b.877;
  vector(4) float * vectp_b.876;
  int i;
  int D.15809;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  unsigned int ivtmp_4;
  unsigned int ivtmp_6;
  unsigned int ivtmp_21;
  unsigned int ivtmp_23;
  unsigned int ivtmp_31;
  vector(4) float vect_cst__32;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s112 ");
  start_t_10 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_25 = PHI <i_12(8), 31999(5)>
  # ivtmp_23 = PHI <ivtmp_21(8), 32000(5)>
  # vectp_b.876_34 = PHI <vectp_b.876_22(8), vectp_b.877_3(5)>
  # vectp_a.881_28 = PHI <vectp_a.881_29(8), vectp_a.882_36(5)>
  # ivtmp_31 = PHI <ivtmp_38(8), 0(5)>
  vect__1.878_5 = MEM[(float *)vectp_b.876_34];
  vect__1.879_33 = VEC_PERM_EXPR <vect__1.878_5, vect__1.878_5, { 3, 2, 1, 0 }>;
  _1 = b[i_25];
  vect__2.880_27 = vect__1.879_33 + vect_cst__32;
  _2 = _1 + 1.0e+0;
  vect__2.883_37 = VEC_PERM_EXPR <vect__2.880_27, vect__2.880_27, { 3, 2, 1, 0 }>;
  MEM[(float *)vectp_a.881_28] = vect__2.883_37;
  i_12 = i_25 + -1;
  ivtmp_21 = ivtmp_23 - 1;
  vectp_b.876_22 = vectp_b.876_34 + 18446744073709551600;
  vectp_a.881_29 = vectp_a.881_28 + 18446744073709551600;
  ivtmp_38 = ivtmp_31 + 1;
  if (ivtmp_38 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_14 = nl_24 + 1;
  ivtmp_4 = ivtmp_6 - 1;
  if (ivtmp_4 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_24 = PHI <0(2), nl_14(7)>
  # ivtmp_6 = PHI <30000(2), ivtmp_4(7)>
  vectp_b.877_3 = &b + 127984;
  vect_cst__32 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
  vectp_a.882_36 = &a + 127984;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_16 = mysecond ();
  clock_dif_17 = end_t_16 - start_t_10;
  printf ("S1112\t %.3f \t\t ", clock_dif_17);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s113 (s113, funcdef_no=575, decl_uid=8846, cgraph_uid=575, symbol_order=596)

Removing basic block 9

Symbols to be put in SSA form
{ D.13354 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 14
Number of blocks to update: 12 ( 86%)


Merging blocks 5 and 13
s113 ()
{
  vector(4) float * vectp_a.910;
  vector(4) float * vectp_a.909;
  vector(4) float vect__3.908;
  vector(4) float vect__2.907;
  vector(4) float * vectp_b.906;
  vector(4) float * vectp_b.905;
  vector(4) float vect__1.904;
  vector(4) float * vectp_a.903;
  vector(4) float * vectp_a.902;
  unsigned int tmp.901;
  int tmp.900;
  int i;
  int D.15839;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_4;
  float _21;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  float _28;
  unsigned int ivtmp_30;
  float _33;
  float _34;
  unsigned int ivtmp_35;
  vector(4) float vect_cst__40;
  unsigned int ivtmp_50;
  unsigned int ivtmp_51;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s113 ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_6 = PHI <31997(10), i_29(12)>
  # ivtmp_4 = PHI <3(10), ivtmp_30(12)>
  _34 = a[0];
  _33 = b[i_6];
  _28 = _34 + _33;
  a[i_6] = _28;
  i_29 = i_6 + 1;
  ivtmp_30 = ivtmp_4 - 1;
  if (ivtmp_30 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_26 = PHI <i_13(8), 1(5)>
  # ivtmp_35 = PHI <ivtmp_24(8), 31999(5)>
  # vectp_a.902_31 = PHI <vectp_a.902_32(8), &a(5)>
  # vectp_b.905_42 = PHI <vectp_b.905_43(8), vectp_b.906_9(5)>
  # vectp_a.909_47 = PHI <vectp_a.909_48(8), vectp_a.910_46(5)>
  # ivtmp_50 = PHI <ivtmp_51(8), 0(5)>
  vect__1.904_39 = MEM[(float *)vectp_a.902_31];
  _1 = a[0];
  vect__2.907_44 = MEM[(float *)vectp_b.905_42];
  _2 = b[i_26];
  vect__3.908_45 = vect_cst__40 + vect__2.907_44;
  _3 = _1 + _2;
  MEM[(float *)vectp_a.909_47] = vect__3.908_45;
  i_13 = i_26 + 1;
  ivtmp_24 = ivtmp_35 - 1;
  vectp_a.902_32 = vectp_a.902_31 + 0;
  vectp_b.905_43 = vectp_b.905_42 + 16;
  vectp_a.909_48 = vectp_a.909_47 + 16;
  ivtmp_51 = ivtmp_50 + 1;
  if (ivtmp_51 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_22 = ivtmp_23 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_23 = PHI <40000(2), ivtmp_22(7)>
  _21 = a[0];
  vect_cst__40 = {_21, _21, _21, _21};
  vectp_b.906_9 = &b + 4;
  vectp_a.910_46 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("S113\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s1113 (s1113, funcdef_no=576, decl_uid=8859, cgraph_uid=576, symbol_order=597)

s1113 ()
{
  int i;
  int D.15873;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_35;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s113 ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_26 = PHI <0(5), i_13(8)>
  # ivtmp_35 = PHI <32000(5), ivtmp_24(8)>
  _1 = a[16000];
  _2 = b[i_26];
  _3 = _1 + _2;
  a[i_26] = _3;
  i_13 = i_26 + 1;
  ivtmp_24 = ivtmp_35 - 1;
  if (ivtmp_24 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_22 = ivtmp_23 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_23 = PHI <20000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("S1113\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s114 (s114, funcdef_no=577, decl_uid=8872, cgraph_uid=577, symbol_order=598)

s114 ()
{
  int i;
  int D.15893;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_26;
  unsigned int ivtmp_37;
  unsigned int ivtmp_38;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s114 ");
  start_t_13 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 10, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       10
;;                12
  # j_5 = PHI <0(10), j_15(12)>
  _1 = aa[j_5][i_27];
  _2 = bb[i_27][j_5];
  _3 = _1 + _2;
  aa[i_27][j_5] = _3;
  j_15 = j_5 + 1;
  if (j_5 < i_9)
    goto <bb 12>; [89.00%]
  else
    goto <bb 4>; [11.00%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 3
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 2
;;    pred:       6
;;                3
  i_16 = i_27 + 1;
  ivtmp_40 = ivtmp_41 + 4294967295;
  if (ivtmp_40 != 0)
    goto <bb 16>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       16
;;                7

;;   basic block 16, loop depth 2
;;    pred:       4
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       15
;;                16
  # i_9 = PHI <0(15), i_27(16)>
  # i_27 = PHI <i_28(15), i_16(16)>
  # ivtmp_41 = PHI <ivtmp_26(15), ivtmp_40(16)>
  if (i_27 > 0)
    goto <bb 10>; [89.91%]
  else
    goto <bb 4>; [10.09%]
;;    succ:       10
;;                4

;;   basic block 7, loop depth 1
;;    pred:       4
;;                8
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_30 + 1;
  ivtmp_37 = ivtmp_38 - 1;
  if (ivtmp_37 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       11
;;                9

;;   basic block 11, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                11
  # nl_30 = PHI <0(2), nl_18(11)>
  # ivtmp_38 = PHI <7800(2), ivtmp_37(11)>
  i_28 = 1;
  ivtmp_26 = 255;
  if (ivtmp_26 != 0)
    goto <bb 15>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       15
;;                7

;;   basic block 15, loop depth 1
;;    pred:       8
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_13;
  printf ("S114\t %.3f \t\t", clock_dif_21);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s115 (s115, funcdef_no=578, decl_uid=8889, cgraph_uid=578, symbol_order=599)

s115 ()
{
  int i;
  int D.15926;
  int i;
  int j;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_8;
  unsigned int ivtmp_53;
  int _57;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s115 ");
  start_t_15 = mysecond ();
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 3, loop depth 2
;;    pred:       5
  _57 = i_11 + 1;
  if (_57 != 256)
    goto <bb 4>; [88.89%]
  else
    goto <bb 8>; [11.11%]
;;    succ:       4
;;                8

;;   basic block 4, loop depth 2
;;    pred:       3
;;                10
  # i_29 = PHI <_57(3), i_18(10)>
  # i_32 = PHI <_57(3), i_11(10)>
  # j_41 = PHI <i_11(3), j_10(10)>
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                6
  # i_6 = PHI <i_29(4), 1(6)>
  # i_11 = PHI <i_32(4), 1(6)>
  # j_10 = PHI <j_41(4), 0(6)>
  _1 = a[i_6];
  _2 = aa[j_10][i_6];
  _3 = a[j_10];
  _4 = _2 * _3;
  _5 = _1 - _4;
  a[i_6] = _5;
  i_18 = i_6 + 1;
  if (i_18 != 256)
    goto <bb 10>; [89.00%]
  else
    goto <bb 3>; [11.00%]
;;    succ:       10
;;                3

;;   basic block 10, loop depth 2
;;    pred:       5
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 9, loop depth 1
;;    pred:       8
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       2
;;                9
  # nl_31 = PHI <0(2), nl_20(9)>
  # ivtmp_8 = PHI <39000(2), ivtmp_53(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 7, loop depth 0
;;    pred:       8
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_15;
  printf ("S115\t %.3f \t\t", clock_dif_23);
  check (1);
  return 0;
;;    succ:       EXIT

;;   basic block 8, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_31 + 1;
  ivtmp_53 = ivtmp_8 - 1;
  if (ivtmp_53 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       9
;;                7

}



;; Function s1115 (s1115, funcdef_no=579, decl_uid=8906, cgraph_uid=579, symbol_order=600)

s1115 ()
{
  int i;
  int D.15937;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_41;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;
  unsigned int ivtmp_47;
  unsigned int ivtmp_48;
  unsigned int ivtmp_49;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s115 ");
  start_t_15 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # j_42 = PHI <0(5), j_17(11)>
  # ivtmp_49 = PHI <256(5), ivtmp_48(11)>
  _1 = aa[i_33][j_42];
  _2 = cc[j_42][i_33];
  _3 = _1 * _2;
  _4 = bb[i_33][j_42];
  _5 = _3 + _4;
  aa[i_33][j_42] = _5;
  j_17 = j_42 + 1;
  ivtmp_48 = ivtmp_49 - 1;
  if (ivtmp_48 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  i_18 = i_33 + 1;
  ivtmp_45 = ivtmp_47 - 1;
  if (ivtmp_45 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # i_33 = PHI <0(7), i_18(10)>
  # ivtmp_47 = PHI <256(7), ivtmp_45(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_32 + 1;
  ivtmp_41 = ivtmp_44 - 1;
  if (ivtmp_41 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_32 = PHI <0(2), nl_20(9)>
  # ivtmp_44 = PHI <3900(2), ivtmp_41(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_15;
  printf ("S1115\t %.3f \t\t", clock_dif_23);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s116 (s116, funcdef_no=580, decl_uid=8923, cgraph_uid=580, symbol_order=601)

s116 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  int _5;
  float _6;
  float _7;
  float _8;
  int _9;
  float _10;
  float _11;
  float _12;
  int _13;
  float _14;
  float _15;
  float _16;
  int _17;
  float _18;
  float _19;
  float _20;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;
  unsigned int ivtmp_46;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s116 ");
  start_t_28 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_48 = PHI <0(5), _17(8)>
  # ivtmp_46 = PHI <6399(5), ivtmp_45(8)>
  _1 = i_48 + 1;
  _2 = a[_1];
  _3 = a[i_48];
  _4 = _2 * _3;
  a[i_48] = _4;
  _5 = i_48 + 2;
  _6 = a[_5];
  _7 = a[_1];
  _8 = _6 * _7;
  a[_1] = _8;
  _9 = i_48 + 3;
  _10 = a[_9];
  _11 = a[_5];
  _12 = _10 * _11;
  a[_5] = _12;
  _13 = i_48 + 4;
  _14 = a[_13];
  _15 = a[_9];
  _16 = _14 * _15;
  a[_9] = _16;
  _17 = i_48 + 5;
  _18 = a[_17];
  _19 = a[_13];
  _20 = _18 * _19;
  a[_13] = _20;
  ivtmp_45 = ivtmp_46 - 1;
  if (ivtmp_45 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_35 = nl_47 + 1;
  ivtmp_43 = ivtmp_44 - 1;
  if (ivtmp_43 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_47 = PHI <0(2), nl_35(7)>
  # ivtmp_44 = PHI <100000(2), ivtmp_43(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_37 = mysecond ();
  clock_dif_38 = end_t_37 - start_t_28;
  printf ("S116\t %.3f \t\t", clock_dif_38);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s118 (s118, funcdef_no=581, decl_uid=8936, cgraph_uid=581, symbol_order=602)

s118 ()
{
  int i;
  int D.15990;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _2;
  int _3;
  int _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_52;
  unsigned int ivtmp_53;
  unsigned int ivtmp_54;
  float pretmp_58;
  float prephitmp_59;
  unsigned int ivtmp_62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s118 ");
  start_t_17 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # j_37 = PHI <0(5), j_19(11)>
  # prephitmp_59 = PHI <pretmp_58(5), _7(11)>
  _2 = bb[j_37][i_36];
  _3 = i_36 - j_37;
  _4 = _3 + -1;
  _5 = a[_4];
  _6 = _2 * _5;
  _7 = _6 + prephitmp_59;
  a[i_36] = _7;
  j_19 = j_37 + 1;
  if (j_19 < i_36)
    goto <bb 11>; [87.64%]
  else
    goto <bb 4>; [12.36%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  i_20 = i_36 + 1;
  ivtmp_54 = ivtmp_62 - 1;
  if (ivtmp_54 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # i_36 = PHI <1(7), i_20(10)>
  # ivtmp_62 = PHI <255(7), ivtmp_54(10)>
  pretmp_58 = a[i_36];
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_44 + 1;
  ivtmp_52 = ivtmp_53 - 1;
  if (ivtmp_52 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_44 = PHI <0(2), nl_22(9)>
  # ivtmp_53 = PHI <7800(2), ivtmp_52(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_17;
  printf ("S118\t %.3f \t\t", clock_dif_25);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s119 (s119, funcdef_no=582, decl_uid=8953, cgraph_uid=582, symbol_order=603)

Removing basic block 12
Merging blocks 5 and 16
s119 ()
{
  vector(4) float * vectp_aa.1053;
  vector(4) float * vectp_aa.1052;
  vector(4) float vect__5.1051;
  vector(4) float vect__4.1050;
  vector(4) float * vectp_bb.1049;
  vector(4) float * vectp_bb.1048;
  vector(4) float vect__3.1047;
  vector(4) float * vectp_aa.1046;
  vector(4) float * vectp_aa.1045;
  unsigned int tmp.1044;
  int tmp.1043;
  int i;
  int D.16021;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  sizetype _1;
  int _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  int _9;
  unsigned int ivtmp_10;
  sizetype _13;
  unsigned int ivtmp_30;
  unsigned int ivtmp_31;
  unsigned int ivtmp_36;
  unsigned int ivtmp_38;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  int _44;
  sizetype _47;
  sizetype _52;
  sizetype _53;
  sizetype _54;
  sizetype _60;
  sizetype _61;
  sizetype _62;
  unsigned int ivtmp_66;
  unsigned int ivtmp_67;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s119 ");
  start_t_15 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 13, loop depth 2
;;    pred:       3
;;    succ:       14

;;   basic block 14, loop depth 3
;;    pred:       13
;;                15
  # j_28 = PHI <253(13), j_37(15)>
  # ivtmp_10 = PHI <3(13), ivtmp_36(15)>
  _9 = j_28 + -1;
  _8 = aa[_44][_9];
  _7 = bb[i_33][j_28];
  _6 = _8 + _7;
  aa[i_33][j_28] = _6;
  j_37 = j_28 + 1;
  ivtmp_36 = ivtmp_10 - 1;
  if (ivtmp_36 != 0)
    goto <bb 15>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       15
;;                4

;;   basic block 15, loop depth 3
;;    pred:       14
  goto <bb 14>; [100.00%]
;;    succ:       14

;;   basic block 3, loop depth 3
;;    pred:       11
;;                5
  # j_42 = PHI <j_17(11), 1(5)>
  # ivtmp_41 = PHI <ivtmp_40(11), 255(5)>
  # vectp_aa.1045_48 = PHI <vectp_aa.1045_49(11), vectp_aa.1046_26(5)>
  # vectp_bb.1048_55 = PHI <vectp_bb.1048_56(11), vectp_bb.1049_51(5)>
  # vectp_aa.1052_63 = PHI <vectp_aa.1052_64(11), vectp_aa.1053_59(5)>
  # ivtmp_66 = PHI <ivtmp_67(11), 0(5)>
  _2 = j_42 + -1;
  vect__3.1047_50 = MEM[(float *)vectp_aa.1045_48];
  _3 = aa[_44][_2];
  vect__4.1050_57 = MEM[(float *)vectp_bb.1048_55];
  _4 = bb[i_33][j_42];
  vect__5.1051_58 = vect__3.1047_50 + vect__4.1050_57;
  _5 = _3 + _4;
  MEM[(float *)vectp_aa.1052_63] = vect__5.1051_58;
  j_17 = j_42 + 1;
  ivtmp_40 = ivtmp_41 - 1;
  vectp_aa.1045_49 = vectp_aa.1045_48 + 16;
  vectp_bb.1048_56 = vectp_bb.1048_55 + 16;
  vectp_aa.1052_64 = vectp_aa.1052_63 + 16;
  ivtmp_67 = ivtmp_66 + 1;
  if (ivtmp_67 < 63)
    goto <bb 11>; [96.00%]
  else
    goto <bb 13>; [4.00%]
;;    succ:       11
;;                13

;;   basic block 4, loop depth 2
;;    pred:       14
  i_18 = i_33 + 1;
  ivtmp_38 = ivtmp_39 - 1;
  if (ivtmp_38 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # i_33 = PHI <1(7), i_18(10)>
  # ivtmp_39 = PHI <255(7), ivtmp_38(10)>
  _44 = i_33 + -1;
  _1 = (sizetype) i_33;
  _13 = _1 * 1024;
  _47 = _13 + 18446744073709550592;
  vectp_aa.1046_26 = &aa + _47;
  _52 = (sizetype) i_33;
  _53 = _52 * 1024;
  _54 = _53 + 4;
  vectp_bb.1049_51 = &bb + _54;
  _60 = (sizetype) i_33;
  _61 = _60 * 1024;
  _62 = _61 + 4;
  vectp_aa.1053_59 = &aa + _62;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_32 + 1;
  ivtmp_30 = ivtmp_31 - 1;
  if (ivtmp_30 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_32 = PHI <0(2), nl_20(9)>
  # ivtmp_31 = PHI <7800(2), ivtmp_30(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_15;
  printf ("S119\t %.3f \t\t ", clock_dif_23);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s1119 (s1119, funcdef_no=583, decl_uid=8970, cgraph_uid=583, symbol_order=604)

Merging blocks 5 and 31
Merging blocks 19 and 30
s1119 ()
{
  vector(4) float * vectp_aa.1110;
  vector(4) float * vectp_aa.1109;
  vector(4) float vect__46.1108;
  vector(4) float vect__12.1107;
  vector(4) float * vectp_bb.1106;
  vector(4) float * vectp_bb.1105;
  vector(4) float vect__44.1104;
  vector(4) float * vectp_aa.1103;
  vector(4) float * vectp_aa.1102;
  vector(4) float * vectp_aa.1101;
  vector(4) float * vectp_aa.1100;
  vector(4) float vect__4.1099;
  vector(4) float vect__3.1098;
  vector(4) float * vectp_bb.1097;
  vector(4) float * vectp_bb.1096;
  vector(4) float vect__2.1095;
  vector(4) float * vectp_aa.1094;
  vector(4) float * vectp_aa.1093;
  vector(4) float * vectp_aa.1092;
  vector(4) float * vectp_aa.1091;
  vector(4) float vect__10.1090;
  vector(4) float vect__27.1089;
  vector(4) float * vectp_bb.1088;
  vector(4) float * vectp_bb.1087;
  vector(4) float vect__28.1086;
  vector(4) float * vectp_aa.1085;
  vector(4) float * vectp_aa.1084;
  int i;
  int D.16068;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  unsigned int ivtmp_1;
  float _2;
  float _3;
  float _4;
  unsigned int ivtmp_6;
  float _10;
  float _12;
  unsigned int ivtmp_16;
  unsigned int ivtmp_25;
  int _26;
  float _27;
  float _28;
  unsigned int ivtmp_35;
  int _36;
  unsigned int ivtmp_37;
  int _38;
  sizetype _40;
  unsigned int ivtmp_43;
  float _44;
  float _46;
  int ivtmp_50;
  int ivtmp_51;
  unsigned int ivtmp_53;
  sizetype _54;
  sizetype _55;
  sizetype _60;
  sizetype _61;
  sizetype _67;
  sizetype _68;
  unsigned int ivtmp_72;
  unsigned int ivtmp_73;
  sizetype _75;
  sizetype _76;
  sizetype _77;
  sizetype _82;
  sizetype _83;
  sizetype _89;
  sizetype _90;
  sizetype _95;
  sizetype _96;
  sizetype _101;
  sizetype _102;
  sizetype _103;
  sizetype _109;
  sizetype _110;
  sizetype _111;
  unsigned int ivtmp_115;
  unsigned int ivtmp_116;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s119 ");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 3, loop depth 3
;;    pred:       24
;;                5
  # j_41 = PHI <j_48(24), 0(5)>
  # ivtmp_16 = PHI <ivtmp_25(24), 256(5)>
  # vectp_aa.1093_78 = PHI <vectp_aa.1093_79(24), vectp_aa.1094_74(5)>
  # vectp_bb.1096_84 = PHI <vectp_bb.1096_85(24), vectp_bb.1097_81(5)>
  # vectp_aa.1100_91 = PHI <vectp_aa.1100_92(24), vectp_aa.1101_88(5)>
  # vectp_aa.1102_97 = PHI <vectp_aa.1102_98(24), vectp_aa.1103_94(5)>
  # vectp_bb.1105_104 = PHI <vectp_bb.1105_105(24), vectp_bb.1106_100(5)>
  # vectp_aa.1109_112 = PHI <vectp_aa.1109_113(24), vectp_aa.1110_108(5)>
  # ivtmp_115 = PHI <ivtmp_116(24), 0(5)>
  vect__2.1095_80 = MEM[(float *)vectp_aa.1093_78];
  _2 = aa[_36][j_41];
  vect__3.1098_86 = MEM[(float *)vectp_bb.1096_84];
  _3 = bb[i_32][j_41];
  vect__4.1099_87 = vect__2.1095_80 + vect__3.1098_86;
  _4 = _2 + _3;
  MEM[(float *)vectp_aa.1100_91] = vect__4.1099_87;
  i_17 = i_32 + 1;
  _26 = i_17 + -1;
  vect__44.1104_99 = MEM[(float *)vectp_aa.1102_97];
  _44 = aa[_26][j_41];
  vect__12.1107_106 = MEM[(float *)vectp_bb.1105_104];
  _12 = bb[i_17][j_41];
  vect__46.1108_107 = vect__44.1104_99 + vect__12.1107_106;
  _46 = _44 + _12;
  MEM[(float *)vectp_aa.1109_112] = vect__46.1108_107;
  j_48 = j_41 + 1;
  ivtmp_25 = ivtmp_16 - 1;
  vectp_aa.1093_79 = vectp_aa.1093_78 + 16;
  vectp_bb.1096_85 = vectp_bb.1096_84 + 16;
  vectp_aa.1100_92 = vectp_aa.1100_91 + 16;
  vectp_aa.1102_98 = vectp_aa.1102_97 + 16;
  vectp_bb.1105_105 = vectp_bb.1105_104 + 16;
  vectp_aa.1109_113 = vectp_aa.1109_112 + 16;
  ivtmp_116 = ivtmp_115 + 1;
  if (ivtmp_116 < 64)
    goto <bb 24>; [96.00%]
  else
    goto <bb 25>; [4.00%]
;;    succ:       24
;;                25

;;   basic block 24, loop depth 3
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 25, loop depth 2
;;    pred:       3
  # i_52 = PHI <i_17(3)>
  i_49 = i_52 + 1;
  ivtmp_51 = ivtmp_50 + 2;
  ivtmp_35 = ivtmp_1 - 1;
  if (ivtmp_35 != 0)
    goto <bb 27>; [98.00%]
  else
    goto <bb 19>; [2.00%]
;;    succ:       27
;;                19

;;   basic block 27, loop depth 2
;;    pred:       25
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 19, loop depth 1
;;    pred:       25
  # i_5 = PHI <i_49(25)>
  _38 = i_5 + -1;
  _40 = (sizetype) i_5;
  _54 = _40 * 1024;
  _55 = _54 + 18446744073709550592;
  vectp_aa.1085_39 = &aa + _55;
  _60 = (sizetype) i_5;
  _61 = _60 * 1024;
  vectp_bb.1088_59 = &bb + _61;
  _67 = (sizetype) i_5;
  _68 = _67 * 1024;
  vectp_aa.1092_66 = &aa + _68;
;;    succ:       13

;;   basic block 13, loop depth 2
;;    pred:       14
;;                19
  # j_30 = PHI <j_8(14), 0(19)>
  # ivtmp_6 = PHI <ivtmp_43(14), 256(19)>
  # vectp_aa.1084_56 = PHI <vectp_aa.1084_57(14), vectp_aa.1085_39(19)>
  # vectp_bb.1087_62 = PHI <vectp_bb.1087_63(14), vectp_bb.1088_59(19)>
  # vectp_aa.1091_69 = PHI <vectp_aa.1091_70(14), vectp_aa.1092_66(19)>
  # ivtmp_72 = PHI <ivtmp_73(14), 0(19)>
  vect__28.1086_58 = MEM[(float *)vectp_aa.1084_56];
  _28 = aa[_38][j_30];
  vect__27.1089_64 = MEM[(float *)vectp_bb.1087_62];
  _27 = bb[i_5][j_30];
  vect__10.1090_65 = vect__28.1086_58 + vect__27.1089_64;
  _10 = _28 + _27;
  MEM[(float *)vectp_aa.1091_69] = vect__10.1090_65;
  j_8 = j_30 + 1;
  ivtmp_43 = ivtmp_6 - 1;
  vectp_aa.1084_57 = vectp_aa.1084_56 + 16;
  vectp_bb.1087_63 = vectp_bb.1087_62 + 16;
  vectp_aa.1091_70 = vectp_aa.1091_69 + 16;
  ivtmp_73 = ivtmp_72 + 1;
  if (ivtmp_73 < 64)
    goto <bb 14>; [96.00%]
  else
    goto <bb 15>; [4.00%]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 2
;;    pred:       13
  goto <bb 13>; [100.00%]
;;    succ:       13

;;   basic block 15, loop depth 1
;;    pred:       13
  i_7 = i_5 + 1;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_19 = nl_31 + 1;
  ivtmp_53 = ivtmp_37 - 1;
  if (ivtmp_53 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 5, loop depth 2
;;    pred:       7
;;                27
  # i_32 = PHI <1(7), i_49(27)>
  # ivtmp_50 = PHI <2(7), ivtmp_51(27)>
  # ivtmp_1 = PHI <127(7), ivtmp_35(27)>
  _36 = i_32 + -1;
  _75 = (sizetype) i_32;
  _76 = _75 * 1024;
  _77 = _76 + 18446744073709550592;
  vectp_aa.1094_74 = &aa + _77;
  _82 = (sizetype) i_32;
  _83 = _82 * 1024;
  vectp_bb.1097_81 = &bb + _83;
  _89 = (sizetype) i_32;
  _90 = _89 * 1024;
  vectp_aa.1101_88 = &aa + _90;
  _95 = (sizetype) i_32;
  _96 = _95 * 1024;
  vectp_aa.1103_94 = &aa + _96;
  _101 = (sizetype) i_32;
  _102 = _101 + 1;
  _103 = _102 * 1024;
  vectp_bb.1106_100 = &bb + _103;
  _109 = (sizetype) i_32;
  _110 = _109 + 1;
  _111 = _110 * 1024;
  vectp_aa.1110_108 = &aa + _111;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 1
;;    pred:       15
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_31 = PHI <0(2), nl_19(9)>
  # ivtmp_37 = PHI <7800(2), ivtmp_53(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       15
  end_t_21 = mysecond ();
  clock_dif_22 = end_t_21 - start_t_14;
  printf ("S1119\t %.3f \t\t ", clock_dif_22);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s121 (s121, funcdef_no=584, decl_uid=8987, cgraph_uid=584, symbol_order=605)

Removing basic block 9
Merging blocks 5 and 13
s121 ()
{
  vector(4) float * vectp_a.1171;
  vector(4) float * vectp_a.1170;
  vector(4) float vect__3.1169;
  vector(4) float vect__2.1168;
  vector(4) float * vectp_b.1167;
  vector(4) float * vectp_b.1166;
  vector(4) float vect__1.1165;
  vector(4) float * vectp_a.1164;
  vector(4) float * vectp_a.1163;
  unsigned int tmp.1162;
  int tmp.1161;
  int i;
  int D.16151;
  int i;
  int nl;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_5;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  float _28;
  unsigned int ivtmp_30;
  float _33;
  unsigned int ivtmp_34;
  unsigned int ivtmp_35;
  float _37;
  unsigned int ivtmp_47;
  unsigned int ivtmp_48;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s121 ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_7 = PHI <31996(10), j_4(12)>
  # ivtmp_5 = PHI <3(10), ivtmp_30(12)>
  j_4 = i_7 + 1;
  _33 = a[j_4];
  _28 = b[i_7];
  _37 = _33 + _28;
  a[i_7] = _37;
  ivtmp_30 = ivtmp_5 - 1;
  if (ivtmp_30 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_26 = PHI <j_12(8), 0(5)>
  # ivtmp_35 = PHI <ivtmp_34(8), 31999(5)>
  # vectp_a.1163_32 = PHI <vectp_a.1163_39(8), vectp_a.1164_31(5)>
  # vectp_b.1166_40 = PHI <vectp_b.1166_9(8), &b(5)>
  # vectp_a.1170_44 = PHI <vectp_a.1170_45(8), &a(5)>
  # ivtmp_47 = PHI <ivtmp_48(8), 0(5)>
  j_12 = i_26 + 1;
  vect__1.1165_21 = MEM[(float *)vectp_a.1163_32];
  _1 = a[j_12];
  vect__2.1168_42 = MEM[(float *)vectp_b.1166_40];
  _2 = b[i_26];
  vect__3.1169_43 = vect__1.1165_21 + vect__2.1168_42;
  _3 = _1 + _2;
  MEM[(float *)vectp_a.1170_44] = vect__3.1169_43;
  ivtmp_34 = ivtmp_35 - 1;
  vectp_a.1163_39 = vectp_a.1163_32 + 16;
  vectp_b.1166_9 = vectp_b.1166_40 + 16;
  vectp_a.1170_45 = vectp_a.1170_44 + 16;
  ivtmp_48 = ivtmp_47 + 1;
  if (ivtmp_48 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_23 = ivtmp_24 - 1;
  if (ivtmp_23 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_24 = PHI <30000(2), ivtmp_23(7)>
  vectp_a.1164_31 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("S121\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s122 (s122, funcdef_no=585, decl_uid=9003, cgraph_uid=585, symbol_order=606)

s122 (int n1, int n3)
{
  int i;
  int D.16183;
  int i;
  int nl;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  float _3;
  float _4;
  unsigned int ivtmp_31;
  unsigned int ivtmp_36;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s122 ");
  start_t_13 = mysecond ();
  i_15 = n1_14(D) + -1;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                8
  # nl_30 = PHI <0(2), nl_21(8)>
  # ivtmp_31 = PHI <10000(2), ivtmp_36(8)>
  if (i_15 <= 31999)
    goto <bb 7>; [89.00%]
  else
    goto <bb 5>; [11.00%]
;;    succ:       7
;;                5

;;   basic block 7, loop depth 1
;;    pred:       3
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       7
;;                9
  # k_9 = PHI <0(7), k_16(9)>
  # i_39 = PHI <i_15(7), i_19(9)>
  k_16 = k_9 + 1;
  _1 = a[i_39];
  _2 = 32000 - k_16;
  _3 = b[_2];
  _4 = _1 + _3;
  a[i_39] = _4;
  i_19 = n3_18(D) + i_39;
  if (i_19 <= 31999)
    goto <bb 9>; [89.00%]
  else
    goto <bb 5>; [11.00%]
;;    succ:       9
;;                5

;;   basic block 9, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 1
;;    pred:       3
;;                4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_30 + 1;
  ivtmp_36 = ivtmp_31 - 1;
  if (ivtmp_36 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       8
;;                6

;;   basic block 8, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_13;
  printf ("S122\t %.3f \t\t", clock_dif_24);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s123 (s123, funcdef_no=586, decl_uid=9018, cgraph_uid=586, symbol_order=607)

s123 ()
{
  int i;
  int nl;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_45;
  unsigned int ivtmp_46;
  unsigned int ivtmp_50;
  unsigned int ivtmp_51;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s123 ");
  start_t_18 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # j_38 = PHI <-1(7), j_8(10)>
  # i_40 = PHI <0(7), i_23(10)>
  # ivtmp_51 = PHI <16000(7), ivtmp_50(10)>
  j_19 = j_38 + 1;
  _1 = b[i_40];
  _2 = d[i_40];
  _3 = e[i_40];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[j_19] = _5;
  _6 = c[i_40];
  if (_6 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  j_21 = j_38 + 2;
  _7 = _4 + _6;
  a[j_21] = _7;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  # j_8 = PHI <j_21(4), j_19(3)>
  i_23 = i_40 + 1;
  ivtmp_50 = ivtmp_51 - 1;
  if (ivtmp_50 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_25 = nl_39 + 1;
  ivtmp_45 = ivtmp_46 - 1;
  if (ivtmp_45 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_39 = PHI <0(2), nl_25(9)>
  # ivtmp_46 = PHI <10000(2), ivtmp_45(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_18;
  printf ("S123\t %.3f \t\t", clock_dif_28);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s124 (s124, funcdef_no=587, decl_uid=9032, cgraph_uid=587, symbol_order=608)

Removing basic block 10
Removing basic block 11
Removing basic block 7
Removing basic block 3
Removing basic block 8
Removing basic block 21
Removing basic block 27
Removing basic block 32
Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 23
Removing basic block 30
Merging blocks 2 and 22
Merging blocks 12 and 29
Merging blocks 31 and 18
Merging blocks 12 and 33
s124 ()
{
  vector(4) float * vectp_a.1249;
  vector(4) float * vectp_a.1248;
  vector(4) float vect__ifc__88.1247;
  vector(4) float vect__ifc__87.1246;
  vector(4) float vect__ifc__86.1245;
  vector(4) float * vectp_a.1244;
  vector(4) float * vectp_a.1243;
  vector(4) float vect__8.1242;
  vector(4) float vect__7.1241;
  vector(4) float * vectp_c.1240;
  vector(4) float * vectp_c.1239;
  vector(4) float * vectp_a.1238;
  vector(4) float * vectp_a.1237;
  vector(4) float vect__ifc__85.1236;
  vector(4) float vect__ifc__84.1235;
  vector(4) float vect__ifc__83.1234;
  vector(4) float * vectp_a.1233;
  vector(4) float * vectp_a.1232;
  vector(4) float vect__22.1231;
  vector(4) float vect__16.1230;
  vector(4) float vect_pretmp_17.1229;
  vector(4) float * vectp_e.1228;
  vector(4) float * vectp_e.1227;
  vector(4) float vect_pretmp_34.1226;
  vector(4) float * vectp_d.1225;
  vector(4) float * vectp_d.1224;
  vector(4) float vect__12.1223;
  vector(4) float * vectp_b.1222;
  vector(4) float * vectp_b.1221;
  int i;
  int nl;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _7;
  float _8;
  unsigned int ivtmp_11;
  float _12;
  unsigned int ivtmp_13;
  float _16;
  float pretmp_17;
  float _22;
  int _24;
  float pretmp_34;
  unsigned int ivtmp_37;
  _Bool _40;
  unsigned int ivtmp_56;
  _Bool _64;
  float _ifc__83;
  float _ifc__84;
  float _ifc__85;
  float _ifc__86;
  float _ifc__87;
  float _ifc__88;
  vector(4) float vect_cst__104;
  vector(4) float vect_cst__117;
  unsigned int ivtmp_122;
  unsigned int ivtmp_123;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s124 ");
  start_t_21 = mysecond ();
  _40 = 0;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       19
;;                2
  # nl_39 = PHI <nl_55(19), 0(2)>
  # ivtmp_37 = PHI <ivtmp_56(19), 10000(2)>
  _64 = 1;
  vect_cst__104 = { 0.0, 0.0, 0.0, 0.0 };
  vect_cst__117 = { 0.0, 0.0, 0.0, 0.0 };
;;    succ:       13

;;   basic block 13, loop depth 2
;;    pred:       17
;;                12
  # j_36 = PHI <_24(17), -1(12)>
  # i_35 = PHI <i_4(17), 0(12)>
  # ivtmp_13 = PHI <ivtmp_11(17), 32000(12)>
  # vectp_b.1221_89 = PHI <vectp_b.1221_90(17), &b(12)>
  # vectp_d.1224_92 = PHI <vectp_d.1224_93(17), &d(12)>
  # vectp_e.1227_95 = PHI <vectp_e.1227_96(17), &e(12)>
  # vectp_a.1232_100 = PHI <vectp_a.1232_101(17), &a(12)>
  # vectp_a.1237_106 = PHI <vectp_a.1237_107(17), &a(12)>
  # vectp_c.1239_109 = PHI <vectp_c.1239_110(17), &c(12)>
  # vectp_a.1243_113 = PHI <vectp_a.1243_114(17), &a(12)>
  # vectp_a.1248_119 = PHI <vectp_a.1248_120(17), &a(12)>
  # ivtmp_122 = PHI <ivtmp_123(17), 0(12)>
  vect__12.1223_91 = MEM[(float *)vectp_b.1221_89];
  _12 = b[i_35];
  vect_pretmp_34.1226_94 = MEM[(float *)vectp_d.1224_92];
  pretmp_34 = d[i_35];
  vect_pretmp_17.1229_97 = MEM[(float *)vectp_e.1227_95];
  pretmp_17 = e[i_35];
  vect__16.1230_98 = vect_pretmp_34.1226_94 * vect_pretmp_17.1229_97;
  _16 = pretmp_34 * pretmp_17;
  _24 = j_36 + 1;
  vect__22.1231_99 = vect__12.1223_91 + vect__16.1230_98;
  _22 = _12 + _16;
  vect__ifc__83.1234_102 = MEM[(float *)vectp_a.1232_100];
  _ifc__83 = a[_24];
  vect__ifc__84.1235_103 = vect__22.1231_99;
  _ifc__84 = _22;
  vect__ifc__85.1236_105 = VEC_COND_EXPR <vect__12.1223_91 > vect_cst__104, vect__ifc__84.1235_103, vect__ifc__83.1234_102>;
  _ifc__85 = _12 > 0.0 ? _ifc__84 : _ifc__83;
  MEM[(float *)vectp_a.1237_106] = vect__ifc__85.1236_105;
  vect__7.1241_111 = MEM[(float *)vectp_c.1239_109];
  _7 = c[i_35];
  vect__8.1242_112 = vect__7.1241_111 + vect__16.1230_98;
  _8 = _7 + _16;
  vect__ifc__86.1245_115 = MEM[(float *)vectp_a.1243_113];
  _ifc__86 = a[_24];
  vect__ifc__87.1246_116 = vect__8.1242_112;
  _ifc__87 = _8;
  vect__ifc__88.1247_118 = VEC_COND_EXPR <vect__12.1223_91 > vect_cst__117, vect__ifc__86.1245_115, vect__ifc__87.1246_116>;
  _ifc__88 = _12 > 0.0 ? _ifc__86 : _ifc__87;
  MEM[(float *)vectp_a.1248_119] = vect__ifc__88.1247_118;
  i_4 = i_35 + 1;
  ivtmp_11 = ivtmp_13 - 1;
  vectp_b.1221_90 = vectp_b.1221_89 + 16;
  vectp_d.1224_93 = vectp_d.1224_92 + 16;
  vectp_e.1227_96 = vectp_e.1227_95 + 16;
  vectp_a.1232_101 = vectp_a.1232_100 + 16;
  vectp_a.1237_107 = vectp_a.1237_106 + 16;
  vectp_c.1239_110 = vectp_c.1239_109 + 16;
  vectp_a.1243_114 = vectp_a.1243_113 + 16;
  vectp_a.1248_120 = vectp_a.1248_119 + 16;
  ivtmp_123 = ivtmp_122 + 1;
  if (ivtmp_123 < 8000)
    goto <bb 17>; [96.00%]
  else
    goto <bb 31>; [4.00%]
;;    succ:       17
;;                31

;;   basic block 17, loop depth 2
;;    pred:       13
  goto <bb 13>; [100.00%]
;;    succ:       13

;;   basic block 31, loop depth 1
;;    pred:       13
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_55 = nl_39 + 1;
  ivtmp_56 = ivtmp_37 - 1;
  if (ivtmp_56 != 0)
    goto <bb 19>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       19
;;                9

;;   basic block 19, loop depth 1
;;    pred:       31
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 9, loop depth 0
;;    pred:       31
  end_t_30 = mysecond ();
  clock_dif_31 = end_t_30 - start_t_21;
  printf ("S124\t %.3f \t\t", clock_dif_31);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s125 (s125, funcdef_no=588, decl_uid=9046, cgraph_uid=588, symbol_order=609)

Merging blocks 5 and 12
s125 ()
{
  vector(4) float * vectp_array.1282;
  vector(4) float * vectp_array.1281;
  vector(4) float vect__5.1280;
  vector(4) float vect__4.1279;
  vector(4) float vect__3.1278;
  vector(4) float * vectp_cc.1277;
  vector(4) float * vectp_cc.1276;
  vector(4) float vect__2.1275;
  vector(4) float * vectp_bb.1274;
  vector(4) float * vectp_bb.1273;
  vector(4) float vect__1.1272;
  vector(4) float * vectp_aa.1271;
  vector(4) float * vectp_aa.1270;
  int i;
  int D.16278;
  int j;
  int i;
  int nl;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  sizetype _6;
  sizetype _13;
  sizetype _15;
  sizetype _34;
  sizetype _35;
  sizetype _44;
  sizetype _45;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;
  sizetype _55;
  sizetype _56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  unsigned int ivtmp_59;
  unsigned int ivtmp_60;
  unsigned int ivtmp_63;
  unsigned int ivtmp_64;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s125 ");
  start_t_17 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       11
;;                5
  # k_38 = PHI <k_19(11), k_39(5)>
  # j_41 = PHI <j_21(11), 0(5)>
  # ivtmp_60 = PHI <ivtmp_59(11), 256(5)>
  # vectp_aa.1270_43 = PHI <vectp_aa.1270_42(11), vectp_aa.1271_46(5)>
  # vectp_bb.1273_33 = PHI <vectp_bb.1273_32(11), vectp_bb.1274_36(5)>
  # vectp_cc.1276_12 = PHI <vectp_cc.1276_11(11), vectp_cc.1277_18(5)>
  # vectp_array.1281_54 = PHI <vectp_array.1281_53(11), vectp_array.1282_7(5)>
  # ivtmp_63 = PHI <ivtmp_64(11), 0(5)>
  k_19 = k_38 + 1;
  vect__1.1272_37 = MEM[(float *)vectp_aa.1270_43];
  _1 = aa[i_40][j_41];
  vect__2.1275_31 = MEM[(float *)vectp_bb.1273_33];
  _2 = bb[i_40][j_41];
  vect__3.1278_10 = MEM[(float *)vectp_cc.1276_12];
  _3 = cc[i_40][j_41];
  vect__4.1279_9 = vect__2.1275_31 * vect__3.1278_10;
  _4 = _2 * _3;
  vect__5.1280_8 = vect__1.1272_37 + vect__4.1279_9;
  _5 = _1 + _4;
  MEM[(float *)vectp_array.1281_54] = vect__5.1280_8;
  j_21 = j_41 + 1;
  ivtmp_59 = ivtmp_60 - 1;
  vectp_aa.1270_42 = vectp_aa.1270_43 + 16;
  vectp_bb.1273_32 = vectp_bb.1273_33 + 16;
  vectp_cc.1276_11 = vectp_cc.1276_12 + 16;
  vectp_array.1281_53 = vectp_array.1281_54 + 16;
  ivtmp_64 = ivtmp_63 + 1;
  if (ivtmp_64 < 64)
    goto <bb 11>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  k_61 = k_39 + 256;
  i_22 = i_40 + 1;
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # k_39 = PHI <-1(7), k_61(10)>
  # i_40 = PHI <0(7), i_22(10)>
  # ivtmp_58 = PHI <256(7), ivtmp_57(10)>
  _45 = (sizetype) i_40;
  _44 = _45 * 1024;
  vectp_aa.1271_46 = &aa + _44;
  _35 = (sizetype) i_40;
  _34 = _35 * 1024;
  vectp_bb.1274_36 = &bb + _34;
  _15 = (sizetype) i_40;
  _13 = _15 * 1024;
  vectp_cc.1277_18 = &cc + _13;
  _6 = (sizetype) k_39;
  _56 = _6 + 1;
  _55 = _56 * 4;
  vectp_array.1282_7 = &array + _55;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_47 + 1;
  ivtmp_51 = ivtmp_52 - 1;
  if (ivtmp_51 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_47 = PHI <0(2), nl_24(9)>
  # ivtmp_52 = PHI <3900(2), ivtmp_51(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_17;
  printf ("S125\t %.3f \t\t", clock_dif_27);
  check (0);
  return 0;
;;    succ:       EXIT

}



;; Function s126 (s126, funcdef_no=589, decl_uid=9064, cgraph_uid=589, symbol_order=610)

s126 ()
{
  int j;
  int i;
  int nl;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  int _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_61;
  unsigned int ivtmp_66;
  unsigned int ivtmp_69;
  unsigned int ivtmp_70;
  unsigned int ivtmp_71;
  unsigned int ivtmp_72;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s126 ");
  start_t_19 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # k_44 = PHI <k_45(5), k_22(11)>
  # j_48 = PHI <1(5), j_23(11)>
  # ivtmp_72 = PHI <255(5), ivtmp_71(11)>
  _1 = j_48 + -1;
  _2 = bb[_1][i_47];
  _3 = k_44 + -1;
  _4 = array[_3];
  _5 = cc[j_48][i_47];
  _6 = _4 * _5;
  _7 = _2 + _6;
  bb[j_48][i_47] = _7;
  k_22 = k_44 + 1;
  j_23 = j_48 + 1;
  ivtmp_71 = ivtmp_72 - 1;
  if (ivtmp_71 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  k_73 = k_45 + 254;
  k_24 = k_73 + 2;
  i_25 = i_47 + 1;
  ivtmp_69 = ivtmp_70 - 1;
  if (ivtmp_69 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # k_45 = PHI <1(7), k_24(10)>
  # i_47 = PHI <0(7), i_25(10)>
  # ivtmp_70 = PHI <256(7), ivtmp_69(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_27 = nl_46 + 1;
  ivtmp_61 = ivtmp_66 - 1;
  if (ivtmp_61 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_46 = PHI <0(2), nl_27(9)>
  # ivtmp_66 = PHI <390(2), ivtmp_61(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_29 = mysecond ();
  clock_dif_30 = end_t_29 - start_t_19;
  printf ("S126\t %.3f \t\t", clock_dif_30);
  check (22);
  return 0;
;;    succ:       EXIT

}



;; Function s127 (s127, funcdef_no=590, decl_uid=9082, cgraph_uid=590, symbol_order=611)

Merging blocks 5 and 9
s127 ()
{
  vector(4) float * vectp_a.1369;
  vector(4) float * vectp_a.1368;
  vector(4) float vect__8.1367;
  vector(4) float vect__7.1366;
  vector(4) float vect__6.1365;
  vector(4) float * vectp_e.1364;
  vector(4) float * vectp_e.1363;
  vector(4) float vect__5.1362;
  vector(4) float vect__4.1361;
  vector(4) float vect__3.1360;
  vector(4) float * vectp_d.1359;
  vector(4) float * vectp_d.1358;
  vector(4) float vect__2.1357;
  vector(4) float * vectp_c.1356;
  vector(4) float * vectp_c.1355;
  vector(4) float vect__1.1354;
  vector(4) float * vectp_b.1353;
  vector(4) float * vectp_b.1352;
  int i;
  int nl;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  unsigned int ivtmp_10;
  unsigned int ivtmp_11;
  vector(4) float vect_inter_low_31;
  vector(4) float vect_inter_high_32;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;
  unsigned int ivtmp_63;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s127 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # j_37 = PHI <j_20(8), -1(5)>
  # i_39 = PHI <i_22(8), 0(5)>
  # ivtmp_63 = PHI <ivtmp_62(8), 16000(5)>
  # vectp_b.1352_59 = PHI <vectp_b.1352_58(8), &b(5)>
  # vectp_c.1355_52 = PHI <vectp_c.1355_51(8), &c(5)>
  # vectp_d.1358_49 = PHI <vectp_d.1358_48(8), &d(5)>
  # vectp_e.1363_44 = PHI <vectp_e.1363_43(8), &e(5)>
  # vectp_a.1368_34 = PHI <vectp_a.1368_33(8), &a(5)>
  # ivtmp_11 = PHI <ivtmp_10(8), 0(5)>
  j_18 = j_37 + 1;
  vect__1.1354_53 = MEM[(float *)vectp_b.1352_59];
  _1 = b[i_39];
  vect__2.1357_50 = MEM[(float *)vectp_c.1355_52];
  _2 = c[i_39];
  vect__3.1360_47 = MEM[(float *)vectp_d.1358_49];
  _3 = d[i_39];
  vect__4.1361_46 = vect__2.1357_50 * vect__3.1360_47;
  _4 = _2 * _3;
  vect__5.1362_45 = vect__1.1354_53 + vect__4.1361_46;
  _5 = _1 + _4;
  j_20 = j_37 + 2;
  vect__6.1365_42 = MEM[(float *)vectp_e.1363_44];
  _6 = e[i_39];
  vect__7.1366_36 = vect__3.1360_47 * vect__6.1365_42;
  _7 = _3 * _6;
  vect__8.1367_35 = vect__1.1354_53 + vect__7.1366_36;
  _8 = _1 + _7;
  vect_inter_high_32 = VEC_PERM_EXPR <vect__5.1362_45, vect__8.1367_35, { 0, 4, 1, 5 }>;
  vect_inter_low_31 = VEC_PERM_EXPR <vect__5.1362_45, vect__8.1367_35, { 2, 6, 3, 7 }>;
  MEM[(float *)vectp_a.1368_34] = vect_inter_high_32;
  vectp_a.1368_13 = vectp_a.1368_34 + 16;
  MEM[(float *)vectp_a.1368_13] = vect_inter_low_31;
  i_22 = i_39 + 1;
  ivtmp_62 = ivtmp_63 - 1;
  vectp_b.1352_58 = vectp_b.1352_59 + 16;
  vectp_c.1355_51 = vectp_c.1355_52 + 16;
  vectp_d.1358_48 = vectp_d.1358_49 + 16;
  vectp_e.1363_43 = vectp_e.1363_44 + 16;
  vectp_a.1368_33 = vectp_a.1368_13 + 16;
  ivtmp_10 = ivtmp_11 + 1;
  if (ivtmp_10 < 4000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_38 + 1;
  ivtmp_60 = ivtmp_61 - 1;
  if (ivtmp_60 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_38 = PHI <0(2), nl_24(7)>
  # ivtmp_61 = PHI <20000(2), ivtmp_60(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_17;
  printf ("S127\t %.3f \t\t", clock_dif_27);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s128 (s128, funcdef_no=591, decl_uid=9096, cgraph_uid=591, symbol_order=612)

Merging blocks 5 and 9
s128 ()
{
  vector(4) float vect__5.1405;
  vector(4) float vect__4.1404;
  vector(4) float vect__4.1403;
  vector(4) float * vectp_c.1402;
  vector(4) float * vectp_c.1401;
  vector(4) float * vectp_a.1400;
  vector(4) float * vectp_a.1399;
  vector(4) float vect__3.1398;
  vector(4) float vect__2.1397;
  vector(4) float * vectp_d.1396;
  vector(4) float * vectp_d.1395;
  vector(4) float vect__1.1394;
  vector(4) float vect__1.1393;
  vector(4) float * vectp_b.1392;
  vector(4) float * vectp_b.1391;
  int i;
  int D.16411;
  int i;
  int nl;
  int k;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  vector(4) float vect_perm_odd_29;
  vector(4) float vect_perm_even_30;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_44;
  vector(4) float vect_perm_even_50;
  vector(4) float vect_perm_odd_51;
  float[32000] * ivtmp_53;
  float[32000] * ivtmp_54;
  float _55;
  float[32000] * ivtmp_57;
  float _58;
  float[32000] * ivtmp_60;
  float _61;
  float[32000] * ivtmp_63;
  float _64;
  float[32000] * ivtmp_66;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s128 ");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # j_32 = PHI <j_17(8), -1(5)>
  # i_33 = PHI <i_19(8), 0(5)>
  # ivtmp_44 = PHI <ivtmp_41(8), 16000(5)>
  # vectp_b.1391_38 = PHI <vectp_b.1391_37(8), &b(5)>
  # vectp_d.1395_28 = PHI <vectp_d.1395_10(8), &d(5)>
  # vectp_a.1399_7 = PHI <vectp_a.1399_6(8), &a(5)>
  # vectp_c.1401_45 = PHI <vectp_c.1401_27(8), &c(5)>
  # ivtmp_53 = PHI <ivtmp_54(8), &b(5)>
  # ivtmp_67 = PHI <ivtmp_68(8), 0(5)>
  k_15 = j_32 + 1;
  vect__1.1393_36 = MEM[(float *)vectp_b.1391_38];
  vectp_b.1391_35 = vectp_b.1391_38 + 16;
  vect__1.1394_31 = MEM[(float *)vectp_b.1391_35];
  vect_perm_even_30 = VEC_PERM_EXPR <vect__1.1393_36, vect__1.1394_31, { 0, 2, 4, 6 }>;
  vect_perm_odd_29 = VEC_PERM_EXPR <vect__1.1393_36, vect__1.1394_31, { 1, 3, 5, 7 }>;
  _1 = b[k_15];
  vect__2.1397_9 = MEM[(float *)vectp_d.1395_28];
  _2 = d[i_33];
  vect__3.1398_8 = vect_perm_even_30 - vect__2.1397_9;
  _3 = _1 - _2;
  MEM[(float *)vectp_a.1399_7] = vect__3.1398_8;
  j_17 = j_32 + 2;
  vect__4.1403_12 = MEM[(float *)vectp_c.1401_45];
  vectp_c.1401_48 = vectp_c.1401_45 + 16;
  vect__4.1404_49 = MEM[(float *)vectp_c.1401_48];
  vect_perm_even_50 = VEC_PERM_EXPR <vect__4.1403_12, vect__4.1404_49, { 0, 2, 4, 6 }>;
  vect_perm_odd_51 = VEC_PERM_EXPR <vect__4.1403_12, vect__4.1404_49, { 1, 3, 5, 7 }>;
  _4 = c[k_15];
  vect__5.1405_52 = vect__3.1398_8 + vect_perm_even_50;
  _5 = _3 + _4;
  _55 = BIT_FIELD_REF <vect__5.1405_52, 32, 0>;
  MEM[(float *)ivtmp_53] = _55;
  ivtmp_57 = ivtmp_53 + 8;
  _58 = BIT_FIELD_REF <vect__5.1405_52, 32, 32>;
  MEM[(float *)ivtmp_57] = _58;
  ivtmp_60 = ivtmp_57 + 8;
  _61 = BIT_FIELD_REF <vect__5.1405_52, 32, 64>;
  MEM[(float *)ivtmp_60] = _61;
  ivtmp_63 = ivtmp_60 + 8;
  _64 = BIT_FIELD_REF <vect__5.1405_52, 32, 96>;
  MEM[(float *)ivtmp_63] = _64;
  ivtmp_66 = ivtmp_63 + 8;
  i_19 = i_33 + 1;
  ivtmp_41 = ivtmp_44 - 1;
  vectp_b.1391_37 = vectp_b.1391_35 + 16;
  vectp_d.1395_10 = vectp_d.1395_28 + 16;
  vectp_a.1399_6 = vectp_a.1399_7 + 16;
  vectp_c.1401_27 = vectp_c.1401_48 + 16;
  ivtmp_54 = ivtmp_53 + 32;
  ivtmp_68 = ivtmp_67 + 1;
  if (ivtmp_68 < 4000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_21 = nl_42 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  if (ivtmp_39 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_42 = PHI <0(2), nl_21(7)>
  # ivtmp_40 = PHI <20000(2), ivtmp_39(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_14;
  printf ("S128\t %.3f \t\t", clock_dif_24);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s131 (s131, funcdef_no=592, decl_uid=9111, cgraph_uid=592, symbol_order=613)

Removing basic block 9
Merging blocks 5 and 13
s131 ()
{
  vector(4) float * vectp_a.1434;
  vector(4) float * vectp_a.1433;
  vector(4) float vect__4.1432;
  vector(4) float vect__3.1431;
  vector(4) float * vectp_b.1430;
  vector(4) float * vectp_b.1429;
  vector(4) float vect__2.1428;
  vector(4) float * vectp_a.1427;
  vector(4) float * vectp_a.1426;
  unsigned int tmp.1425;
  int tmp.1424;
  int i;
  int D.16450;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  int _5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  float _28;
  unsigned int ivtmp_30;
  float _33;
  unsigned int ivtmp_34;
  unsigned int ivtmp_35;
  float _37;
  unsigned int ivtmp_47;
  unsigned int ivtmp_48;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s131 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_8 = PHI <31996(10), _5(12)>
  # ivtmp_6 = PHI <3(10), ivtmp_30(12)>
  _5 = i_8 + 1;
  _33 = a[_5];
  _28 = b[i_8];
  _37 = _33 + _28;
  a[i_8] = _37;
  ivtmp_30 = ivtmp_6 - 1;
  if (ivtmp_30 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_26 = PHI <_1(8), 0(5)>
  # ivtmp_35 = PHI <ivtmp_34(8), 31999(5)>
  # vectp_a.1426_32 = PHI <vectp_a.1426_39(8), vectp_a.1427_31(5)>
  # vectp_b.1429_40 = PHI <vectp_b.1429_10(8), &b(5)>
  # vectp_a.1433_44 = PHI <vectp_a.1433_45(8), &a(5)>
  # ivtmp_47 = PHI <ivtmp_48(8), 0(5)>
  _1 = i_26 + 1;
  vect__2.1428_21 = MEM[(float *)vectp_a.1426_32];
  _2 = a[_1];
  vect__3.1431_42 = MEM[(float *)vectp_b.1429_40];
  _3 = b[i_26];
  vect__4.1432_43 = vect__2.1428_21 + vect__3.1431_42;
  _4 = _2 + _3;
  MEM[(float *)vectp_a.1433_44] = vect__4.1432_43;
  ivtmp_34 = ivtmp_35 - 1;
  vectp_a.1426_39 = vectp_a.1426_32 + 16;
  vectp_b.1429_10 = vectp_b.1429_40 + 16;
  vectp_a.1433_45 = vectp_a.1433_44 + 16;
  ivtmp_48 = ivtmp_47 + 1;
  if (ivtmp_48 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_23 = ivtmp_24 - 1;
  if (ivtmp_23 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_24 = PHI <50000(2), ivtmp_23(7)>
  vectp_a.1427_31 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_12;
  printf ("S131\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s132 (s132, funcdef_no=593, decl_uid=9125, cgraph_uid=593, symbol_order=614)

Removing basic block 9
Merging blocks 5 and 13
s132 ()
{
  vector(4) float * vectp_aa.1461;
  vector(4) float * vectp_aa.1460;
  vector(4) float vect__6.1459;
  vector(4) float vect__5.1458;
  vector(4) float vect__3.1457;
  vector(4) float * vectp_b.1456;
  vector(4) float * vectp_b.1455;
  vector(4) float vect__2.1454;
  vector(4) float * vectp_aa.1453;
  vector(4) float * vectp_aa.1452;
  unsigned int tmp.1451;
  int tmp.1450;
  int i;
  int D.16482;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_9;
  float _24;
  float _25;
  float _26;
  float _27;
  int _31;
  unsigned int ivtmp_32;
  unsigned int ivtmp_38;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_43;
  vector(4) float vect_cst__49;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s132 ");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_36 = PHI <253(10), i_10(12)>
  # ivtmp_32 = PHI <3(10), ivtmp_9(12)>
  _31 = i_36 + -1;
  _27 = aa[1][_31];
  _26 = b[i_36];
  _25 = _26 * _4;
  _24 = _27 + _25;
  aa[0][i_36] = _24;
  i_10 = i_36 + 1;
  ivtmp_9 = ivtmp_32 - 1;
  if (ivtmp_9 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_29 = PHI <i_16(8), 1(5)>
  # ivtmp_43 = PHI <ivtmp_41(8), 255(5)>
  # vectp_aa.1452_42 = PHI <vectp_aa.1452_35(8), vectp_aa.1453_7(5)>
  # vectp_b.1455_46 = PHI <vectp_b.1455_47(8), vectp_b.1456_45(5)>
  # vectp_aa.1460_53 = PHI <vectp_aa.1460_54(8), vectp_aa.1461_52(5)>
  # ivtmp_56 = PHI <ivtmp_57(8), 0(5)>
  _1 = i_29 + -1;
  vect__2.1454_34 = MEM[(float *)vectp_aa.1452_42];
  _2 = aa[1][_1];
  vect__3.1457_48 = MEM[(float *)vectp_b.1455_46];
  _3 = b[i_29];
  vect__5.1458_50 = vect__3.1457_48 * vect_cst__49;
  _5 = _3 * _4;
  vect__6.1459_51 = vect__2.1454_34 + vect__5.1458_50;
  _6 = _2 + _5;
  MEM[(float *)vectp_aa.1460_53] = vect__6.1459_51;
  i_16 = i_29 + 1;
  ivtmp_41 = ivtmp_43 - 1;
  vectp_aa.1452_35 = vectp_aa.1452_42 + 16;
  vectp_b.1455_47 = vectp_b.1455_46 + 16;
  vectp_aa.1460_54 = vectp_aa.1460_53 + 16;
  ivtmp_57 = ivtmp_56 + 1;
  if (ivtmp_57 < 63)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_38 = ivtmp_40 - 1;
  if (ivtmp_38 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_40 = PHI <4000000(2), ivtmp_38(7)>
  _4 = c[1];
  vectp_aa.1453_7 = &aa + 1024;
  vectp_b.1456_45 = &b + 4;
  vect_cst__49 = {_4, _4, _4, _4};
  vectp_aa.1461_52 = &aa + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S132\t %.3f \t\t", clock_dif_21);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s141 (s141, funcdef_no=594, decl_uid=9141, cgraph_uid=594, symbol_order=615)

s141 ()
{
  int i;
  int D.16518;
  int j;
  int i;
  int nl;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  int _2;
  int _3;
  int _4;
  float _5;
  float _6;
  float _7;
  int _8;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;
  unsigned int ivtmp_48;
  unsigned int ivtmp_56;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s141 ");
  start_t_19 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_38 = PHI <0(7), _1(10)>
  # ivtmp_56 = PHI <256(7), ivtmp_48(10)>
  _1 = i_38 + 1;
  _2 = _1 * i_38;
  _3 = _2 >> 1;
  _4 = _1 + _3;
  k_20 = _4 + -1;
;;    succ:       4

;;   basic block 4, loop depth 3
;;    pred:       3
;;                11
  # k_37 = PHI <k_20(3), k_22(11)>
  # j_39 = PHI <i_38(3), _8(11)>
  _5 = array[k_37];
  _6 = bb[j_39][i_38];
  _7 = _5 + _6;
  array[k_37] = _7;
  _8 = j_39 + 1;
  k_22 = _8 + k_37;
  if (_8 != 256)
    goto <bb 11>; [87.64%]
  else
    goto <bb 5>; [12.36%]
;;    succ:       11
;;                5

;;   basic block 11, loop depth 3
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 2
;;    pred:       4
  ivtmp_48 = ivtmp_56 - 1;
  if (ivtmp_48 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_46 + 1;
  ivtmp_44 = ivtmp_45 - 1;
  if (ivtmp_44 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_46 = PHI <0(2), nl_24(9)>
  # ivtmp_45 = PHI <7800(2), ivtmp_44(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_19;
  printf ("S141\t %.3f \t\t", clock_dif_27);
  check (0);
  return 0;
;;    succ:       EXIT

}



;; Function s151s (s151s, funcdef_no=595, decl_uid=9162, cgraph_uid=595, symbol_order=616)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_34 -> { _2 }
i_35 -> { i_23 }
.MEM_36 -> { .MEM_24 }
_37 -> { _1 }
ivtmp_38 -> { ivtmp_43 }
_44 -> { _3 }
_45 -> { _4 }
_46 -> { _5 }
_47 -> { _6 }
_48 -> { _7 }
_49 -> { _8 }
_50 -> { _9 }
_51 -> { _10 }
_52 -> { _11 }
.MEM_53 -> { .MEM_18 }
i_54 -> { i_19 }
ivtmp_55 -> { ivtmp_42 }
.MEM_56 -> { .MEM_18 }
Incremental SSA update started at block: 8
Number of blocks in CFG: 12
Number of blocks to update: 8 ( 67%)


Removing basic block 12
Merging blocks 2 and 8
Removing basic block 9
s151s (float * a, float * b, int m)
{
  vector(4) float * vectp_a.1509;
  vector(4) float * vectp_a.1508;
  vector(4) float vect__11.1507;
  vector(4) float vect__9.1506;
  vector(4) float * vectp_b.1505;
  vector(4) float * vectp_b.1504;
  vector(4) float vect__5.1503;
  vector(4) float * vectp.1502;
  vector(4) float * vectp.1501;
  unsigned int tmp.1500;
  int tmp.1499;
  int i;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  float * _4;
  float _5;
  long unsigned int _6;
  long unsigned int _7;
  float * _8;
  float _9;
  float * _10;
  float _11;
  _Bool _12;
  _Bool _13;
  float * _20;
  _Bool _21;
  float * _22;
  _Bool _25;
  _Bool _26;
  float * _27;
  long unsigned int _28;
  long unsigned int _29;
  float * _30;
  _Bool _31;
  ssizetype _32;
  sizetype _33;
  long unsigned int _34;
  int _37;
  unsigned int ivtmp_38;
  _Bool _39;
  sizetype _40;
  sizetype _41;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  long unsigned int _44;
  float * _45;
  float _46;
  long unsigned int _47;
  long unsigned int _48;
  float * _49;
  float _50;
  float * _51;
  float _52;
  unsigned int ivtmp_55;
  unsigned int ivtmp_60;
  int _61;
  long unsigned int _62;
  long unsigned int _63;
  float * _64;
  float _65;
  long unsigned int _66;
  long unsigned int _67;
  float * _68;
  float _69;
  float * _70;
  float _71;
  unsigned int ivtmp_74;
  long unsigned int _77;
  long unsigned int _78;
  unsigned int ivtmp_89;
  unsigned int ivtmp_90;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _41 = (sizetype) m_15(D);
  _40 = _41 + 4;
  _33 = _40 * 4;
  _32 = (ssizetype) _33;
  _31 = _32 <= 0;
  _30 = a_16(D) + 16;
  _29 = (long unsigned int) m_15(D);
  _28 = _29 * 4;
  _27 = a_16(D) + _28;
  _26 = _27 >= _30;
  _25 = _26 | _31;
  _22 = a_16(D) + 16;
  _21 = b_17(D) >= _22;
  _20 = b_17(D) + 16;
  _13 = a_16(D) >= _20;
  _12 = _13 | _21;
  _39 = _12 & _25;
  if (_39 != 0)
    goto <bb 16>; [80.00%]
  else
    goto <bb 10>; [20.00%]
;;    succ:       10
;;                16

;;   basic block 16, loop depth 0
;;    pred:       2
  _77 = (long unsigned int) m_15(D);
  _78 = _77 * 4;
  vectp.1502_76 = a_16(D) + _78;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       5
;;                16
  # i_23 = PHI <i_19(5), 0(16)>
  # ivtmp_43 = PHI <ivtmp_42(5), 31999(16)>
  # vectp.1501_79 = PHI <vectp.1501_80(5), vectp.1502_76(16)>
  # vectp_b.1504_82 = PHI <vectp_b.1504_83(5), b_17(D)(16)>
  # vectp_a.1508_86 = PHI <vectp_a.1508_87(5), a_16(D)(16)>
  # ivtmp_89 = PHI <ivtmp_90(5), 0(16)>
  _1 = m_15(D) + i_23;
  _2 = (long unsigned int) _1;
  _3 = _2 * 4;
  _4 = a_16(D) + _3;
  vect__5.1503_81 = MEM[(float *)vectp.1501_79];
  _5 = *_4;
  _6 = (long unsigned int) i_23;
  _7 = _6 * 4;
  _8 = b_17(D) + _7;
  vect__9.1506_84 = MEM[(float *)vectp_b.1504_82];
  _9 = *_8;
  _10 = a_16(D) + _7;
  vect__11.1507_85 = vect__5.1503_81 + vect__9.1506_84;
  _11 = _5 + _9;
  MEM[(float *)vectp_a.1508_86] = vect__11.1507_85;
  i_19 = i_23 + 1;
  ivtmp_42 = ivtmp_43 - 1;
  vectp.1501_80 = vectp.1501_79 + 16;
  vectp_b.1504_83 = vectp_b.1504_82 + 16;
  vectp_a.1508_87 = vectp_a.1508_86 + 16;
  ivtmp_90 = ivtmp_89 + 1;
  if (ivtmp_90 < 7999)
    goto <bb 5>; [96.00%]
  else
    goto <bb 13>; [4.00%]
;;    succ:       5
;;                13

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 13, loop depth 0
;;    pred:       3
;;    succ:       14

;;   basic block 14, loop depth 1
;;    pred:       13
;;                15
  # i_58 = PHI <31996(13), i_73(15)>
  # ivtmp_60 = PHI <3(13), ivtmp_74(15)>
  _61 = m_15(D) + i_58;
  _62 = (long unsigned int) _61;
  _63 = _62 * 4;
  _64 = a_16(D) + _63;
  _65 = *_64;
  _66 = (long unsigned int) i_58;
  _67 = _66 * 4;
  _68 = b_17(D) + _67;
  _69 = *_68;
  _70 = a_16(D) + _67;
  _71 = _65 + _69;
  *_70 = _71;
  i_73 = i_58 + 1;
  ivtmp_74 = ivtmp_60 - 1;
  if (ivtmp_74 != 0)
    goto <bb 15>; [98.99%]
  else
    goto <bb 11>; [1.01%]
;;    succ:       15
;;                11

;;   basic block 15, loop depth 1
;;    pred:       14
  goto <bb 14>; [100.00%]
;;    succ:       14

;;   basic block 10, loop depth 0
;;    pred:       2
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       7
;;                10
  # i_35 = PHI <i_54(7), 0(10)>
  # ivtmp_38 = PHI <ivtmp_55(7), 31999(10)>
  _37 = m_15(D) + i_35;
  _34 = (long unsigned int) _37;
  _44 = _34 * 4;
  _45 = a_16(D) + _44;
  _46 = *_45;
  _47 = (long unsigned int) i_35;
  _48 = _47 * 4;
  _49 = b_17(D) + _48;
  _50 = *_49;
  _51 = a_16(D) + _48;
  _52 = _46 + _50;
  *_51 = _52;
  i_54 = i_35 + 1;
  ivtmp_55 = ivtmp_38 - 1;
  if (ivtmp_55 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       7
;;                4

;;   basic block 7, loop depth 1
;;    pred:       6
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 11, loop depth 0
;;    pred:       14
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       6
;;                11
  return 0;
;;    succ:       EXIT

}



;; Function s151 (s151, funcdef_no=596, decl_uid=9168, cgraph_uid=596, symbol_order=617)

Removing basic block 9
Merging blocks 5 and 13
s151 ()
{
  vector(4) float * vectp_a.1540;
  vector(4) float * vectp_a.1539;
  vector(4) float vect__25.1538;
  vector(4) float vect__23.1537;
  vector(4) float * vectp_b.1536;
  vector(4) float * vectp_b.1535;
  vector(4) float vect__19.1534;
  vector(4) float * vectp_a.1533;
  vector(4) float * vectp_a.1532;
  unsigned int tmp.1531;
  int tmp.1530;
  int i;
  int D.16576;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float * _2;
  long unsigned int _4;
  long unsigned int _14;
  int _15;
  long unsigned int _16;
  long unsigned int _17;
  float * _18;
  float _19;
  long unsigned int _20;
  long unsigned int _21;
  float * _22;
  float _23;
  float * _24;
  float _25;
  float _26;
  float * _29;
  long unsigned int _30;
  long unsigned int _31;
  int _35;
  unsigned int ivtmp_36;
  float * _38;
  float _39;
  unsigned int ivtmp_42;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;
  unsigned int ivtmp_47;
  unsigned int ivtmp_49;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s151 ");
  start_t_6 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_40 = PHI <31996(10), _35(12)>
  # ivtmp_36 = PHI <3(10), ivtmp_45(12)>
  _35 = i_40 + 1;
  _31 = (long unsigned int) _35;
  _30 = _31 * 4;
  _29 = &a + _30;
  _26 = *_29;
  _14 = (long unsigned int) i_40;
  _4 = _14 * 4;
  _2 = &b + _4;
  _1 = *_2;
  _38 = &a + _4;
  _39 = _26 + _1;
  *_38 = _39;
  ivtmp_45 = ivtmp_36 - 1;
  if (ivtmp_45 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_43 = PHI <_15(8), 0(5)>
  # ivtmp_49 = PHI <ivtmp_47(8), 31999(5)>
  # vectp_a.1532_51 = PHI <vectp_a.1532_52(8), vectp_a.1533_50(5)>
  # vectp_b.1535_54 = PHI <vectp_b.1535_55(8), &b(5)>
  # vectp_a.1539_58 = PHI <vectp_a.1539_59(8), &a(5)>
  # ivtmp_61 = PHI <ivtmp_62(8), 0(5)>
  _15 = i_43 + 1;
  _16 = (long unsigned int) _15;
  _17 = _16 * 4;
  _18 = &a + _17;
  vect__19.1534_53 = MEM[(float *)vectp_a.1532_51];
  _19 = *_18;
  _20 = (long unsigned int) i_43;
  _21 = _20 * 4;
  _22 = &b + _21;
  vect__23.1537_56 = MEM[(float *)vectp_b.1535_54];
  _23 = *_22;
  _24 = &a + _21;
  vect__25.1538_57 = vect__19.1534_53 + vect__23.1537_56;
  _25 = _19 + _23;
  MEM[(float *)vectp_a.1539_58] = vect__25.1538_57;
  ivtmp_47 = ivtmp_49 - 1;
  vectp_a.1532_52 = vectp_a.1532_51 + 16;
  vectp_b.1535_55 = vectp_b.1535_54 + 16;
  vectp_a.1539_59 = vectp_a.1539_58 + 16;
  ivtmp_62 = ivtmp_61 + 1;
  if (ivtmp_62 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_8 = nl_32 + 1;
  ivtmp_42 = ivtmp_44 - 1;
  if (ivtmp_42 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_8(7)>
  # ivtmp_44 = PHI <50000(2), ivtmp_42(7)>
  vectp_a.1533_50 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_10 = mysecond ();
  clock_dif_11 = end_t_10 - start_t_6;
  printf ("S151\t %.3f \t\t", clock_dif_11);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s152 (s152, funcdef_no=598, decl_uid=9183, cgraph_uid=598, symbol_order=619)

s152 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  long unsigned int _21;
  long unsigned int _22;
  float * _23;
  float _24;
  float * _25;
  float _26;
  float * _27;
  float _28;
  float _29;
  float _30;
  unsigned int ivtmp_53;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s152 ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_40 = PHI <0(5), i_13(8)>
  # ivtmp_56 = PHI <32000(5), ivtmp_55(8)>
  _1 = d[i_40];
  _2 = e[i_40];
  _3 = _1 * _2;
  b[i_40] = _3;
  _21 = (long unsigned int) i_40;
  _22 = _21 * 4;
  _23 = &a + _22;
  _24 = *_23;
  _25 = &b + _22;
  _26 = *_25;
  _27 = &c + _22;
  _28 = *_27;
  _29 = _26 * _28;
  _30 = _24 + _29;
  *_23 = _30;
  i_13 = i_40 + 1;
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_39 + 1;
  ivtmp_53 = ivtmp_54 - 1;
  if (ivtmp_53 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_39 = PHI <0(2), nl_15(7)>
  # ivtmp_54 = PHI <10000(2), ivtmp_53(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("S152\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s161 (s161, funcdef_no=599, decl_uid=9196, cgraph_uid=599, symbol_order=620)

s161 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _4;
  float _5;
  float _6;
  float _7;
  float powmult_9;
  float _11;
  unsigned int ivtmp_31;
  float pretmp_32;
  unsigned int ivtmp_34;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  int _41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s161 ");
  start_t_20 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 11, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                11
  # i_38 = PHI <0(8), _41(11)>
  # ivtmp_36 = PHI <31999(8), ivtmp_35(11)>
  _1 = b[i_38];
  pretmp_32 = d[i_38];
  _41 = i_38 + 1;
  if (_1 < 0.0)
    goto <bb 4>; [41.00%]
  else
    goto <bb 5>; [59.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _7 = a[i_38];
  powmult_9 = pretmp_32 * pretmp_32;
  _11 = _7 + powmult_9;
  c[_41] = _11;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       3
  _2 = c[i_38];
  _4 = e[i_38];
  _5 = _4 * pretmp_32;
  _6 = _2 + _5;
  a[i_38] = _6;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                4
L10:
  ivtmp_35 = ivtmp_36 - 1;
  if (ivtmp_35 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_25 = nl_37 + 1;
  ivtmp_31 = ivtmp_34 - 1;
  if (ivtmp_31 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                10
  # nl_37 = PHI <0(2), nl_25(10)>
  # ivtmp_34 = PHI <5000(2), ivtmp_31(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_20;
  printf ("S161\t %.3f \t\t", clock_dif_28);
  check (13);
  return 0;
;;    succ:       EXIT

}



;; Function s1161 (s1161, funcdef_no=600, decl_uid=9211, cgraph_uid=600, symbol_order=621)

s1161 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _3;
  float _4;
  float _5;
  float _6;
  float powmult_8;
  float _9;
  unsigned int ivtmp_29;
  float pretmp_30;
  unsigned int ivtmp_32;
  unsigned int ivtmp_33;
  unsigned int ivtmp_34;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s161 ");
  start_t_18 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 11, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                11
  # i_36 = PHI <0(8), i_21(11)>
  # ivtmp_34 = PHI <31999(8), ivtmp_33(11)>
  _1 = c[i_36];
  pretmp_30 = d[i_36];
  if (_1 < 0.0)
    goto <bb 4>; [41.00%]
  else
    goto <bb 5>; [59.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _6 = a[i_36];
  powmult_8 = pretmp_30 * pretmp_30;
  _9 = _6 + powmult_8;
  b[i_36] = _9;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       3
  _3 = e[i_36];
  _4 = _3 * pretmp_30;
  _5 = _1 + _4;
  a[i_36] = _5;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                4
L10:
  i_21 = i_36 + 1;
  ivtmp_33 = ivtmp_34 - 1;
  if (ivtmp_33 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_35 + 1;
  ivtmp_29 = ivtmp_32 - 1;
  if (ivtmp_29 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                10
  # nl_35 = PHI <0(2), nl_23(10)>
  # ivtmp_32 = PHI <10000(2), ivtmp_29(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_18;
  printf ("S1161\t %.3f \t\t", clock_dif_26);
  check (13);
  return 0;
;;    succ:       EXIT

}



;; Function s162 (s162, funcdef_no=601, decl_uid=9227, cgraph_uid=601, symbol_order=622)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_7 -> { _6 }
_8 -> { _5 }
_9 -> { _4 }
_11 -> { _3 }
_27 -> { _2 }
_28 -> { _1 }
ivtmp_29 -> { ivtmp_10 }
.MEM_30 -> { .MEM_32 }
i_34 -> { i_41 }
ivtmp_36 -> { ivtmp_44 }
i_42 -> { i_18 }
.MEM_43 -> { .MEM_17 }
Incremental SSA update started at block: 14
Number of blocks in CFG: 18
Number of blocks to update: 8 ( 44%)


Removing basic block 18
Removing basic block 7
Removing basic block 15
s162 (int k)
{
  vector(4) float * vectp_a.1623;
  vector(4) float * vectp_a.1622;
  vector(4) float vect__6.1621;
  vector(4) float vect__5.1620;
  vector(4) float vect__4.1619;
  vector(4) float * vectp_c.1618;
  vector(4) float * vectp_c.1617;
  vector(4) float vect__3.1616;
  vector(4) float * vectp_b.1615;
  vector(4) float * vectp_b.1614;
  vector(4) float vect__2.1613;
  vector(4) float * vectp_a.1612;
  vector(4) float * vectp_a.1611;
  unsigned int tmp.1610;
  int tmp.1609;
  int i;
  int D.16672;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_10;
  float _11;
  float _27;
  int _28;
  unsigned int ivtmp_29;
  unsigned int _35;
  unsigned int ivtmp_36;
  unsigned int _37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_44;
  unsigned int ivtmp_48;
  int _49;
  float _50;
  float _51;
  float _52;
  float _53;
  float _54;
  unsigned int ivtmp_57;
  sizetype _60;
  sizetype _61;
  unsigned int ivtmp_76;
  unsigned int ivtmp_77;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s162 ");
  start_t_15 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                8
  # nl_31 = PHI <0(2), nl_20(8)>
  # ivtmp_40 = PHI <10000(2), ivtmp_39(8)>
  if (k_16(D) > 0)
    goto <bb 14>; [34.74%]
  else
    goto <bb 5>; [65.26%]
;;    succ:       14
;;                5

;;   basic block 14, loop depth 1
;;    pred:       3
  _37 = (unsigned int) k_16(D);
  _35 = _37 + 3;
  if (_35 > 6)
    goto <bb 22>; [80.00%]
  else
    goto <bb 16>; [20.00%]
;;    succ:       16
;;                22

;;   basic block 22, loop depth 1
;;    pred:       14
  _60 = (sizetype) k_16(D);
  _61 = _60 * 4;
  vectp_a.1612_59 = &a + _61;
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       9
;;                22
  # i_41 = PHI <i_18(9), 0(22)>
  # ivtmp_10 = PHI <ivtmp_44(9), 31999(22)>
  # vectp_a.1611_62 = PHI <vectp_a.1611_63(9), vectp_a.1612_59(22)>
  # vectp_b.1614_65 = PHI <vectp_b.1614_66(9), &b(22)>
  # vectp_c.1617_68 = PHI <vectp_c.1617_69(9), &c(22)>
  # vectp_a.1622_73 = PHI <vectp_a.1622_74(9), &a(22)>
  # ivtmp_76 = PHI <ivtmp_77(9), 0(22)>
  _1 = k_16(D) + i_41;
  vect__2.1613_64 = MEM[(float *)vectp_a.1611_62];
  _2 = a[_1];
  vect__3.1616_67 = MEM[(float *)vectp_b.1614_65];
  _3 = b[i_41];
  vect__4.1619_70 = MEM[(float *)vectp_c.1617_68];
  _4 = c[i_41];
  vect__5.1620_71 = vect__3.1616_67 * vect__4.1619_70;
  _5 = _3 * _4;
  vect__6.1621_72 = vect__2.1613_64 + vect__5.1620_71;
  _6 = _2 + _5;
  MEM[(float *)vectp_a.1622_73] = vect__6.1621_72;
  i_18 = i_41 + 1;
  ivtmp_44 = ivtmp_10 - 1;
  vectp_a.1611_63 = vectp_a.1611_62 + 16;
  vectp_b.1614_66 = vectp_b.1614_65 + 16;
  vectp_c.1617_69 = vectp_c.1617_68 + 16;
  vectp_a.1622_74 = vectp_a.1622_73 + 16;
  ivtmp_77 = ivtmp_76 + 1;
  if (ivtmp_77 < 7999)
    goto <bb 9>; [96.00%]
  else
    goto <bb 19>; [4.00%]
;;    succ:       9
;;                19

;;   basic block 9, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 19, loop depth 1
;;    pred:       4
;;    succ:       20

;;   basic block 20, loop depth 2
;;    pred:       19
;;                21
  # i_13 = PHI <31996(19), i_56(21)>
  # ivtmp_48 = PHI <3(19), ivtmp_57(21)>
  _49 = k_16(D) + i_13;
  _50 = a[_49];
  _51 = b[i_13];
  _52 = c[i_13];
  _53 = _51 * _52;
  _54 = _50 + _53;
  a[i_13] = _54;
  i_56 = i_13 + 1;
  ivtmp_57 = ivtmp_48 - 1;
  if (ivtmp_57 != 0)
    goto <bb 21>; [98.99%]
  else
    goto <bb 17>; [1.01%]
;;    succ:       21
;;                17

;;   basic block 21, loop depth 2
;;    pred:       20
  goto <bb 20>; [100.00%]
;;    succ:       20

;;   basic block 16, loop depth 1
;;    pred:       14
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       13
;;                16
  # i_34 = PHI <i_42(13), 0(16)>
  # ivtmp_29 = PHI <ivtmp_36(13), 31999(16)>
  _28 = k_16(D) + i_34;
  _27 = a[_28];
  _11 = b[i_34];
  _9 = c[i_34];
  _8 = _11 * _9;
  _7 = _27 + _8;
  a[i_34] = _7;
  i_42 = i_34 + 1;
  ivtmp_36 = ivtmp_29 - 1;
  if (ivtmp_36 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 11>; [1.01%]
;;    succ:       13
;;                11

;;   basic block 13, loop depth 2
;;    pred:       12
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 17, loop depth 1
;;    pred:       20
;;    succ:       11

;;   basic block 11, loop depth 1
;;    pred:       12
;;                17
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       3
;;                11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_31 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  if (ivtmp_39 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       8
;;                6

;;   basic block 8, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_15;
  printf ("S162\t %.3f \t\t", clock_dif_23);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s171 (s171, funcdef_no=602, decl_uid=9241, cgraph_uid=602, symbol_order=623)

s171 (int inc)
{
  int i;
  int D.16721;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  unsigned int ivtmp_25;
  unsigned int ivtmp_26;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s171 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_28 = PHI <0(5), i_15(8)>
  # ivtmp_37 = PHI <32000(5), ivtmp_36(8)>
  _1 = inc_13(D) * i_28;
  _2 = a[_1];
  _3 = b[i_28];
  _4 = _2 + _3;
  a[_1] = _4;
  i_15 = i_28 + 1;
  ivtmp_36 = ivtmp_37 - 1;
  if (ivtmp_36 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_25 = ivtmp_26 - 1;
  if (ivtmp_25 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_26 = PHI <10000(2), ivtmp_25(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_12;
  printf ("S171\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s172 (s172, funcdef_no=603, decl_uid=9256, cgraph_uid=603, symbol_order=624)

s172 (int n1, int n3)
{
  int i;
  int D.16740;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_36;
  unsigned int ivtmp_39;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s172 ");
  start_t_11 = mysecond ();
  i_13 = n1_12(D) + -1;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                8
  # nl_27 = PHI <0(2), nl_18(8)>
  # ivtmp_36 = PHI <10000(2), ivtmp_39(8)>
  if (i_13 <= 31999)
    goto <bb 7>; [89.00%]
  else
    goto <bb 5>; [11.00%]
;;    succ:       7
;;                5

;;   basic block 7, loop depth 1
;;    pred:       3
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       7
;;                9
  # i_26 = PHI <i_13(7), i_16(9)>
  _1 = a[i_26];
  _2 = b[i_26];
  _3 = _1 + _2;
  a[i_26] = _3;
  i_16 = n3_15(D) + i_26;
  if (i_16 <= 31999)
    goto <bb 9>; [89.00%]
  else
    goto <bb 5>; [11.00%]
;;    succ:       9
;;                5

;;   basic block 9, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 1
;;    pred:       3
;;                4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_27 + 1;
  ivtmp_39 = ivtmp_36 - 1;
  if (ivtmp_39 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       8
;;                6

;;   basic block 8, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_11;
  printf ("S172\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s173 (s173, funcdef_no=604, decl_uid=9269, cgraph_uid=604, symbol_order=625)

Merging blocks 5 and 9
s173 ()
{
  vector(4) float * vectp_a.1692;
  vector(4) float * vectp_a.1691;
  vector(4) float vect__4.1690;
  vector(4) float vect__2.1689;
  vector(4) float * vectp_b.1688;
  vector(4) float * vectp_b.1687;
  vector(4) float vect__1.1686;
  vector(4) float * vectp_a.1685;
  vector(4) float * vectp_a.1684;
  int i;
  int D.16765;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_25;
  unsigned int ivtmp_32;
  unsigned int ivtmp_33;
  unsigned int ivtmp_36;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s173 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_27 = PHI <i_14(8), 0(5)>
  # ivtmp_36 = PHI <ivtmp_25(8), 16000(5)>
  # vectp_a.1684_8 = PHI <vectp_a.1684_7(8), &a(5)>
  # vectp_b.1687_5 = PHI <vectp_b.1687_35(8), &b(5)>
  # vectp_a.1691_30 = PHI <vectp_a.1691_31(8), vectp_a.1692_38(5)>
  # ivtmp_32 = PHI <ivtmp_33(8), 0(5)>
  vect__1.1686_6 = MEM[(float *)vectp_a.1684_8];
  _1 = a[i_27];
  vect__2.1689_34 = MEM[(float *)vectp_b.1687_5];
  _2 = b[i_27];
  _3 = i_27 + 16000;
  vect__4.1690_29 = vect__1.1686_6 + vect__2.1689_34;
  _4 = _1 + _2;
  MEM[(float *)vectp_a.1691_30] = vect__4.1690_29;
  i_14 = i_27 + 1;
  ivtmp_25 = ivtmp_36 - 1;
  vectp_a.1684_7 = vectp_a.1684_8 + 16;
  vectp_b.1687_35 = vectp_b.1687_5 + 16;
  vectp_a.1691_31 = vectp_a.1691_30 + 16;
  ivtmp_33 = ivtmp_32 + 1;
  if (ivtmp_33 < 4000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_26 + 1;
  ivtmp_23 = ivtmp_24 - 1;
  if (ivtmp_23 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_26 = PHI <0(2), nl_16(7)>
  # ivtmp_24 = PHI <100000(2), ivtmp_23(7)>
  vectp_a.1692_38 = &a + 64000;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_12;
  printf ("S173\t %.3f \t\t", clock_dif_19);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s174 (s174, funcdef_no=605, decl_uid=9284, cgraph_uid=605, symbol_order=626)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

i_23 -> { i_15 }
.MEM_31 -> { .MEM_8 }
_32 -> { _1 }
_33 -> { _3 }
_34 -> { _4 }
i_39 -> { i_26 }
_40 -> { _2 }
.MEM_41 -> { .MEM_14 }
Incremental SSA update started at block: 14
Number of blocks in CFG: 18
Number of blocks to update: 8 ( 44%)


Removing basic block 18
Removing basic block 7
Merging blocks 15 and 24
Merging blocks 22 and 17
s174 (int M)
{
  vector(4) float * vectp_a.1720;
  vector(4) float * vectp_a.1719;
  vector(4) float vect__4.1718;
  vector(4) float vect__2.1717;
  vector(4) float * vectp_b.1716;
  vector(4) float * vectp_b.1715;
  vector(4) float vect__1.1714;
  vector(4) float * vectp_a.1713;
  vector(4) float * vectp_a.1712;
  int tmp.1711;
  unsigned int niters_vector_mult_vf.1710;
  unsigned int bnd.1709;
  unsigned int niters.1708;
  int i;
  int D.16795;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  unsigned int _5;
  _Bool _6;
  unsigned int _7;
  unsigned int _24;
  _Bool _28;
  _Bool _29;
  float _32;
  int _33;
  float _34;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  unsigned int _38;
  float _40;
  float _46;
  float _47;
  int _48;
  float _49;
  sizetype _65;
  sizetype _66;
  unsigned int ivtmp_70;
  unsigned int ivtmp_71;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s174 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 14, loop depth 1
;;    pred:       5
  _24 = (unsigned int) M_13(D);
  _7 = _24 + 4294967295;
  _6 = _7 > 2;
  _5 = (unsigned int) M_13(D);
  _38 = _5 + 3;
  _29 = _38 > 6;
  _28 = _6 & _29;
  if (_28 != 0)
    goto <bb 15>; [80.00%]
  else
    goto <bb 16>; [20.00%]
;;    succ:       16
;;                15

;;   basic block 15, loop depth 1
;;    pred:       14
  niters.1708_10 = (unsigned int) M_13(D);
  bnd.1709_53 = niters.1708_10 >> 2;
  _65 = (sizetype) M_13(D);
  _66 = _65 * 4;
  vectp_a.1720_64 = &a + _66;
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       9
;;                15
  # i_26 = PHI <i_15(9), 0(15)>
  # vectp_a.1712_57 = PHI <vectp_a.1712_58(9), &a(15)>
  # vectp_b.1715_60 = PHI <vectp_b.1715_61(9), &b(15)>
  # vectp_a.1719_67 = PHI <vectp_a.1719_68(9), vectp_a.1720_64(15)>
  # ivtmp_70 = PHI <ivtmp_71(9), 0(15)>
  vect__1.1714_59 = MEM[(float *)vectp_a.1712_57];
  _1 = a[i_26];
  vect__2.1717_62 = MEM[(float *)vectp_b.1715_60];
  _2 = b[i_26];
  _3 = M_13(D) + i_26;
  vect__4.1718_63 = vect__1.1714_59 + vect__2.1717_62;
  _4 = _1 + _2;
  MEM[(float *)vectp_a.1719_67] = vect__4.1718_63;
  i_15 = i_26 + 1;
  vectp_a.1712_58 = vectp_a.1712_57 + 16;
  vectp_b.1715_61 = vectp_b.1715_60 + 16;
  vectp_a.1719_68 = vectp_a.1719_67 + 16;
  ivtmp_71 = ivtmp_70 + 1;
  if (ivtmp_71 < bnd.1709_53)
    goto <bb 9>; [83.33%]
  else
    goto <bb 19>; [16.67%]
;;    succ:       9
;;                19

;;   basic block 9, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 19, loop depth 1
;;    pred:       3
  niters_vector_mult_vf.1710_54 = bnd.1709_53 << 2;
  tmp.1711_55 = (int) niters_vector_mult_vf.1710_54;
  if (niters.1708_10 == niters_vector_mult_vf.1710_54)
    goto <bb 22>; [25.00%]
  else
    goto <bb 23>; [75.00%]
;;    succ:       23
;;                22

;;   basic block 23, loop depth 1
;;    pred:       19
;;    succ:       20

;;   basic block 20, loop depth 2
;;    pred:       21
;;                23
  # i_44 = PHI <i_51(21), tmp.1711_55(23)>
  _46 = a[i_44];
  _47 = b[i_44];
  _48 = M_13(D) + i_44;
  _49 = _46 + _47;
  a[_48] = _49;
  i_51 = i_44 + 1;
  if (M_13(D) > i_51)
    goto <bb 21>; [89.00%]
  else
    goto <bb 22>; [11.00%]
;;    succ:       21
;;                22

;;   basic block 21, loop depth 2
;;    pred:       20
  goto <bb 20>; [100.00%]
;;    succ:       20

;;   basic block 16, loop depth 1
;;    pred:       14
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       13
;;                16
  # i_39 = PHI <i_23(13), 0(16)>
  _32 = a[i_39];
  _40 = b[i_39];
  _33 = M_13(D) + i_39;
  _34 = _32 + _40;
  a[_33] = _34;
  i_23 = i_39 + 1;
  if (M_13(D) > i_23)
    goto <bb 13>; [89.00%]
  else
    goto <bb 11>; [11.00%]
;;    succ:       13
;;                11

;;   basic block 13, loop depth 2
;;    pred:       12
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 22, loop depth 1
;;    pred:       20
;;                19
;;    succ:       11

;;   basic block 11, loop depth 1
;;    pred:       12
;;                22
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       5
;;                11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_37 + 1;
  ivtmp_35 = ivtmp_36 - 1;
  if (ivtmp_35 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       8
;;                6

;;   basic block 8, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                8
  # nl_37 = PHI <0(2), nl_17(8)>
  # ivtmp_36 = PHI <100000(2), ivtmp_35(8)>
  if (M_13(D) > 0)
    goto <bb 14>; [89.00%]
  else
    goto <bb 4>; [11.00%]
;;    succ:       14
;;                4

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_12;
  printf ("S174\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s175 (s175, funcdef_no=606, decl_uid=9298, cgraph_uid=606, symbol_order=627)

s175 (int inc)
{
  int i;
  int D.16837;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s175 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_27 = PHI <0(5), _1(8)>
  _1 = inc_13(D) + i_27;
  _2 = a[_1];
  _3 = b[i_27];
  _4 = _2 + _3;
  a[i_27] = _4;
  if (_1 <= 31998)
    goto <bb 8>; [87.64%]
  else
    goto <bb 4>; [12.36%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_26 + 1;
  ivtmp_35 = ivtmp_36 - 1;
  if (ivtmp_35 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_26 = PHI <0(2), nl_16(7)>
  # ivtmp_36 = PHI <10000(2), ivtmp_35(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_12;
  printf ("S175\t %.3f \t\t", clock_dif_19);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s176 (s176, funcdef_no=607, decl_uid=9311, cgraph_uid=607, symbol_order=628)


Symbols to be put in SSA form
{ D.13386 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 31
Number of blocks to update: 19 ( 61%)


Merging blocks 5 and 30
Merging blocks 12 and 29
s176 ()
{
  vector(4) float * vectp_a.1791;
  vector(4) float * vectp_a.1790;
  vector(4) float vect__11.1789;
  vector(4) float vect__12.1788;
  vector(4) float vect__13.1787;
  vector(4) float * vectp_b.1786;
  vector(4) float * vectp_b.1785;
  vector(4) float vect__30.1784;
  vector(4) float * vectp_a.1783;
  vector(4) float * vectp_a.1782;
  vector(4) float vect__33.1781;
  vector(4) float * vectp_c.1780;
  vector(4) float * vectp_c.1779;
  vector(4) float * vectp_a.1778;
  vector(4) float * vectp_a.1777;
  vector(4) float vect__8.1776;
  vector(4) float vect__7.1775;
  vector(4) float vect__5.1774;
  vector(4) float * vectp_b.1773;
  vector(4) float * vectp_b.1772;
  vector(4) float vect__1.1771;
  vector(4) float * vectp_a.1770;
  vector(4) float * vectp_a.1769;
  vector(4) float * vectp_a.1768;
  vector(4) float * vectp_a.1767;
  vector(4) float vect__48.1766;
  vector(4) float vect__50.1765;
  vector(4) float vect__51.1764;
  vector(4) float * vectp_b.1763;
  vector(4) float * vectp_b.1762;
  vector(4) float vect__55.1761;
  vector(4) float * vectp_a.1760;
  vector(4) float * vectp_a.1759;
  int i;
  int D.16858;
  int i;
  int j;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  int _3;
  int _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _11;
  float _12;
  float _13;
  int _14;
  int _16;
  unsigned int ivtmp_20;
  int _29;
  float _30;
  unsigned int ivtmp_31;
  unsigned int ivtmp_32;
  float _33;
  unsigned int ivtmp_34;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_42;
  float _48;
  float _50;
  float _51;
  int _52;
  int _53;
  int _54;
  float _55;
  unsigned int ivtmp_59;
  int ivtmp_60;
  int ivtmp_62;
  float _64;
  sizetype _70;
  sizetype _71;
  sizetype _72;
  vector(4) float vect_cst__76;
  unsigned int ivtmp_82;
  unsigned int ivtmp_83;
  sizetype _88;
  sizetype _89;
  sizetype _90;
  vector(4) float vect_cst__94;
  sizetype _101;
  sizetype _102;
  sizetype _103;
  float _107;
  vector(4) float vect_cst__108;
  sizetype _113;
  sizetype _114;
  sizetype _115;
  unsigned int ivtmp_124;
  unsigned int ivtmp_125;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s176 ");
  start_t_18 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 3, loop depth 3
;;    pred:       24
;;                5
  # i_45 = PHI <i_9(24), 0(5)>
  # ivtmp_20 = PHI <ivtmp_31(24), 16000(5)>
  # vectp_a.1769_84 = PHI <vectp_a.1769_85(24), &a(5)>
  # vectp_b.1772_91 = PHI <vectp_b.1772_92(24), vectp_b.1773_87(5)>
  # vectp_a.1777_97 = PHI <vectp_a.1777_98(24), &a(5)>
  # vectp_c.1779_104 = PHI <vectp_c.1779_105(24), vectp_c.1780_100(5)>
  # vectp_a.1782_109 = PHI <vectp_a.1782_110(24), &a(5)>
  # vectp_b.1785_116 = PHI <vectp_b.1785_117(24), vectp_b.1786_112(5)>
  # vectp_a.1790_121 = PHI <vectp_a.1790_122(24), &a(5)>
  # ivtmp_124 = PHI <ivtmp_125(24), 0(5)>
  vect__1.1771_86 = MEM[(float *)vectp_a.1769_84];
  _1 = a[i_45];
  _2 = i_45 + 16000;
  _3 = _2 - j_36;
  _4 = _3 + -1;
  vect__5.1774_93 = MEM[(float *)vectp_b.1772_91];
  _5 = b[_4];
  vect__7.1775_95 = vect__5.1774_93 * vect_cst__94;
  _7 = _5 * _6;
  vect__8.1776_96 = vect__1.1771_86 + vect__7.1775_95;
  _8 = _1 + _7;
  MEM[(float *)vectp_a.1777_97] = vect__8.1776_96;
  vect__33.1781_106 = MEM[(float *)vectp_c.1779_104];
  _33 = c[j_21];
  vect__30.1784_111 = MEM[(float *)vectp_a.1782_109];
  _30 = a[i_45];
  _29 = i_45 + 16000;
  _16 = _29 - j_21;
  _14 = _16 + -1;
  vect__13.1787_118 = MEM[(float *)vectp_b.1785_116];
  _13 = b[_14];
  vect__12.1788_119 = vect__13.1787_118 * vect_cst__108;
  _12 = _13 * _33;
  vect__11.1789_120 = vect__30.1784_111 + vect__12.1788_119;
  _11 = _30 + _12;
  MEM[(float *)vectp_a.1790_121] = vect__11.1789_120;
  i_9 = i_45 + 1;
  ivtmp_31 = ivtmp_20 - 1;
  vectp_a.1769_85 = vectp_a.1769_84 + 16;
  vectp_b.1772_92 = vectp_b.1772_91 + 16;
  vectp_a.1777_98 = vectp_a.1777_97 + 16;
  vectp_c.1779_105 = vectp_c.1779_104 + 0;
  vectp_a.1782_110 = vectp_a.1782_109 + 16;
  vectp_b.1785_117 = vectp_b.1785_116 + 16;
  vectp_a.1790_122 = vectp_a.1790_121 + 16;
  ivtmp_125 = ivtmp_124 + 1;
  if (ivtmp_125 < 4000)
    goto <bb 24>; [96.00%]
  else
    goto <bb 25>; [4.00%]
;;    succ:       24
;;                25

;;   basic block 24, loop depth 3
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 25, loop depth 2
;;    pred:       3
  # j_61 = PHI <j_21(3)>
  j_63 = j_61 + 1;
  ivtmp_60 = ivtmp_62 + 2;
  ivtmp_34 = ivtmp_32 - 1;
  if (ivtmp_34 != 0)
    goto <bb 27>; [98.00%]
  else
    goto <bb 19>; [2.00%]
;;    succ:       27
;;                19

;;   basic block 27, loop depth 2
;;    pred:       25
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 19, loop depth 1
;;    pred:       25
  # j_41 = PHI <j_63(25)>
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       16
;;                19
  # j_66 = PHI <j_43(16), j_41(19)>
  _64 = c[j_66];
  _70 = (sizetype) j_66;
  _71 = _70 * 18446744073709551612;
  _72 = _71 + 63996;
  vectp_b.1763_69 = &b + _72;
  vect_cst__76 = {_64, _64, _64, _64};
;;    succ:       13

;;   basic block 13, loop depth 3
;;    pred:       14
;;                12
  # i_57 = PHI <i_44(14), 0(12)>
  # ivtmp_42 = PHI <ivtmp_40(14), 16000(12)>
  # vectp_a.1759_58 = PHI <vectp_a.1759_67(14), &a(12)>
  # vectp_b.1762_73 = PHI <vectp_b.1762_74(14), vectp_b.1763_69(12)>
  # vectp_a.1767_79 = PHI <vectp_a.1767_80(14), &a(12)>
  # ivtmp_82 = PHI <ivtmp_83(14), 0(12)>
  vect__55.1761_68 = MEM[(float *)vectp_a.1759_58];
  _55 = a[i_57];
  _54 = i_57 + 16000;
  _53 = _54 - j_66;
  _52 = _53 + -1;
  vect__51.1764_75 = MEM[(float *)vectp_b.1762_73];
  _51 = b[_52];
  vect__50.1765_77 = vect__51.1764_75 * vect_cst__76;
  _50 = _51 * _64;
  vect__48.1766_78 = vect__55.1761_68 + vect__50.1765_77;
  _48 = _55 + _50;
  MEM[(float *)vectp_a.1767_79] = vect__48.1766_78;
  i_44 = i_57 + 1;
  ivtmp_40 = ivtmp_42 - 1;
  vectp_a.1759_67 = vectp_a.1759_58 + 16;
  vectp_b.1762_74 = vectp_b.1762_73 + 16;
  vectp_a.1767_80 = vectp_a.1767_79 + 16;
  ivtmp_83 = ivtmp_82 + 1;
  if (ivtmp_83 < 4000)
    goto <bb 14>; [96.00%]
  else
    goto <bb 15>; [4.00%]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 3
;;    pred:       13
  goto <bb 13>; [100.00%]
;;    succ:       13

;;   basic block 15, loop depth 2
;;    pred:       13
  j_43 = j_66 + 1;
  if (j_43 != 16000)
    goto <bb 16>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       16
;;                6

;;   basic block 16, loop depth 2
;;    pred:       15
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 5, loop depth 2
;;    pred:       7
;;                27
  # j_36 = PHI <0(7), j_63(27)>
  # ivtmp_62 = PHI <1(7), ivtmp_60(27)>
  # ivtmp_32 = PHI <7999(7), ivtmp_34(27)>
  _6 = c[j_36];
  _88 = (sizetype) j_36;
  _89 = _88 * 18446744073709551612;
  _90 = _89 + 63996;
  vectp_b.1773_87 = &b + _90;
  vect_cst__94 = {_6, _6, _6, _6};
  _101 = (sizetype) j_36;
  _102 = _101 + 1;
  _103 = _102 * 4;
  vectp_c.1780_100 = &c + _103;
  j_21 = j_36 + 1;
  _107 = c[j_21];
  vect_cst__108 = {_107, _107, _107, _107};
  _113 = (sizetype) j_36;
  _114 = _113 * 18446744073709551612;
  _115 = _114 + 63992;
  vectp_b.1786_112 = &b + _115;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       15
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_35 + 1;
  ivtmp_59 = ivtmp_39 - 1;
  if (ivtmp_59 != 0)
    goto <bb 9>; [75.00%]
  else
    goto <bb 8>; [25.00%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_35 = PHI <0(2), nl_23(9)>
  # ivtmp_39 = PHI <4(2), ivtmp_59(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_18;
  printf ("S176\t %.3f \t\t", clock_dif_26);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s211 (s211, funcdef_no=608, decl_uid=9329, cgraph_uid=608, symbol_order=629)

s211 ()
{
  int i;
  int D.16947;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  int _7;
  float _8;
  float _9;
  float _10;
  float _11;
  unsigned int ivtmp_58;
  unsigned int ivtmp_62;
  unsigned int ivtmp_63;
  unsigned int ivtmp_64;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s211 ");
  start_t_19 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_34 = PHI <1(5), _7(8)>
  # ivtmp_64 = PHI <31998(5), ivtmp_63(8)>
  _1 = i_34 + -1;
  _2 = b[_1];
  _3 = c[i_34];
  _4 = d[i_34];
  _5 = _3 * _4;
  _6 = _2 + _5;
  a[i_34] = _6;
  _7 = i_34 + 1;
  _8 = b[_7];
  _9 = e[i_34];
  _10 = _4 * _9;
  _11 = _8 - _10;
  b[i_34] = _11;
  ivtmp_63 = ivtmp_64 - 1;
  if (ivtmp_63 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_33 + 1;
  ivtmp_58 = ivtmp_62 - 1;
  if (ivtmp_58 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_23(7)>
  # ivtmp_62 = PHI <10000(2), ivtmp_58(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_19;
  printf ("S211\t %.3f \t\t", clock_dif_26);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s212 (s212, funcdef_no=609, decl_uid=9342, cgraph_uid=609, symbol_order=630)

s212 ()
{
  int i;
  int D.16979;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  int _5;
  float _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_29;
  unsigned int ivtmp_30;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s212 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_32 = PHI <0(5), _5(8)>
  # ivtmp_41 = PHI <31999(5), ivtmp_40(8)>
  _1 = a[i_32];
  _2 = c[i_32];
  _3 = _1 * _2;
  a[i_32] = _3;
  _4 = b[i_32];
  _5 = i_32 + 1;
  _6 = a[_5];
  _7 = d[i_32];
  _8 = _6 * _7;
  _9 = _4 + _8;
  b[i_32] = _9;
  ivtmp_40 = ivtmp_41 - 1;
  if (ivtmp_40 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_31 + 1;
  ivtmp_29 = ivtmp_30 - 1;
  if (ivtmp_29 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_31 = PHI <0(2), nl_21(7)>
  # ivtmp_30 = PHI <10000(2), ivtmp_29(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_17;
  printf ("S212\t %.3f \t\t", clock_dif_24);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s1213 (s1213, funcdef_no=610, decl_uid=9355, cgraph_uid=610, symbol_order=631)

s1213 ()
{
  int i;
  int D.17003;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  int _5;
  float _6;
  float _7;
  float _8;
  unsigned int ivtmp_28;
  unsigned int ivtmp_29;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s212 ");
  start_t_16 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_31 = PHI <1(5), _5(8)>
  # ivtmp_40 = PHI <31998(5), ivtmp_39(8)>
  _1 = i_31 + -1;
  _2 = b[_1];
  _3 = c[i_31];
  _4 = _2 + _3;
  a[i_31] = _4;
  _5 = i_31 + 1;
  _6 = a[_5];
  _7 = d[i_31];
  _8 = _6 * _7;
  b[i_31] = _8;
  ivtmp_39 = ivtmp_40 - 1;
  if (ivtmp_39 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_30 + 1;
  ivtmp_28 = ivtmp_29 - 1;
  if (ivtmp_28 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_30 = PHI <0(2), nl_20(7)>
  # ivtmp_29 = PHI <10000(2), ivtmp_28(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_16;
  printf ("S1213\t %.3f \t\t", clock_dif_23);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s221 (s221, funcdef_no=611, decl_uid=9368, cgraph_uid=611, symbol_order=632)

s221 ()
{
  int i;
  int D.17033;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  int _6;
  float _7;
  float _9;
  float _29;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s221 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_33 = PHI <1(5), i_20(8)>
  # ivtmp_61 = PHI <31999(5), ivtmp_60(8)>
  _1 = a[i_33];
  _2 = c[i_33];
  _3 = d[i_33];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_33] = _5;
  _6 = i_33 + -1;
  _7 = b[_6];
  _29 = _3 + _7;
  _9 = _5 + _29;
  b[i_33] = _9;
  i_20 = i_33 + 1;
  ivtmp_60 = ivtmp_61 - 1;
  if (ivtmp_60 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_22(7)>
  # ivtmp_56 = PHI <5000(2), ivtmp_55(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_17;
  printf ("S221\t %.3f \t\t", clock_dif_25);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s1221 (s1221, funcdef_no=612, decl_uid=9381, cgraph_uid=612, symbol_order=633)

Merging blocks 5 and 9
s1221 ()
{
  vector(4) float * vectp_b.1941;
  vector(4) float * vectp_b.1940;
  vector(4) float vect__4.1939;
  vector(4) float vect__3.1938;
  vector(4) float * vectp_a.1937;
  vector(4) float * vectp_a.1936;
  vector(4) float vect__2.1935;
  vector(4) float * vectp_b.1934;
  vector(4) float * vectp_b.1933;
  int i;
  int D.17062;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  unsigned int ivtmp_24;
  unsigned int ivtmp_25;
  unsigned int ivtmp_33;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s221 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_27 = PHI <i_14(8), 4(5)>
  # ivtmp_36 = PHI <ivtmp_35(8), 31996(5)>
  # vectp_b.1933_23 = PHI <vectp_b.1933_8(8), &b(5)>
  # vectp_a.1936_5 = PHI <vectp_a.1936_38(8), vectp_a.1937_6(5)>
  # vectp_b.1940_31 = PHI <vectp_b.1940_39(8), vectp_b.1941_30(5)>
  # ivtmp_33 = PHI <ivtmp_40(8), 0(5)>
  _1 = i_27 + -4;
  vect__2.1935_7 = MEM[(float *)vectp_b.1933_23];
  _2 = b[_1];
  vect__3.1938_34 = MEM[(float *)vectp_a.1936_5];
  _3 = a[i_27];
  vect__4.1939_29 = vect__2.1935_7 + vect__3.1938_34;
  _4 = _2 + _3;
  MEM[(float *)vectp_b.1940_31] = vect__4.1939_29;
  i_14 = i_27 + 1;
  ivtmp_35 = ivtmp_36 - 1;
  vectp_b.1933_8 = vectp_b.1933_23 + 16;
  vectp_a.1936_38 = vectp_a.1936_5 + 16;
  vectp_b.1940_39 = vectp_b.1940_31 + 16;
  ivtmp_40 = ivtmp_33 + 1;
  if (ivtmp_40 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_26 + 1;
  ivtmp_24 = ivtmp_25 - 1;
  if (ivtmp_24 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_26 = PHI <0(2), nl_16(7)>
  # ivtmp_25 = PHI <10000(2), ivtmp_24(7)>
  vectp_a.1937_6 = &a + 16;
  vectp_b.1941_30 = &b + 16;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_12;
  printf ("S1221\t %.3f \t\t", clock_dif_19);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s222 (s222, funcdef_no=613, decl_uid=9394, cgraph_uid=613, symbol_order=634)

s222 ()
{
  int i;
  int D.17094;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _2;
  float _3;
  float powmult_4;
  unsigned int ivtmp_6;
  unsigned int ivtmp_24;
  unsigned int ivtmp_25;
  unsigned int ivtmp_26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s222 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_27 = PHI <1(5), i_15(8)>
  # ivtmp_26 = PHI <31999(5), ivtmp_25(8)>
  _2 = i_27 + -1;
  _3 = e[_2];
  powmult_4 = _3 * _3;
  e[i_27] = powmult_4;
  i_15 = i_27 + 1;
  ivtmp_25 = ivtmp_26 - 1;
  if (ivtmp_25 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_37 + 1;
  ivtmp_6 = ivtmp_24 - 1;
  if (ivtmp_6 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_37 = PHI <0(2), nl_17(7)>
  # ivtmp_24 = PHI <5000(2), ivtmp_6(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_12;
  printf ("S222\t %.3f \t\t", clock_dif_20);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s231 (s231, funcdef_no=614, decl_uid=9407, cgraph_uid=614, symbol_order=635)

Merging blocks 5 and 12
s231 ()
{
  vector(4) float * vectp_aa.1983;
  vector(4) float * vectp_aa.1982;
  vector(4) float vect__4.1981;
  vector(4) float vect__3.1980;
  vector(4) float * vectp_bb.1979;
  vector(4) float * vectp_bb.1978;
  vector(4) float vect__2.1977;
  vector(4) float * vectp_aa.1976;
  vector(4) float * vectp_aa.1975;
  int i;
  int D.17116;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_8;
  unsigned int ivtmp_9;
  sizetype _16;
  sizetype _17;
  sizetype _25;
  unsigned int ivtmp_26;
  unsigned int ivtmp_28;
  unsigned int ivtmp_29;
  sizetype _30;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_43;
  sizetype _44;
  sizetype _50;
  sizetype _51;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s231 ");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       11
;;                5
  # i_27 = PHI <i_10(11), 0(5)>
  # ivtmp_9 = PHI <ivtmp_8(11), 256(5)>
  # ivtmp_26 = PHI <ivtmp_43(11), 256(5)>
  # vectp_aa.1975_40 = PHI <vectp_aa.1975_41(11), vectp_aa.1976_39(5)>
  # vectp_bb.1978_12 = PHI <vectp_bb.1978_46(11), vectp_bb.1979_32(5)>
  # vectp_aa.1982_52 = PHI <vectp_aa.1982_53(11), vectp_aa.1983_49(5)>
  # ivtmp_55 = PHI <ivtmp_56(11), 0(5)>
  _1 = j_7 + -1;
  vect__2.1977_38 = MEM[(float *)vectp_aa.1975_40];
  _2 = aa[_1][i_27];
  vect__3.1980_47 = MEM[(float *)vectp_bb.1978_12];
  _3 = bb[j_7][i_27];
  vect__4.1981_48 = vect__2.1977_38 + vect__3.1980_47;
  _4 = _2 + _3;
  MEM[(float *)vectp_aa.1982_52] = vect__4.1981_48;
  ivtmp_8 = ivtmp_9 - 1;
  i_10 = i_27 + 1;
  ivtmp_43 = ivtmp_26 - 1;
  vectp_aa.1975_41 = vectp_aa.1975_40 + 16;
  vectp_bb.1978_46 = vectp_bb.1978_12 + 16;
  vectp_aa.1982_53 = vectp_aa.1982_52 + 16;
  ivtmp_56 = ivtmp_55 + 1;
  if (ivtmp_56 < 64)
    goto <bb 11>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  ivtmp_37 = ivtmp_5 - 1;
  j_6 = j_7 + 1;
  ivtmp_35 = ivtmp_36 - 1;
  if (ivtmp_35 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # j_7 = PHI <1(7), j_6(10)>
  # ivtmp_5 = PHI <255(7), ivtmp_37(10)>
  # ivtmp_36 = PHI <255(7), ivtmp_35(10)>
  _30 = (sizetype) j_7;
  _17 = _30 * 1024;
  _16 = _17 + 18446744073709550592;
  vectp_aa.1976_39 = &aa + _16;
  _25 = (sizetype) j_7;
  _44 = _25 * 1024;
  vectp_bb.1979_32 = &bb + _44;
  _50 = (sizetype) j_7;
  _51 = _50 * 1024;
  vectp_aa.1983_49 = &aa + _51;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_19 = nl_31 + 1;
  ivtmp_28 = ivtmp_29 - 1;
  if (ivtmp_28 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_31 = PHI <0(2), nl_19(9)>
  # ivtmp_29 = PHI <3900(2), ivtmp_28(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_21 = mysecond ();
  clock_dif_22 = end_t_21 - start_t_14;
  printf ("S231\t %.3f \t\t", clock_dif_22);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s232 (s232, funcdef_no=615, decl_uid=9424, cgraph_uid=615, symbol_order=636)

s232 ()
{
  int i;
  int D.17159;
  int i;
  int j;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float powmult_3;
  float _4;
  float _5;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s232 ");
  start_t_15 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # i_35 = PHI <1(5), i_17(11)>
  _1 = i_35 + -1;
  _2 = aa[j_34][_1];
  powmult_3 = _2 * _2;
  _4 = bb[j_34][i_35];
  _5 = powmult_3 + _4;
  aa[j_34][i_35] = _5;
  i_17 = i_35 + 1;
  if (i_17 <= j_34)
    goto <bb 11>; [87.64%]
  else
    goto <bb 4>; [12.36%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  j_18 = j_34 + 1;
  ivtmp_44 = ivtmp_45 - 1;
  if (ivtmp_44 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # j_34 = PHI <1(7), j_18(10)>
  # ivtmp_45 = PHI <255(7), ivtmp_44(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_20 = nl_42 + 1;
  ivtmp_40 = ivtmp_41 - 1;
  if (ivtmp_40 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_42 = PHI <0(2), nl_20(9)>
  # ivtmp_41 = PHI <3900(2), ivtmp_40(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_15;
  printf ("S232\t %.3f \t\t", clock_dif_23);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s1232 (s1232, funcdef_no=616, decl_uid=9441, cgraph_uid=616, symbol_order=637)

s1232 ()
{
  int i;
  int D.17196;
  int i;
  int j;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_34;
  unsigned int ivtmp_35;
  unsigned int ivtmp_38;
  unsigned int ivtmp_39;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s232 ");
  start_t_13 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # i_40 = PHI <j_31(5), i_15(11)>
  _1 = bb[i_40][j_31];
  _2 = cc[i_40][j_31];
  _3 = _1 + _2;
  aa[i_40][j_31] = _3;
  i_15 = i_40 + 1;
  if (i_15 != 256)
    goto <bb 11>; [87.64%]
  else
    goto <bb 4>; [12.36%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  j_16 = j_31 + 1;
  ivtmp_38 = ivtmp_39 - 1;
  if (ivtmp_38 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # j_31 = PHI <0(7), j_16(10)>
  # ivtmp_39 = PHI <256(7), ivtmp_38(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_18 = nl_30 + 1;
  ivtmp_34 = ivtmp_35 - 1;
  if (ivtmp_34 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_30 = PHI <0(2), nl_18(9)>
  # ivtmp_35 = PHI <3900(2), ivtmp_34(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_13;
  printf ("S1232\t %.3f \t\t", clock_dif_21);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s233 (s233, funcdef_no=617, decl_uid=9458, cgraph_uid=617, symbol_order=638)

s233 ()
{
  int j;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _6;
  float _7;
  float _8;
  unsigned int ivtmp_38;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_53;
  int _59;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s233 ");
  start_t_20 = mysecond ();
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 14, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       7
;;                14
  # j_47 = PHI <1(7), j_22(14)>
  # ivtmp_43 = PHI <255(7), ivtmp_42(14)>
  _1 = j_47 + -1;
  _2 = aa[_1][i_46];
  _3 = cc[j_47][i_46];
  _4 = _2 + _3;
  aa[j_47][i_46] = _4;
  j_22 = j_47 + 1;
  ivtmp_42 = ivtmp_43 - 1;
  if (ivtmp_42 != 0)
    goto <bb 14>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       14
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  _59 = i_46 + -1;
;;    succ:       5

;;   basic block 5, loop depth 3
;;    pred:       4
;;                13
  # j_48 = PHI <1(4), j_24(13)>
  # ivtmp_53 = PHI <255(4), ivtmp_44(13)>
  _6 = bb[j_48][_59];
  _7 = cc[j_48][i_46];
  _8 = _6 + _7;
  bb[j_48][i_46] = _8;
  j_24 = j_48 + 1;
  ivtmp_44 = ivtmp_53 - 1;
  if (ivtmp_44 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       13
;;                6

;;   basic block 13, loop depth 3
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 6, loop depth 2
;;    pred:       5
  i_25 = i_46 + 1;
  ivtmp_40 = ivtmp_41 - 1;
  if (ivtmp_40 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 2
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       9
;;                12
  # i_46 = PHI <1(9), i_25(12)>
  # ivtmp_41 = PHI <255(9), ivtmp_40(12)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_27 = nl_45 + 1;
  ivtmp_38 = ivtmp_39 - 1;
  if (ivtmp_38 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       8
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       2
;;                11
  # nl_45 = PHI <0(2), nl_27(11)>
  # ivtmp_39 = PHI <3900(2), ivtmp_38(11)>
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 0
;;    pred:       8
  end_t_29 = mysecond ();
  clock_dif_30 = end_t_29 - start_t_20;
  printf ("S233\t %.3f \t\t", clock_dif_30);
  check (1122);
  return 0;
;;    succ:       EXIT

}



;; Function s2233 (s2233, funcdef_no=618, decl_uid=9479, cgraph_uid=618, symbol_order=639)

Removing basic block 15
Merging blocks 4 and 19
s2233 ()
{
  vector(4) float * vectp_bb.2128;
  vector(4) float * vectp_bb.2127;
  vector(4) float vect__8.2126;
  vector(4) float vect__7.2125;
  vector(4) float * vectp_cc.2124;
  vector(4) float * vectp_cc.2123;
  vector(4) float vect__6.2122;
  vector(4) float * vectp_bb.2121;
  vector(4) float * vectp_bb.2120;
  unsigned int tmp.2119;
  int tmp.2118;
  int j;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  sizetype _5;
  float _6;
  float _7;
  float _8;
  sizetype _9;
  sizetype _10;
  sizetype _11;
  unsigned int ivtmp_14;
  float _33;
  float _34;
  float _35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_53;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;
  sizetype _56;
  sizetype _57;
  int _61;
  sizetype _68;
  sizetype _69;
  sizetype _70;
  unsigned int ivtmp_74;
  unsigned int ivtmp_75;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s233 ");
  start_t_20 = mysecond ();
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 14, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       7
;;                14
  # j_47 = PHI <1(7), j_22(14)>
  # ivtmp_53 = PHI <255(7), ivtmp_44(14)>
  _1 = j_47 + -1;
  _2 = aa[_1][i_46];
  _3 = cc[j_47][i_46];
  _4 = _2 + _3;
  aa[j_47][i_46] = _4;
  j_22 = j_47 + 1;
  ivtmp_44 = ivtmp_53 - 1;
  if (ivtmp_44 != 0)
    goto <bb 14>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       14
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  _61 = i_46 + -1;
  _11 = (sizetype) i_46;
  _10 = _11 * 1024;
  _9 = _10 + 18446744073709550596;
  vectp_bb.2121_12 = &bb + _9;
  _57 = (sizetype) i_46;
  _56 = _57 * 1024;
  _5 = _56 + 4;
  vectp_cc.2124_58 = &cc + _5;
  _68 = (sizetype) i_46;
  _69 = _68 * 1024;
  _70 = _69 + 4;
  vectp_bb.2128_67 = &bb + _70;
;;    succ:       5

;;   basic block 5, loop depth 3
;;    pred:       13
;;                4
  # j_48 = PHI <j_24(13), 1(4)>
  # ivtmp_55 = PHI <ivtmp_54(13), 255(4)>
  # vectp_bb.2120_62 = PHI <vectp_bb.2120_60(13), vectp_bb.2121_12(4)>
  # vectp_cc.2123_63 = PHI <vectp_cc.2123_64(13), vectp_cc.2124_58(4)>
  # vectp_bb.2127_71 = PHI <vectp_bb.2127_72(13), vectp_bb.2128_67(4)>
  # ivtmp_74 = PHI <ivtmp_75(13), 0(4)>
  vect__6.2122_59 = MEM[(float *)vectp_bb.2120_62];
  _6 = bb[_61][j_48];
  vect__7.2125_65 = MEM[(float *)vectp_cc.2123_63];
  _7 = cc[i_46][j_48];
  vect__8.2126_66 = vect__6.2122_59 + vect__7.2125_65;
  _8 = _6 + _7;
  MEM[(float *)vectp_bb.2127_71] = vect__8.2126_66;
  j_24 = j_48 + 1;
  ivtmp_54 = ivtmp_55 - 1;
  vectp_bb.2120_60 = vectp_bb.2120_62 + 16;
  vectp_cc.2123_64 = vectp_cc.2123_63 + 16;
  vectp_bb.2127_72 = vectp_bb.2127_71 + 16;
  ivtmp_75 = ivtmp_74 + 1;
  if (ivtmp_75 < 63)
    goto <bb 13>; [96.00%]
  else
    goto <bb 16>; [4.00%]
;;    succ:       13
;;                16

;;   basic block 13, loop depth 3
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 16, loop depth 2
;;    pred:       5
;;    succ:       17

;;   basic block 17, loop depth 3
;;    pred:       16
;;                18
  # j_38 = PHI <253(16), j_15(18)>
  # ivtmp_36 = PHI <3(16), ivtmp_14(18)>
  _35 = bb[_61][j_38];
  _34 = cc[i_46][j_38];
  _33 = _35 + _34;
  bb[i_46][j_38] = _33;
  j_15 = j_38 + 1;
  ivtmp_14 = ivtmp_36 - 1;
  if (ivtmp_14 != 0)
    goto <bb 18>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       18
;;                6

;;   basic block 18, loop depth 3
;;    pred:       17
  goto <bb 17>; [100.00%]
;;    succ:       17

;;   basic block 6, loop depth 2
;;    pred:       17
  i_25 = i_46 + 1;
  ivtmp_42 = ivtmp_43 - 1;
  if (ivtmp_42 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 2
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       9
;;                12
  # i_46 = PHI <1(9), i_25(12)>
  # ivtmp_43 = PHI <255(9), ivtmp_42(12)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_27 = nl_45 + 1;
  ivtmp_40 = ivtmp_41 - 1;
  if (ivtmp_40 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       8
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       2
;;                11
  # nl_45 = PHI <0(2), nl_27(11)>
  # ivtmp_41 = PHI <3900(2), ivtmp_40(11)>
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 0
;;    pred:       8
  end_t_29 = mysecond ();
  clock_dif_30 = end_t_29 - start_t_20;
  printf ("S2233\t %.3f \t\t", clock_dif_30);
  check (1122);
  return 0;
;;    succ:       EXIT

}



;; Function s235 (s235, funcdef_no=619, decl_uid=9500, cgraph_uid=619, symbol_order=640)

Merging blocks 7 and 12
s235 ()
{
  vector(4) float * vectp_aa.2202;
  vector(4) float * vectp_aa.2201;
  vector(4) float vect__10.2200;
  vector(4) float vect__9.2199;
  vector(4) float vect__8.2198;
  vector(4) float * vectp_bb.2197;
  vector(4) float * vectp_bb.2196;
  vector(4) float vect__7.2195;
  vector(4) float * vectp_aa.2194;
  vector(4) float * vectp_aa.2193;
  vector(4) float * vectp_a.2192;
  vector(4) float * vectp_a.2191;
  vector(4) float vect__5.2190;
  vector(4) float vect__4.2189;
  vector(4) float vect__3.2188;
  vector(4) float * vectp_c.2187;
  vector(4) float * vectp_c.2186;
  vector(4) float vect__2.2185;
  vector(4) float * vectp_b.2184;
  vector(4) float * vectp_b.2183;
  vector(4) float vect__1.2182;
  vector(4) float * vectp_a.2181;
  vector(4) float * vectp_a.2180;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  int _6;
  float _7;
  float _8;
  float _9;
  float _10;
  unsigned int ivtmp_11;
  unsigned int ivtmp_66;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;
  unsigned int ivtmp_69;
  unsigned int ivtmp_70;
  unsigned int ivtmp_74;
  unsigned int ivtmp_75;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s235 ");
  start_t_20 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       10
;;                7
  # i_42 = PHI <i_24(10), 0(7)>
  # ivtmp_69 = PHI <ivtmp_68(10), 256(7)>
  # vectp_a.2180_65 = PHI <vectp_a.2180_64(10), &a(7)>
  # vectp_b.2183_62 = PHI <vectp_b.2183_61(10), &b(7)>
  # vectp_c.2186_59 = PHI <vectp_c.2186_58(10), &c(7)>
  # vectp_a.2191_54 = PHI <vectp_a.2191_53(10), &a(7)>
  # vectp_aa.2193_51 = PHI <vectp_aa.2193_50(10), &aa(7)>
  # vectp_bb.2196_39 = PHI <vectp_bb.2196_38(10), vectp_bb.2197_40(7)>
  # vectp_aa.2201_16 = PHI <vectp_aa.2201_15(10), vectp_aa.2202_32(7)>
  # ivtmp_11 = PHI <ivtmp_74(10), 0(7)>
  vect__1.2182_63 = MEM[(float *)vectp_a.2180_65];
  _1 = a[i_42];
  vect__2.2185_60 = MEM[(float *)vectp_b.2183_62];
  _2 = b[i_42];
  vect__3.2188_57 = MEM[(float *)vectp_c.2186_59];
  _3 = c[i_42];
  vect__4.2189_56 = vect__2.2185_60 * vect__3.2188_57;
  _4 = _2 * _3;
  vect__5.2190_55 = vect__1.2182_63 + vect__4.2189_56;
  _5 = _1 + _4;
  MEM[(float *)vectp_a.2191_54] = vect__5.2190_55;
;;    succ:       4

;;   basic block 4, loop depth 3
;;    pred:       3
;;                11
  # j_43 = PHI <1(3), j_23(11)>
  # ivtmp_75 = PHI <255(3), ivtmp_70(11)>
  # vectp_aa.2193_49 = PHI <vectp_aa.2193_51(3), vectp_aa.2193_48(11)>
  # vectp_bb.2196_37 = PHI <vectp_bb.2196_39(3), vectp_bb.2196_36(11)>
  # vectp_aa.2201_14 = PHI <vectp_aa.2201_16(3), vectp_aa.2201_13(11)>
  _6 = j_43 + -1;
  vect__7.2195_47 = MEM[(float *)vectp_aa.2193_49];
  _7 = aa[_6][i_42];
  vect__8.2198_35 = MEM[(float *)vectp_bb.2196_37];
  _8 = bb[j_43][i_42];
  vect__9.2199_34 = vect__5.2190_55 * vect__8.2198_35;
  _9 = _5 * _8;
  vect__10.2200_33 = vect__7.2195_47 + vect__9.2199_34;
  _10 = _7 + _9;
  MEM[(float *)vectp_aa.2201_14] = vect__10.2200_33;
  j_23 = j_43 + 1;
  ivtmp_70 = ivtmp_75 - 1;
  vectp_aa.2193_48 = vectp_aa.2193_49 + 1024;
  vectp_bb.2196_36 = vectp_bb.2196_37 + 1024;
  vectp_aa.2201_13 = vectp_aa.2201_14 + 1024;
  if (ivtmp_70 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 5>; [1.01%]
;;    succ:       11
;;                5

;;   basic block 11, loop depth 3
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 2
;;    pred:       4
  i_24 = i_42 + 1;
  ivtmp_68 = ivtmp_69 - 1;
  vectp_a.2180_64 = vectp_a.2180_65 + 16;
  vectp_b.2183_61 = vectp_b.2183_62 + 16;
  vectp_c.2186_58 = vectp_c.2186_59 + 16;
  vectp_a.2191_53 = vectp_a.2191_54 + 16;
  vectp_aa.2193_50 = vectp_aa.2193_51 + 16;
  vectp_bb.2196_38 = vectp_bb.2196_39 + 16;
  vectp_aa.2201_15 = vectp_aa.2201_16 + 16;
  ivtmp_74 = ivtmp_11 + 1;
  if (ivtmp_74 < 64)
    goto <bb 10>; [96.00%]
  else
    goto <bb 6>; [4.00%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_26 = nl_41 + 1;
  ivtmp_66 = ivtmp_67 - 1;
  if (ivtmp_66 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_41 = PHI <0(2), nl_26(9)>
  # ivtmp_67 = PHI <7800(2), ivtmp_66(9)>
  vectp_bb.2197_40 = &bb + 1024;
  vectp_aa.2202_32 = &aa + 1024;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_28 = mysecond ();
  clock_dif_29 = end_t_28 - start_t_20;
  printf ("S235\t %.3f \t\t", clock_dif_29);
  check (111);
  return 0;
;;    succ:       EXIT

}



;; Function s241 (s241, funcdef_no=620, decl_uid=9517, cgraph_uid=620, symbol_order=641)

s241 ()
{
  int i;
  int D.17406;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  int _6;
  float _7;
  float _9;
  float _28;
  unsigned int ivtmp_41;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s241 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_32 = PHI <0(5), _6(8)>
  # ivtmp_45 = PHI <31999(5), ivtmp_44(8)>
  _1 = b[i_32];
  _2 = c[i_32];
  _3 = _1 * _2;
  _4 = d[i_32];
  _5 = _3 * _4;
  a[i_32] = _5;
  _6 = i_32 + 1;
  _7 = a[_6];
  _28 = _4 * _7;
  _9 = _5 * _28;
  b[i_32] = _9;
  ivtmp_44 = ivtmp_45 - 1;
  if (ivtmp_44 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_31 + 1;
  ivtmp_41 = ivtmp_43 - 1;
  if (ivtmp_41 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_31 = PHI <0(2), nl_21(7)>
  # ivtmp_43 = PHI <20000(2), ivtmp_41(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_17;
  printf ("S241\t %.3f \t\t", clock_dif_24);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s242 (s242, funcdef_no=621, decl_uid=9532, cgraph_uid=621, symbol_order=642)

s242 (float s1, float s2)
{
  int i;
  int D.17429;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _5;
  float _7;
  float _9;
  float _10;
  float _11;
  float _12;
  float _31;
  float _33;
  unsigned int ivtmp_58;
  unsigned int ivtmp_62;
  unsigned int ivtmp_63;
  unsigned int ivtmp_64;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _31 = s1_19(D) + s2_20(D);
  init.part.3 ("s242 ");
  start_t_18 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_35 = PHI <1(5), i_22(8)>
  # ivtmp_64 = PHI <31999(5), ivtmp_63(8)>
  _1 = i_35 + -1;
  _2 = a[_1];
  _5 = b[i_35];
  _7 = c[i_35];
  _11 = _5 + _7;
  _12 = _11 + _31;
  _9 = d[i_35];
  _33 = _2 + _9;
  _10 = _12 + _33;
  a[i_35] = _10;
  i_22 = i_35 + 1;
  ivtmp_63 = ivtmp_64 - 1;
  if (ivtmp_63 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_34 + 1;
  ivtmp_58 = ivtmp_62 - 1;
  if (ivtmp_58 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_34 = PHI <0(2), nl_24(7)>
  # ivtmp_62 = PHI <2000(2), ivtmp_58(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_18;
  printf ("S242\t %.3f \t\t", clock_dif_27);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s243 (s243, funcdef_no=622, decl_uid=9545, cgraph_uid=622, symbol_order=643)

s243 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  int _9;
  float _10;
  float _11;
  float _12;
  unsigned int ivtmp_60;
  unsigned int ivtmp_63;
  unsigned int ivtmp_64;
  unsigned int ivtmp_65;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s243 ");
  start_t_20 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_38 = PHI <0(5), _9(8)>
  # ivtmp_65 = PHI <31999(5), ivtmp_64(8)>
  _1 = b[i_38];
  _2 = c[i_38];
  _3 = d[i_38];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_38] = _5;
  _6 = e[i_38];
  _7 = _3 * _6;
  _8 = _5 + _7;
  b[i_38] = _8;
  _9 = i_38 + 1;
  _10 = a[_9];
  _11 = _3 * _10;
  _12 = _8 + _11;
  a[i_38] = _12;
  ivtmp_64 = ivtmp_65 - 1;
  if (ivtmp_64 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_25 = nl_37 + 1;
  ivtmp_60 = ivtmp_63 - 1;
  if (ivtmp_60 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_37 = PHI <0(2), nl_25(7)>
  # ivtmp_63 = PHI <10000(2), ivtmp_60(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_20;
  printf ("S243\t %.3f \t\t", clock_dif_28);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s244 (s244, funcdef_no=623, decl_uid=9558, cgraph_uid=623, symbol_order=644)

s244 ()
{
  int i;
  int D.17479;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  int _7;
  float _8;
  float _9;
  float _10;
  unsigned int ivtmp_45;
  unsigned int ivtmp_46;
  unsigned int ivtmp_47;
  unsigned int ivtmp_50;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s244 ");
  start_t_18 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_34 = PHI <0(5), _7(8)>
  # ivtmp_50 = PHI <31999(5), ivtmp_47(8)>
  _1 = b[i_34];
  _2 = c[i_34];
  _3 = d[i_34];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_34] = _5;
  _6 = _1 + _2;
  b[i_34] = _6;
  _7 = i_34 + 1;
  _8 = a[_7];
  _9 = _3 * _8;
  _10 = _6 + _9;
  a[_7] = _10;
  ivtmp_47 = ivtmp_50 - 1;
  if (ivtmp_47 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_33 + 1;
  ivtmp_45 = ivtmp_46 - 1;
  if (ivtmp_45 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_23(7)>
  # ivtmp_46 = PHI <10000(2), ivtmp_45(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_18;
  printf ("S244\t %.3f \t\t", clock_dif_26);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s1244 (s1244, funcdef_no=624, decl_uid=9571, cgraph_uid=624, symbol_order=645)

s1244 ()
{
  int i;
  int D.17502;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float powmult_3;
  float powmult_5;
  float _7;
  int _8;
  float _9;
  float _10;
  float _11;
  float _29;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;
  unsigned int ivtmp_63;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s244 ");
  start_t_18 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_33 = PHI <0(5), _8(8)>
  # ivtmp_63 = PHI <31999(5), ivtmp_62(8)>
  _1 = b[i_33];
  _2 = c[i_33];
  _29 = _1 + _2;
  powmult_3 = _2 * _2;
  powmult_5 = _1 * _1;
  _11 = powmult_3 + powmult_5;
  _7 = _11 + _29;
  a[i_33] = _7;
  _8 = i_33 + 1;
  _9 = a[_8];
  _10 = _7 + _9;
  d[i_33] = _10;
  ivtmp_62 = ivtmp_63 - 1;
  if (ivtmp_62 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_60 = ivtmp_61 - 1;
  if (ivtmp_60 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_22(7)>
  # ivtmp_61 = PHI <10000(2), ivtmp_60(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_18;
  printf ("S1244\t %.3f \t\t", clock_dif_25);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s2244 (s2244, funcdef_no=625, decl_uid=9584, cgraph_uid=625, symbol_order=646)

Removing basic block 9
Merging blocks 5 and 13
s2244 ()
{
  vector(4) float * vectp_a.2346;
  vector(4) float * vectp_a.2345;
  vector(4) float vect__6.2344;
  vector(4) float vect__5.2343;
  vector(4) float * vectp_c.2342;
  vector(4) float * vectp_c.2341;
  vector(4) float * vectp_a.2340;
  vector(4) float * vectp_a.2339;
  vector(4) float vect__4.2338;
  vector(4) float vect__2.2337;
  vector(4) float * vectp_e.2336;
  vector(4) float * vectp_e.2335;
  vector(4) float vect__1.2334;
  vector(4) float * vectp_b.2333;
  vector(4) float * vectp_b.2332;
  unsigned int tmp.2331;
  int tmp.2330;
  int i;
  int D.17525;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _10;
  int _25;
  float _26;
  float _27;
  unsigned int ivtmp_31;
  unsigned int ivtmp_32;
  unsigned int ivtmp_37;
  unsigned int ivtmp_38;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s244 ");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_35 = PHI <31996(10), _25(12)>
  # ivtmp_31 = PHI <3(10), ivtmp_32(12)>
  _27 = b[i_35];
  _26 = e[i_35];
  _25 = i_35 + 1;
  _10 = _27 + _26;
  a[_25] = _10;
  _8 = c[i_35];
  _7 = _27 + _8;
  a[i_35] = _7;
  ivtmp_32 = ivtmp_31 - 1;
  if (ivtmp_32 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_29 = PHI <_3(8), 0(5)>
  # ivtmp_41 = PHI <ivtmp_40(8), 31999(5)>
  # vectp_b.2332_24 = PHI <vectp_b.2332_43(8), &b(5)>
  # vectp_e.2335_45 = PHI <vectp_e.2335_46(8), &e(5)>
  # vectp_a.2339_50 = PHI <vectp_a.2339_51(8), vectp_a.2340_49(5)>
  # vectp_c.2341_53 = PHI <vectp_c.2341_54(8), &c(5)>
  # vectp_a.2345_57 = PHI <vectp_a.2345_58(8), &a(5)>
  # ivtmp_60 = PHI <ivtmp_61(8), 0(5)>
  vect__1.2334_12 = MEM[(float *)vectp_b.2332_24];
  _1 = b[i_29];
  vect__2.2337_47 = MEM[(float *)vectp_e.2335_45];
  _2 = e[i_29];
  _3 = i_29 + 1;
  vect__4.2338_48 = vect__1.2334_12 + vect__2.2337_47;
  _4 = _1 + _2;
  MEM[(float *)vectp_a.2339_50] = vect__4.2338_48;
  vect__5.2343_55 = MEM[(float *)vectp_c.2341_53];
  _5 = c[i_29];
  vect__6.2344_56 = vect__1.2334_12 + vect__5.2343_55;
  _6 = _1 + _5;
  MEM[(float *)vectp_a.2345_57] = vect__6.2344_56;
  ivtmp_40 = ivtmp_41 - 1;
  vectp_b.2332_43 = vectp_b.2332_24 + 16;
  vectp_e.2335_46 = vectp_e.2335_45 + 16;
  vectp_a.2339_51 = vectp_a.2339_50 + 16;
  vectp_c.2341_54 = vectp_c.2341_53 + 16;
  vectp_a.2345_58 = vectp_a.2345_57 + 16;
  ivtmp_61 = ivtmp_60 + 1;
  if (ivtmp_61 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_37 = ivtmp_38 - 1;
  if (ivtmp_37 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_38 = PHI <10000(2), ivtmp_37(7)>
  vectp_a.2340_49 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S2244\t %.3f \t\t", clock_dif_21);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s251 (s251, funcdef_no=626, decl_uid=9597, cgraph_uid=626, symbol_order=647)

Merging blocks 5 and 9
s251 ()
{
  vector(4) float * vectp_a.2380;
  vector(4) float * vectp_a.2379;
  vector(4) float vect_powmult_5.2378;
  vector(4) float vect_s_14.2377;
  vector(4) float vect__4.2376;
  vector(4) float vect__3.2375;
  vector(4) float * vectp_d.2374;
  vector(4) float * vectp_d.2373;
  vector(4) float vect__2.2372;
  vector(4) float * vectp_c.2371;
  vector(4) float * vectp_c.2370;
  vector(4) float vect__1.2369;
  vector(4) float * vectp_b.2368;
  vector(4) float * vectp_b.2367;
  int i;
  int D.17568;
  int i;
  int nl;
  float s;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float powmult_5;
  unsigned int ivtmp_11;
  unsigned int ivtmp_24;
  unsigned int ivtmp_48;
  unsigned int ivtmp_49;
  unsigned int ivtmp_50;
  unsigned int ivtmp_51;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s251 ");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_29 = PHI <i_16(8), 0(5)>
  # ivtmp_51 = PHI <ivtmp_50(8), 32000(5)>
  # vectp_b.2367_47 = PHI <vectp_b.2367_43(8), &b(5)>
  # vectp_c.2370_41 = PHI <vectp_c.2370_40(8), &c(5)>
  # vectp_d.2373_37 = PHI <vectp_d.2373_36(8), &d(5)>
  # vectp_a.2379_31 = PHI <vectp_a.2379_27(8), &a(5)>
  # ivtmp_24 = PHI <ivtmp_11(8), 0(5)>
  vect__1.2369_42 = MEM[(float *)vectp_b.2367_47];
  _1 = b[i_29];
  vect__2.2372_38 = MEM[(float *)vectp_c.2370_41];
  _2 = c[i_29];
  vect__3.2375_35 = MEM[(float *)vectp_d.2373_37];
  _3 = d[i_29];
  vect__4.2376_34 = vect__2.2372_38 * vect__3.2375_35;
  _4 = _2 * _3;
  vect_s_14.2377_33 = vect__1.2369_42 + vect__4.2376_34;
  s_14 = _1 + _4;
  vect_powmult_5.2378_32 = vect_s_14.2377_33 * vect_s_14.2377_33;
  powmult_5 = s_14 * s_14;
  MEM[(float *)vectp_a.2379_31] = vect_powmult_5.2378_32;
  i_16 = i_29 + 1;
  ivtmp_50 = ivtmp_51 - 1;
  vectp_b.2367_43 = vectp_b.2367_47 + 16;
  vectp_c.2370_40 = vectp_c.2370_41 + 16;
  vectp_d.2373_36 = vectp_d.2373_37 + 16;
  vectp_a.2379_27 = vectp_a.2379_31 + 16;
  ivtmp_11 = ivtmp_24 + 1;
  if (ivtmp_11 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_48 = ivtmp_49 - 1;
  if (ivtmp_48 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_49 = PHI <40000(2), ivtmp_48(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_13;
  printf ("S251\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s1251 (s1251, funcdef_no=627, decl_uid=9611, cgraph_uid=627, symbol_order=648)

Merging blocks 5 and 9
s1251 ()
{
  vector(4) float * vectp_a.2419;
  vector(4) float * vectp_a.2418;
  vector(4) float vect__7.2417;
  vector(4) float vect__6.2416;
  vector(4) float * vectp_e.2415;
  vector(4) float * vectp_e.2414;
  vector(4) float * vectp_b.2413;
  vector(4) float * vectp_b.2412;
  vector(4) float vect__5.2411;
  vector(4) float vect__4.2410;
  vector(4) float * vectp_d.2409;
  vector(4) float * vectp_d.2408;
  vector(4) float vect__3.2407;
  vector(4) float * vectp_a.2406;
  vector(4) float * vectp_a.2405;
  vector(4) float vect_s_16.2404;
  vector(4) float vect__2.2403;
  vector(4) float * vectp_c.2402;
  vector(4) float * vectp_c.2401;
  vector(4) float vect__1.2400;
  vector(4) float * vectp_b.2399;
  vector(4) float * vectp_b.2398;
  int i;
  int D.17605;
  int i;
  int nl;
  float s;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_46;
  unsigned int ivtmp_48;
  unsigned int ivtmp_49;
  unsigned int ivtmp_50;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s251 ");
  start_t_15 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_32 = PHI <i_19(8), 0(5)>
  # ivtmp_50 = PHI <ivtmp_49(8), 32000(5)>
  # vectp_b.2398_45 = PHI <vectp_b.2398_44(8), &b(5)>
  # vectp_c.2401_41 = PHI <vectp_c.2401_40(8), &c(5)>
  # vectp_a.2405_37 = PHI <vectp_a.2405_36(8), &a(5)>
  # vectp_d.2408_34 = PHI <vectp_d.2408_30(8), &d(5)>
  # vectp_b.2412_27 = PHI <vectp_b.2412_13(8), &b(5)>
  # vectp_e.2414_10 = PHI <vectp_e.2414_9(8), &e(5)>
  # vectp_a.2418_51 = PHI <vectp_a.2418_53(8), &a(5)>
  # ivtmp_55 = PHI <ivtmp_56(8), 0(5)>
  vect__1.2400_43 = MEM[(float *)vectp_b.2398_45];
  _1 = b[i_32];
  vect__2.2403_39 = MEM[(float *)vectp_c.2401_41];
  _2 = c[i_32];
  vect_s_16.2404_38 = vect__1.2400_43 + vect__2.2403_39;
  s_16 = _1 + _2;
  vect__3.2407_35 = MEM[(float *)vectp_a.2405_37];
  _3 = a[i_32];
  vect__4.2410_29 = MEM[(float *)vectp_d.2408_34];
  _4 = d[i_32];
  vect__5.2411_28 = vect__3.2407_35 + vect__4.2410_29;
  _5 = _3 + _4;
  MEM[(float *)vectp_b.2412_27] = vect__5.2411_28;
  vect__6.2416_8 = MEM[(float *)vectp_e.2414_10];
  _6 = e[i_32];
  vect__7.2417_52 = vect__6.2416_8 * vect_s_16.2404_38;
  _7 = _6 * s_16;
  MEM[(float *)vectp_a.2418_51] = vect__7.2417_52;
  i_19 = i_32 + 1;
  ivtmp_49 = ivtmp_50 - 1;
  vectp_b.2398_44 = vectp_b.2398_45 + 16;
  vectp_c.2401_40 = vectp_c.2401_41 + 16;
  vectp_a.2405_36 = vectp_a.2405_37 + 16;
  vectp_d.2408_30 = vectp_d.2408_34 + 16;
  vectp_b.2412_13 = vectp_b.2412_27 + 16;
  vectp_e.2414_9 = vectp_e.2414_10 + 16;
  vectp_a.2418_53 = vectp_a.2418_51 + 16;
  ivtmp_56 = ivtmp_55 + 1;
  if (ivtmp_56 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_31 + 1;
  ivtmp_46 = ivtmp_48 - 1;
  if (ivtmp_46 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_31 = PHI <0(2), nl_21(7)>
  # ivtmp_48 = PHI <40000(2), ivtmp_46(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_15;
  printf ("S1251\t %.3f \t\t", clock_dif_24);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s2251 (s2251, funcdef_no=628, decl_uid=9625, cgraph_uid=628, symbol_order=649)

s2251 ()
{
  int i;
  int D.17652;
  int i;
  float s;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s251 ");
  start_t_15 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # s_42 = PHI <0.0(5), s_17(8)>
  # i_33 = PHI <0(5), i_19(8)>
  # ivtmp_45 = PHI <32000(5), ivtmp_41(8)>
  _1 = e[i_33];
  _2 = _1 * s_42;
  a[i_33] = _2;
  _3 = b[i_33];
  _4 = c[i_33];
  s_17 = _3 + _4;
  _5 = d[i_33];
  _6 = _2 + _5;
  b[i_33] = _6;
  i_19 = i_33 + 1;
  ivtmp_41 = ivtmp_45 - 1;
  if (ivtmp_41 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_32 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  if (ivtmp_39 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_21(7)>
  # ivtmp_40 = PHI <10000(2), ivtmp_39(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_15;
  printf ("S2251\t %.3f \t\t", clock_dif_24);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s3251 (s3251, funcdef_no=629, decl_uid=9639, cgraph_uid=629, symbol_order=650)

Removing basic block 9
Merging blocks 5 and 13
s3251 ()
{
  vector(4) float * vectp_d.2478;
  vector(4) float * vectp_d.2477;
  vector(4) float vect__8.2476;
  vector(4) float vect__7.2475;
  vector(4) float * vectp_a.2474;
  vector(4) float * vectp_a.2473;
  vector(4) float * vectp_b.2472;
  vector(4) float * vectp_b.2471;
  vector(4) float vect__6.2470;
  vector(4) float vect__5.2469;
  vector(4) float * vectp_e.2468;
  vector(4) float * vectp_e.2467;
  vector(4) float * vectp_a.2466;
  vector(4) float * vectp_a.2465;
  vector(4) float vect__4.2464;
  vector(4) float vect__2.2463;
  vector(4) float * vectp_c.2462;
  vector(4) float * vectp_c.2461;
  vector(4) float vect__1.2460;
  vector(4) float * vectp_b.2459;
  vector(4) float * vectp_b.2458;
  unsigned int tmp.2457;
  int tmp.2456;
  int i;
  int D.17675;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _11;
  int _12;
  float _28;
  float _29;
  unsigned int ivtmp_30;
  float _36;
  float _38;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  float _45;
  unsigned int ivtmp_46;
  unsigned int ivtmp_73;
  unsigned int ivtmp_74;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s251 ");
  start_t_16 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 1
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_37 = PHI <31996(10), _12(12)>
  # ivtmp_30 = PHI <3(10), ivtmp_46(12)>
  _29 = b[i_37];
  _28 = c[i_37];
  _12 = i_37 + 1;
  _11 = _29 + _28;
  a[_12] = _11;
  _9 = e[i_37];
  _36 = _28 * _9;
  b[i_37] = _36;
  _38 = a[i_37];
  _45 = _9 * _38;
  d[i_37] = _45;
  ivtmp_46 = ivtmp_30 - 1;
  if (ivtmp_46 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       12
;;                4

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_32 = PHI <_3(8), 0(5)>
  # ivtmp_44 = PHI <ivtmp_43(8), 31999(5)>
  # vectp_b.2458_48 = PHI <vectp_b.2458_49(8), &b(5)>
  # vectp_c.2461_51 = PHI <vectp_c.2461_52(8), &c(5)>
  # vectp_a.2465_56 = PHI <vectp_a.2465_57(8), vectp_a.2466_55(5)>
  # vectp_e.2467_59 = PHI <vectp_e.2467_60(8), &e(5)>
  # vectp_b.2471_63 = PHI <vectp_b.2471_64(8), &b(5)>
  # vectp_a.2473_66 = PHI <vectp_a.2473_67(8), &a(5)>
  # vectp_d.2477_70 = PHI <vectp_d.2477_71(8), &d(5)>
  # ivtmp_73 = PHI <ivtmp_74(8), 0(5)>
  vect__1.2460_50 = MEM[(float *)vectp_b.2458_48];
  _1 = b[i_32];
  vect__2.2463_53 = MEM[(float *)vectp_c.2461_51];
  _2 = c[i_32];
  _3 = i_32 + 1;
  vect__4.2464_54 = vect__1.2460_50 + vect__2.2463_53;
  _4 = _1 + _2;
  MEM[(float *)vectp_a.2465_56] = vect__4.2464_54;
  vect__5.2469_61 = MEM[(float *)vectp_e.2467_59];
  _5 = e[i_32];
  vect__6.2470_62 = vect__2.2463_53 * vect__5.2469_61;
  _6 = _2 * _5;
  MEM[(float *)vectp_b.2471_63] = vect__6.2470_62;
  vect__7.2475_68 = MEM[(float *)vectp_a.2473_66];
  _7 = a[i_32];
  vect__8.2476_69 = vect__5.2469_61 * vect__7.2475_68;
  _8 = _5 * _7;
  MEM[(float *)vectp_d.2477_70] = vect__8.2476_69;
  ivtmp_43 = ivtmp_44 - 1;
  vectp_b.2458_49 = vectp_b.2458_48 + 16;
  vectp_c.2461_52 = vectp_c.2461_51 + 16;
  vectp_a.2465_57 = vectp_a.2465_56 + 16;
  vectp_e.2467_60 = vectp_e.2467_59 + 16;
  vectp_b.2471_64 = vectp_b.2471_63 + 16;
  vectp_a.2473_67 = vectp_a.2473_66 + 16;
  vectp_d.2477_71 = vectp_d.2477_70 + 16;
  ivtmp_74 = ivtmp_73 + 1;
  if (ivtmp_74 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 4, loop depth 1
;;    pred:       11
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_31 + 1;
  ivtmp_40 = ivtmp_41 - 1;
  if (ivtmp_40 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_31 = PHI <0(2), nl_21(7)>
  # ivtmp_41 = PHI <10000(2), ivtmp_40(7)>
  vectp_a.2466_55 = &a + 4;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_16;
  printf ("S3251\t %.3f \t\t", clock_dif_24);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s252 (s252, funcdef_no=630, decl_uid=9652, cgraph_uid=630, symbol_order=651)

s252 ()
{
  int i;
  int D.17727;
  int i;
  int nl;
  float s;
  float t;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s252 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # t_28 = PHI <0.0(5), s_13(8)>
  # i_29 = PHI <0(5), i_15(8)>
  # ivtmp_40 = PHI <32000(5), ivtmp_37(8)>
  _1 = b[i_29];
  _2 = c[i_29];
  s_13 = _1 * _2;
  _3 = s_13 + t_28;
  a[i_29] = _3;
  i_15 = i_29 + 1;
  ivtmp_37 = ivtmp_40 - 1;
  if (ivtmp_37 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_38 + 1;
  ivtmp_35 = ivtmp_36 - 1;
  if (ivtmp_35 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_38 = PHI <0(2), nl_17(7)>
  # ivtmp_36 = PHI <10000(2), ivtmp_35(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_12;
  printf ("S252\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s253 (s253, funcdef_no=631, decl_uid=9667, cgraph_uid=631, symbol_order=652)

s253 ()
{
  int i;
  int D.17748;
  int i;
  int nl;
  float s;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_11;
  unsigned int ivtmp_29;
  unsigned int ivtmp_30;
  unsigned int ivtmp_41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s253 ");
  start_t_15 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_32 = PHI <0(7), i_19(10)>
  # ivtmp_41 = PHI <32000(7), ivtmp_30(10)>
  _1 = a[i_32];
  _2 = b[i_32];
  if (_1 > _2)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _3 = d[i_32];
  _4 = _2 * _3;
  s_16 = _1 - _4;
  _5 = c[i_32];
  _6 = _5 + s_16;
  c[i_32] = _6;
  a[i_32] = s_16;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  i_19 = i_32 + 1;
  ivtmp_30 = ivtmp_41 - 1;
  if (ivtmp_30 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_21 = nl_31 + 1;
  ivtmp_11 = ivtmp_29 - 1;
  if (ivtmp_11 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_31 = PHI <0(2), nl_21(9)>
  # ivtmp_29 = PHI <10000(2), ivtmp_11(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_15;
  printf ("S253\t %.3f \t\t", clock_dif_24);
  check (13);
  return 0;
;;    succ:       EXIT

}



;; Function s254 (s254, funcdef_no=632, decl_uid=9681, cgraph_uid=632, symbol_order=653)

s254 ()
{
  int i;
  int D.17770;
  int i;
  int nl;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_27;
  unsigned int ivtmp_31;
  unsigned int ivtmp_32;
  unsigned int ivtmp_37;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s254 ");
  start_t_12 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # nl_38 = PHI <0(2), nl_17(7)>
  # ivtmp_31 = PHI <40000(2), ivtmp_27(7)>
  x_13 = b[31999];
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       3
;;                8
  # x_28 = PHI <x_13(3), _1(8)>
  # i_29 = PHI <0(3), i_15(8)>
  # ivtmp_37 = PHI <32000(3), ivtmp_32(8)>
  _1 = b[i_29];
  _2 = _1 + x_28;
  _3 = _2 * 5.0e-1;
  a[i_29] = _3;
  i_15 = i_29 + 1;
  ivtmp_32 = ivtmp_37 - 1;
  if (ivtmp_32 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 5>; [1.01%]
;;    succ:       8
;;                5

;;   basic block 8, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_38 + 1;
  ivtmp_27 = ivtmp_31 - 1;
  if (ivtmp_27 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_12;
  printf ("S254\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s255 (s255, funcdef_no=633, decl_uid=9695, cgraph_uid=633, symbol_order=654)

s255 ()
{
  int i;
  int D.17790;
  int i;
  int nl;
  float y;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_43;
  unsigned int ivtmp_45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s255 ");
  start_t_14 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_20(7)>
  # ivtmp_40 = PHI <10000(2), ivtmp_39(7)>
  x_15 = b[31999];
  y_16 = b[31998];
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       3
;;                8
  # x_41 = PHI <x_15(3), _1(8)>
  # y_32 = PHI <y_16(3), x_41(8)>
  # i_42 = PHI <0(3), i_18(8)>
  # ivtmp_45 = PHI <32000(3), ivtmp_43(8)>
  _1 = b[i_42];
  _2 = _1 + x_41;
  _3 = _2 + y_32;
  _4 = _3 * 3.33000004291534423828125e-1;
  a[i_42] = _4;
  i_18 = i_42 + 1;
  ivtmp_43 = ivtmp_45 - 1;
  if (ivtmp_43 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 5>; [1.01%]
;;    succ:       8
;;                5

;;   basic block 8, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_33 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  if (ivtmp_39 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_14;
  printf ("S255\t %.3f \t\t", clock_dif_23);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s256 (s256, funcdef_no=634, decl_uid=9710, cgraph_uid=634, symbol_order=655)

s256 ()
{
  int i;
  int D.17810;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_62;
  unsigned int ivtmp_63;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s256 ");
  start_t_17 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # j_45 = PHI <1(5), j_20(11)>
  # ivtmp_63 = PHI <255(5), ivtmp_62(11)>
  _1 = j_45 + -1;
  _2 = a[_1];
  _3 = 1.0e+0 - _2;
  a[j_45] = _3;
  _4 = bb[j_45][i_36];
  _5 = d[j_45];
  _6 = _4 * _5;
  _7 = _3 + _6;
  cc[j_45][i_36] = _7;
  j_20 = j_45 + 1;
  ivtmp_62 = ivtmp_63 - 1;
  if (ivtmp_62 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  i_21 = i_36 + 1;
  ivtmp_56 = ivtmp_57 - 1;
  if (ivtmp_56 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # i_36 = PHI <0(7), i_21(10)>
  # ivtmp_57 = PHI <256(7), ivtmp_56(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_35 + 1;
  ivtmp_54 = ivtmp_55 - 1;
  if (ivtmp_54 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_35 = PHI <0(2), nl_23(9)>
  # ivtmp_55 = PHI <390(2), ivtmp_54(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_17;
  printf ("S256\t %.3f \t\t", clock_dif_26);
  check (111);
  return 0;
;;    succ:       EXIT

}



;; Function s257 (s257, funcdef_no=635, decl_uid=9727, cgraph_uid=635, symbol_order=656)

s257 ()
{
  float a_I_lsm.2595;
  int i;
  int D.17850;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _42;
  unsigned int ivtmp_47;
  unsigned int ivtmp_49;
  unsigned int ivtmp_50;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;
  unsigned int ivtmp_53;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s257 ");
  start_t_16 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # j_44 = PHI <0(5), j_19(11)>
  # ivtmp_53 = PHI <256(5), ivtmp_52(11)>
  _1 = aa[j_44][i_35];
  _4 = _1 - _3;
  _5 = bb[j_44][i_35];
  _6 = _4 + _5;
  aa[j_44][i_35] = _6;
  j_19 = j_44 + 1;
  ivtmp_52 = ivtmp_53 - 1;
  if (ivtmp_52 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  # _42 = PHI <_4(3)>
  a[i_35] = _42;
  i_20 = i_35 + 1;
  ivtmp_50 = ivtmp_51 - 1;
  if (ivtmp_50 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # i_35 = PHI <1(7), i_20(10)>
  # ivtmp_51 = PHI <255(7), ivtmp_50(10)>
  _2 = i_35 + -1;
  _3 = a[_2];
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_34 + 1;
  ivtmp_47 = ivtmp_49 - 1;
  if (ivtmp_47 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_34 = PHI <0(2), nl_22(9)>
  # ivtmp_49 = PHI <390(2), ivtmp_47(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_16;
  printf ("S257\t %.3f \t\t", clock_dif_25);
  check (111);
  return 0;
;;    succ:       EXIT

}



;; Function s258 (s258, funcdef_no=636, decl_uid=9744, cgraph_uid=636, symbol_order=657)

Removing basic block 9
Removing basic block 10
Removing basic block 6
Removing basic block 3
Removing basic block 7
Removing basic block 20
Removing basic block 16
Removing basic block 13
Removing basic block 27
Merging blocks 2 and 21
Merging blocks 12 and 28
s258 ()
{
  int i;
  int nl;
  float s;
  double clock_dif;
  double end_t;
  double start_t;
  unsigned int ivtmp_14;
  _Bool _32;
  unsigned int ivtmp_58;
  _Bool _60;
  unsigned int ivtmp_64;
  float _65;
  float pretmp_66;
  float powmult_67;
  float _69;
  float _70;
  float _71;
  float _73;
  float _74;
  float _75;
  unsigned int ivtmp_78;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s258 ");
  start_t_19 = mysecond ();
  _32 = 0;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       18
;;                2
  # nl_31 = PHI <nl_57(18), 0(2)>
  # ivtmp_14 = PHI <ivtmp_58(18), 10000(2)>
  _60 = 0;
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       25
;;                12
  # s_61 = PHI <s_68(25), 0.0(12)>
  # i_62 = PHI <i_77(25), 0(12)>
  # ivtmp_64 = PHI <ivtmp_78(25), 256(12)>
  _65 = a[i_62];
  pretmp_66 = d[i_62];
  if (_65 > 0.0)
    goto <bb 23>; [59.00%]
  else
    goto <bb 24>; [41.00%]
;;    succ:       23
;;                24

;;   basic block 23, loop depth 2
;;    pred:       22
  powmult_67 = pretmp_66 * pretmp_66;
;;    succ:       24

;;   basic block 24, loop depth 2
;;    pred:       22
;;                23
  # s_68 = PHI <s_61(22), powmult_67(23)>
  _69 = c[i_62];
  _70 = _69 * s_68;
  _71 = _70 + pretmp_66;
  b[i_62] = _71;
  _73 = s_68 + 1.0e+0;
  _74 = aa[0][i_62];
  _75 = _73 * _74;
  e[i_62] = _75;
  i_77 = i_62 + 1;
  ivtmp_78 = ivtmp_64 - 1;
  if (ivtmp_78 != 0)
    goto <bb 25>; [98.99%]
  else
    goto <bb 17>; [1.01%]
;;    succ:       25
;;                17

;;   basic block 25, loop depth 2
;;    pred:       24
  goto <bb 22>; [100.00%]
;;    succ:       22

;;   basic block 17, loop depth 1
;;    pred:       24
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_57 = nl_31 + 1;
  ivtmp_58 = ivtmp_14 - 1;
  if (ivtmp_58 != 0)
    goto <bb 18>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       18
;;                8

;;   basic block 18, loop depth 1
;;    pred:       17
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 8, loop depth 0
;;    pred:       17
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_19;
  printf ("S258\t %.3f \t\t", clock_dif_28);
  check (25);
  return 0;
;;    succ:       EXIT

}



;; Function s261 (s261, funcdef_no=637, decl_uid=9758, cgraph_uid=637, symbol_order=658)

s261 ()
{
  int i;
  int D.17905;
  int i;
  int nl;
  float t;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_49;
  unsigned int ivtmp_50;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s261 ");
  start_t_15 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_33 = PHI <1(5), i_20(8)>
  # ivtmp_52 = PHI <31999(5), ivtmp_51(8)>
  _1 = a[i_33];
  _2 = b[i_33];
  t_16 = _1 + _2;
  _3 = i_33 + -1;
  _4 = c[_3];
  _5 = _4 + t_16;
  a[i_33] = _5;
  _6 = c[i_33];
  _7 = d[i_33];
  t_18 = _6 * _7;
  c[i_33] = t_18;
  i_20 = i_33 + 1;
  ivtmp_51 = ivtmp_52 - 1;
  if (ivtmp_51 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_49 = ivtmp_50 - 1;
  if (ivtmp_49 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_22(7)>
  # ivtmp_50 = PHI <10000(2), ivtmp_49(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_15;
  printf ("S261\t %.3f \t\t", clock_dif_25);
  check (13);
  return 0;
;;    succ:       EXIT

}



;; Function s271 (s271, funcdef_no=638, decl_uid=9772, cgraph_uid=638, symbol_order=659)

s271 ()
{
  int i;
  int D.17934;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_7;
  unsigned int ivtmp_26;
  unsigned int ivtmp_27;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s271 ");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_29 = PHI <0(7), i_16(10)>
  # ivtmp_38 = PHI <32000(7), ivtmp_27(10)>
  _1 = b[i_29];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _2 = a[i_29];
  _3 = c[i_29];
  _4 = _1 * _3;
  _5 = _2 + _4;
  a[i_29] = _5;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  i_16 = i_29 + 1;
  ivtmp_27 = ivtmp_38 - 1;
  if (ivtmp_27 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_7 = ivtmp_26 - 1;
  if (ivtmp_7 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_28 = PHI <0(2), nl_18(9)>
  # ivtmp_26 = PHI <40000(2), ivtmp_7(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S271\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s272 (s272, funcdef_no=639, decl_uid=9786, cgraph_uid=639, symbol_order=660)

s272 (float t)
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float powmult_8;
  float _9;
  unsigned int ivtmp_30;
  unsigned int ivtmp_33;
  unsigned int ivtmp_34;
  unsigned int ivtmp_35;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s272 ");
  start_t_18 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_37 = PHI <0(7), i_22(10)>
  # ivtmp_35 = PHI <32000(7), ivtmp_34(10)>
  _1 = e[i_37];
  if (_1 >= t_19(D))
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _2 = a[i_37];
  _3 = c[i_37];
  _4 = d[i_37];
  _5 = _3 * _4;
  _6 = _2 + _5;
  a[i_37] = _6;
  _7 = b[i_37];
  powmult_8 = _3 * _3;
  _9 = _7 + powmult_8;
  b[i_37] = _9;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  i_22 = i_37 + 1;
  ivtmp_34 = ivtmp_35 - 1;
  if (ivtmp_34 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_36 + 1;
  ivtmp_30 = ivtmp_33 - 1;
  if (ivtmp_30 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_36 = PHI <0(2), nl_24(9)>
  # ivtmp_33 = PHI <10000(2), ivtmp_30(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_18;
  printf ("S272\t %.3f \t\t", clock_dif_27);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s273 (s273, funcdef_no=640, decl_uid=9799, cgraph_uid=640, symbol_order=661)

s273 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _10;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  unsigned int ivtmp_61;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s273 ");
  start_t_19 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_38 = PHI <0(7), i_23(10)>
  # ivtmp_61 = PHI <32000(7), ivtmp_58(10)>
  _1 = a[i_38];
  _2 = d[i_38];
  _3 = e[i_38];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_38] = _5;
  if (_5 < 0.0)
    goto <bb 4>; [41.00%]
  else
    goto <bb 5>; [59.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _6 = b[i_38];
  _7 = _4 + _6;
  b[i_38] = _7;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  _8 = c[i_38];
  _9 = _2 * _5;
  _10 = _8 + _9;
  c[i_38] = _10;
  i_23 = i_38 + 1;
  ivtmp_58 = ivtmp_61 - 1;
  if (ivtmp_58 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_25 = nl_37 + 1;
  ivtmp_56 = ivtmp_57 - 1;
  if (ivtmp_56 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_37 = PHI <0(2), nl_25(9)>
  # ivtmp_57 = PHI <10000(2), ivtmp_56(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_19;
  printf ("S273\t %.3f \t\t", clock_dif_28);
  check (123);
  return 0;
;;    succ:       EXIT

}



;; Function s274 (s274, funcdef_no=641, decl_uid=9812, cgraph_uid=641, symbol_order=662)

s274 ()
{
  int i;
  int D.17995;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_42;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;
  unsigned int ivtmp_47;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s274 ");
  start_t_16 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 11, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                11
  # i_33 = PHI <0(8), i_20(11)>
  # ivtmp_47 = PHI <32000(8), ivtmp_45(11)>
  _1 = c[i_33];
  _2 = e[i_33];
  _3 = d[i_33];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_33] = _5;
  if (_5 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _6 = b[i_33];
  _7 = _5 + _6;
  b[i_33] = _7;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       3
  a[i_33] = _4;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       4
;;                5
  i_20 = i_33 + 1;
  ivtmp_45 = ivtmp_47 - 1;
  if (ivtmp_45 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_42 = ivtmp_44 - 1;
  if (ivtmp_42 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                10
  # nl_32 = PHI <0(2), nl_22(10)>
  # ivtmp_44 = PHI <10000(2), ivtmp_42(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_16;
  printf ("S274\t %.3f \t\t", clock_dif_25);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s275 (s275, funcdef_no=642, decl_uid=9825, cgraph_uid=642, symbol_order=663)

s275 ()
{
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_12;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_47;
  unsigned int ivtmp_48;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s275 ");
  start_t_18 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                11
  # i_39 = PHI <0(7), i_21(11)>
  # ivtmp_47 = PHI <256(7), ivtmp_37(11)>
  _1 = aa[0][i_39];
  if (_1 > 0.0)
    goto <bb 9>; [34.74%]
  else
    goto <bb 5>; [65.26%]
;;    succ:       9
;;                5

;;   basic block 9, loop depth 2
;;    pred:       3
;;    succ:       4

;;   basic block 4, loop depth 3
;;    pred:       9
;;                12
  # j_40 = PHI <1(9), j_20(12)>
  # ivtmp_12 = PHI <255(9), ivtmp_48(12)>
  _2 = j_40 + -1;
  _3 = aa[_2][i_39];
  _4 = bb[j_40][i_39];
  _5 = cc[j_40][i_39];
  _6 = _4 * _5;
  _7 = _3 + _6;
  aa[j_40][i_39] = _7;
  j_20 = j_40 + 1;
  ivtmp_48 = ivtmp_12 - 1;
  if (ivtmp_48 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 5>; [1.01%]
;;    succ:       12
;;                5

;;   basic block 12, loop depth 3
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 2
;;    pred:       3
;;                4
  i_21 = i_39 + 1;
  ivtmp_37 = ivtmp_47 - 1;
  if (ivtmp_37 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       11
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_38 + 1;
  ivtmp_35 = ivtmp_36 - 1;
  if (ivtmp_35 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       10
;;                8

;;   basic block 10, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                10
  # nl_38 = PHI <0(2), nl_23(10)>
  # ivtmp_36 = PHI <390(2), ivtmp_35(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_18;
  printf ("S275\t %.3f \t\t", clock_dif_26);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s2275 (s2275, funcdef_no=643, decl_uid=9842, cgraph_uid=643, symbol_order=664)

Merging blocks 7 and 12
s2275 ()
{
  vector(4) float * vectp_a.2787;
  vector(4) float * vectp_a.2786;
  vector(4) float vect__10.2785;
  vector(4) float vect__9.2784;
  vector(4) float vect__8.2783;
  vector(4) float * vectp_d.2782;
  vector(4) float * vectp_d.2781;
  vector(4) float vect__7.2780;
  vector(4) float * vectp_c.2779;
  vector(4) float * vectp_c.2778;
  vector(4) float vect__6.2777;
  vector(4) float * vectp_b.2776;
  vector(4) float * vectp_b.2775;
  vector(4) float * vectp_aa.2774;
  vector(4) float * vectp_aa.2773;
  vector(4) float vect__5.2772;
  vector(4) float vect__4.2771;
  vector(4) float vect__3.2770;
  vector(4) float * vectp_cc.2769;
  vector(4) float * vectp_cc.2768;
  vector(4) float vect__2.2767;
  vector(4) float * vectp_bb.2766;
  vector(4) float * vectp_bb.2765;
  vector(4) float vect__1.2764;
  vector(4) float * vectp_aa.2763;
  vector(4) float * vectp_aa.2762;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _10;
  unsigned int ivtmp_68;
  unsigned int ivtmp_69;
  unsigned int ivtmp_70;
  unsigned int ivtmp_71;
  unsigned int ivtmp_73;
  unsigned int ivtmp_74;
  unsigned int ivtmp_75;
  unsigned int ivtmp_76;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s275 ");
  start_t_20 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # j_43 = PHI <0(5), j_22(11)>
  # ivtmp_76 = PHI <256(5), ivtmp_75(11)>
  # vectp_aa.2762_65 = PHI <vectp_aa.2762_67(5), vectp_aa.2762_64(11)>
  # vectp_bb.2765_60 = PHI <vectp_bb.2765_62(5), vectp_bb.2765_59(11)>
  # vectp_cc.2768_55 = PHI <vectp_cc.2768_57(5), vectp_cc.2768_54(11)>
  # vectp_aa.2773_48 = PHI <vectp_aa.2773_50(5), vectp_aa.2773_47(11)>
  vect__1.2764_63 = MEM[(float *)vectp_aa.2762_65];
  _1 = aa[j_43][i_42];
  vect__2.2767_58 = MEM[(float *)vectp_bb.2765_60];
  _2 = bb[j_43][i_42];
  vect__3.2770_53 = MEM[(float *)vectp_cc.2768_55];
  _3 = cc[j_43][i_42];
  vect__4.2771_52 = vect__2.2767_58 * vect__3.2770_53;
  _4 = _2 * _3;
  vect__5.2772_51 = vect__1.2764_63 + vect__4.2771_52;
  _5 = _1 + _4;
  MEM[(float *)vectp_aa.2773_48] = vect__5.2772_51;
  j_22 = j_43 + 1;
  ivtmp_75 = ivtmp_76 - 1;
  vectp_aa.2762_64 = vectp_aa.2762_65 + 1024;
  vectp_bb.2765_59 = vectp_bb.2765_60 + 1024;
  vectp_cc.2768_54 = vectp_cc.2768_55 + 1024;
  vectp_aa.2773_47 = vectp_aa.2773_48 + 1024;
  if (ivtmp_75 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  vect__6.2777_37 = MEM[(float *)vectp_b.2775_39];
  _6 = b[i_42];
  vect__7.2780_34 = MEM[(float *)vectp_c.2778_36];
  _7 = c[i_42];
  vect__8.2783_16 = MEM[(float *)vectp_d.2781_33];
  _8 = d[i_42];
  vect__9.2784_15 = vect__7.2780_34 * vect__8.2783_16;
  _9 = _7 * _8;
  vect__10.2785_14 = vect__6.2777_37 + vect__9.2784_15;
  _10 = _6 + _9;
  MEM[(float *)vectp_a.2786_13] = vect__10.2785_14;
  i_24 = i_42 + 1;
  ivtmp_70 = ivtmp_71 - 1;
  vectp_aa.2762_66 = vectp_aa.2762_67 + 16;
  vectp_bb.2765_61 = vectp_bb.2765_62 + 16;
  vectp_cc.2768_56 = vectp_cc.2768_57 + 16;
  vectp_aa.2773_49 = vectp_aa.2773_50 + 16;
  vectp_b.2775_38 = vectp_b.2775_39 + 16;
  vectp_c.2778_35 = vectp_c.2778_36 + 16;
  vectp_d.2781_32 = vectp_d.2781_33 + 16;
  vectp_a.2786_12 = vectp_a.2786_13 + 16;
  ivtmp_73 = ivtmp_74 + 1;
  if (ivtmp_73 < 64)
    goto <bb 10>; [96.00%]
  else
    goto <bb 6>; [4.00%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       10
;;                7
  # i_42 = PHI <i_24(10), 0(7)>
  # ivtmp_71 = PHI <ivtmp_70(10), 256(7)>
  # vectp_aa.2762_67 = PHI <vectp_aa.2762_66(10), &aa(7)>
  # vectp_bb.2765_62 = PHI <vectp_bb.2765_61(10), &bb(7)>
  # vectp_cc.2768_57 = PHI <vectp_cc.2768_56(10), &cc(7)>
  # vectp_aa.2773_50 = PHI <vectp_aa.2773_49(10), &aa(7)>
  # vectp_b.2775_39 = PHI <vectp_b.2775_38(10), &b(7)>
  # vectp_c.2778_36 = PHI <vectp_c.2778_35(10), &c(7)>
  # vectp_d.2781_33 = PHI <vectp_d.2781_32(10), &d(7)>
  # vectp_a.2786_13 = PHI <vectp_a.2786_12(10), &a(7)>
  # ivtmp_74 = PHI <ivtmp_73(10), 0(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_26 = nl_41 + 1;
  ivtmp_68 = ivtmp_69 - 1;
  if (ivtmp_68 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_41 = PHI <0(2), nl_26(9)>
  # ivtmp_69 = PHI <3900(2), ivtmp_68(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_28 = mysecond ();
  clock_dif_29 = end_t_28 - start_t_20;
  printf ("S2275\t %.3f \t\t", clock_dif_29);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s276 (s276, funcdef_no=644, decl_uid=9859, cgraph_uid=644, symbol_order=665)

Removing basic block 10
Removing basic block 11
Removing basic block 7
Removing basic block 3
Removing basic block 8
Removing basic block 21
Removing basic block 27
Removing basic block 32
Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 23
Removing basic block 30
Merging blocks 2 and 22
Merging blocks 12 and 29
Merging blocks 31 and 18
Merging blocks 12 and 33
s276 ()
{
  vector(4) float * vectp_a.2844;
  vector(4) float * vectp_a.2843;
  vector(4) float vect_cstore_47.2842;
  vector(4) float vect__43.2841;
  vector(4) float vect__32.2840;
  vector(4) float vect__33.2839;
  vector(4) float * vectp_d.2838;
  vector(4) float * vectp_d.2837;
  vector(4) float vect__46.2836;
  vector(4) float vect__45.2835;
  vector(4) float vect__44.2834;
  vector(4) float * vectp_c.2833;
  vector(4) float * vectp_c.2832;
  vector(4) float vect_pretmp_34.2831;
  vector(4) float * vectp_b.2830;
  vector(4) float * vectp_b.2829;
  vector(4) float vect_pretmp_31.2828;
  vector(4) float * vectp_a.2827;
  vector(4) float * vectp_a.2826;
  vector(4) int vect_vec_iv_.2825;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  unsigned int ivtmp_2;
  int _3;
  unsigned int ivtmp_14;
  _Bool _21;
  float pretmp_31;
  float _32;
  float _33;
  float pretmp_34;
  float _43;
  float _44;
  float _45;
  float _46;
  float cstore_47;
  unsigned int ivtmp_49;
  unsigned int ivtmp_52;
  _Bool _54;
  vector(4) int vect_cst__73;
  vector(4) int vect_cst__92;
  unsigned int ivtmp_97;
  unsigned int ivtmp_98;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s276 ");
  start_t_20 = mysecond ();
  _21 = 0;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       19
;;                2
  # nl_13 = PHI <nl_51(19), 0(2)>
  # ivtmp_14 = PHI <ivtmp_52(19), 40000(2)>
  _54 = 1;
  vect_cst__73 = { 4, 4, 4, 4 };
  vect_cst__92 = { 15998, 15998, 15998, 15998 };
;;    succ:       13

;;   basic block 13, loop depth 2
;;    pred:       17
;;                12
  # i_7 = PHI <_3(17), 0(12)>
  # ivtmp_2 = PHI <ivtmp_49(17), 32000(12)>
  # vect_vec_iv_.2825_74 = PHI <vect_vec_iv_.2825_75(17), { 0, 1, 2, 3 }(12)>
  # vectp_a.2826_76 = PHI <vectp_a.2826_77(17), &a(12)>
  # vectp_b.2829_79 = PHI <vectp_b.2829_80(17), &b(12)>
  # vectp_c.2832_82 = PHI <vectp_c.2832_83(17), &c(12)>
  # vectp_d.2837_87 = PHI <vectp_d.2837_88(17), &d(12)>
  # vectp_a.2843_94 = PHI <vectp_a.2843_95(17), &a(12)>
  # ivtmp_97 = PHI <ivtmp_98(17), 0(12)>
  vect_vec_iv_.2825_75 = vect_vec_iv_.2825_74 + vect_cst__73;
  _3 = i_7 + 1;
  vect_pretmp_31.2828_78 = MEM[(float *)vectp_a.2826_76];
  pretmp_31 = a[i_7];
  vect_pretmp_34.2831_81 = MEM[(float *)vectp_b.2829_79];
  pretmp_34 = b[i_7];
  vect__44.2834_84 = MEM[(float *)vectp_c.2832_82];
  _44 = c[i_7];
  vect__45.2835_85 = vect__44.2834_84 * vect_pretmp_34.2831_81;
  _45 = _44 * pretmp_34;
  vect__46.2836_86 = vect__45.2835_85 + vect_pretmp_31.2828_78;
  _46 = _45 + pretmp_31;
  vect__33.2839_89 = MEM[(float *)vectp_d.2837_87];
  _33 = d[i_7];
  vect__32.2840_90 = vect__33.2839_89 * vect_pretmp_34.2831_81;
  _32 = _33 * pretmp_34;
  vect__43.2841_91 = vect__32.2840_90 + vect_pretmp_31.2828_78;
  _43 = _32 + pretmp_31;
  vect_cstore_47.2842_93 = VEC_COND_EXPR <vect_vec_iv_.2825_74 > vect_cst__92, vect__43.2841_91, vect__46.2836_86>;
  cstore_47 = i_7 > 15998 ? _43 : _46;
  MEM[(float *)vectp_a.2843_94] = vect_cstore_47.2842_93;
  ivtmp_49 = ivtmp_2 - 1;
  vectp_a.2826_77 = vectp_a.2826_76 + 16;
  vectp_b.2829_80 = vectp_b.2829_79 + 16;
  vectp_c.2832_83 = vectp_c.2832_82 + 16;
  vectp_d.2837_88 = vectp_d.2837_87 + 16;
  vectp_a.2843_95 = vectp_a.2843_94 + 16;
  ivtmp_98 = ivtmp_97 + 1;
  if (ivtmp_98 < 8000)
    goto <bb 17>; [96.00%]
  else
    goto <bb 31>; [4.00%]
;;    succ:       17
;;                31

;;   basic block 17, loop depth 2
;;    pred:       13
  goto <bb 13>; [100.00%]
;;    succ:       13

;;   basic block 31, loop depth 1
;;    pred:       13
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_51 = nl_13 + 1;
  ivtmp_52 = ivtmp_14 - 1;
  if (ivtmp_52 != 0)
    goto <bb 19>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       19
;;                9

;;   basic block 19, loop depth 1
;;    pred:       31
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 9, loop depth 0
;;    pred:       31
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_20;
  printf ("S276\t %.3f \t\t", clock_dif_28);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s277 (s277, funcdef_no=645, decl_uid=9873, cgraph_uid=645, symbol_order=666)

s277 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _5;
  float _6;
  float _9;
  float _10;
  float _12;
  unsigned int ivtmp_18;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_38;
  float pretmp_43;
  float pretmp_44;
  int _45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s277 ");
  start_t_22 = mysecond ();
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 12, loop depth 2
;;    pred:       7
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       9
;;                12
  # i_40 = PHI <0(9), _45(12)>
  # ivtmp_38 = PHI <31999(9), ivtmp_37(12)>
  _1 = a[i_40];
  _45 = i_40 + 1;
  if (_1 >= 0.0)
    goto <bb 7>; [42.57%]
  else
    goto <bb 4>; [57.43%]
;;    succ:       7
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  _2 = b[i_40];
  pretmp_43 = c[i_40];
  pretmp_44 = d[i_40];
  if (_2 >= 0.0)
    goto <bb 6>; [42.57%]
  else
    goto <bb 5>; [57.43%]
;;    succ:       6
;;                5

;;   basic block 5, loop depth 2
;;    pred:       4
  _5 = pretmp_43 * pretmp_44;
  _6 = _1 + _5;
  a[i_40] = _6;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                4
L30:
  _9 = e[i_40];
  _10 = _9 * pretmp_44;
  _12 = _10 + pretmp_43;
  b[_45] = _12;
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       6
;;                3
L20:
  ivtmp_37 = ivtmp_38 - 1;
  if (ivtmp_37 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 8, loop depth 1
;;    pred:       7
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_27 = nl_39 + 1;
  ivtmp_18 = ivtmp_36 - 1;
  if (ivtmp_18 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       8
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       2
;;                11
  # nl_39 = PHI <0(2), nl_27(11)>
  # ivtmp_36 = PHI <10000(2), ivtmp_18(11)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 0
;;    pred:       8
  end_t_29 = mysecond ();
  clock_dif_30 = end_t_29 - start_t_22;
  printf ("S277\t %.3f \t\t", clock_dif_30);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s278 (s278, funcdef_no=646, decl_uid=9888, cgraph_uid=646, symbol_order=667)

s278 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _6;
  float _11;
  float _15;
  float _16;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  float pretmp_58;
  float pretmp_59;
  float _60;
  float pretmp_61;
  float pretmp_62;
  float prephitmp_64;
  float prephitmp_66;
  unsigned int ivtmp_68;
  unsigned int ivtmp_69;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s278 ");
  start_t_25 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 11, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                11
  # i_44 = PHI <0(8), i_29(11)>
  # ivtmp_69 = PHI <32000(8), ivtmp_68(11)>
  _1 = a[i_44];
  pretmp_58 = d[i_44];
  pretmp_59 = e[i_44];
  _60 = pretmp_58 * pretmp_59;
  pretmp_61 = b[i_44];
  pretmp_62 = c[i_44];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _11 = _60 - pretmp_62;
  c[i_44] = _11;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       3
  _6 = _60 - pretmp_61;
  b[i_44] = _6;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                4
  # prephitmp_64 = PHI <_6(5), pretmp_61(4)>
  # prephitmp_66 = PHI <pretmp_62(5), _11(4)>
L30:
  _15 = pretmp_58 * prephitmp_66;
  _16 = _15 + prephitmp_64;
  a[i_44] = _16;
  i_29 = i_44 + 1;
  ivtmp_68 = ivtmp_69 - 1;
  if (ivtmp_68 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_31 = nl_43 + 1;
  ivtmp_56 = ivtmp_57 - 1;
  if (ivtmp_56 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                10
  # nl_43 = PHI <0(2), nl_31(10)>
  # ivtmp_57 = PHI <10000(2), ivtmp_56(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_33 = mysecond ();
  clock_dif_34 = end_t_33 - start_t_25;
  printf ("S278\t %.3f \t\t", clock_dif_34);
  check (123);
  return 0;
;;    succ:       EXIT

}



;; Function s279 (s279, funcdef_no=647, decl_uid=9903, cgraph_uid=647, symbol_order=668)

s279 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float powmult_3;
  float _5;
  float _7;
  float _8;
  float _9;
  float _10;
  float powmult_11;
  float _13;
  float _17;
  float _18;
  unsigned int ivtmp_59;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;
  float pretmp_63;
  float pretmp_64;
  float pretmp_65;
  float prephitmp_67;
  float prephitmp_69;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s279 ");
  start_t_27 = mysecond ();
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 12, loop depth 2
;;    pred:       7
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       9
;;                12
  # i_47 = PHI <0(9), i_32(12)>
  # ivtmp_62 = PHI <32000(9), ivtmp_61(12)>
  _1 = a[i_47];
  pretmp_63 = d[i_47];
  pretmp_64 = b[i_47];
  pretmp_65 = c[i_47];
  if (_1 > 0.0)
    goto <bb 4>; [42.57%]
  else
    goto <bb 5>; [57.43%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _10 = e[i_47];
  powmult_3 = _10 * _10;
  _13 = powmult_3 - pretmp_65;
  c[i_47] = _13;
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 5, loop depth 2
;;    pred:       3
  powmult_11 = pretmp_63 * pretmp_63;
  _5 = powmult_11 - pretmp_64;
  b[i_47] = _5;
  if (_1 >= _5)
    goto <bb 14>; [50.00%]
  else
    goto <bb 6>; [50.00%]
;;    succ:       14
;;                6

;;   basic block 14, loop depth 2
;;    pred:       5
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 6, loop depth 2
;;    pred:       5
  _7 = e[i_47];
  _8 = _7 * pretmp_63;
  _9 = _8 + pretmp_65;
  c[i_47] = _9;
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       4
;;                6
;;                14
  # prephitmp_67 = PHI <pretmp_64(4), _5(6), _5(14)>
  # prephitmp_69 = PHI <_13(4), _9(6), pretmp_65(14)>
L30:
  _17 = pretmp_63 * prephitmp_69;
  _18 = _17 + prephitmp_67;
  a[i_47] = _18;
  i_32 = i_47 + 1;
  ivtmp_61 = ivtmp_62 - 1;
  if (ivtmp_61 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 8, loop depth 1
;;    pred:       7
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_34 = nl_46 + 1;
  ivtmp_59 = ivtmp_60 - 1;
  if (ivtmp_59 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       8
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       2
;;                11
  # nl_46 = PHI <0(2), nl_34(11)>
  # ivtmp_60 = PHI <5000(2), ivtmp_59(11)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 0
;;    pred:       8
  end_t_36 = mysecond ();
  clock_dif_37 = end_t_36 - start_t_27;
  printf ("S279\t %.3f \t\t", clock_dif_37);
  check (123);
  return 0;
;;    succ:       EXIT

}



;; Function s1279 (s1279, funcdef_no=648, decl_uid=9918, cgraph_uid=648, symbol_order=669)

s1279 ()
{
  int i;
  int D.18220;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_9;
  unsigned int ivtmp_28;
  unsigned int ivtmp_29;
  unsigned int ivtmp_40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s279 ");
  start_t_16 = mysecond ();
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 11, loop depth 2
;;    pred:       6
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                11
  # i_31 = PHI <0(8), i_18(11)>
  # ivtmp_40 = PHI <32000(8), ivtmp_29(11)>
  _1 = a[i_31];
  if (_1 < 0.0)
    goto <bb 4>; [41.00%]
  else
    goto <bb 17>; [59.00%]
;;    succ:       4
;;                17

;;   basic block 17, loop depth 2
;;    pred:       3
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 4, loop depth 2
;;    pred:       3
  _2 = b[i_31];
  if (_1 < _2)
    goto <bb 5>; [50.00%]
  else
    goto <bb 16>; [50.00%]
;;    succ:       5
;;                16

;;   basic block 16, loop depth 2
;;    pred:       4
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       4
  _3 = c[i_31];
  _4 = d[i_31];
  _5 = e[i_31];
  _6 = _4 * _5;
  _7 = _3 + _6;
  c[i_31] = _7;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                16
;;                17
  i_18 = i_31 + 1;
  ivtmp_29 = ivtmp_40 - 1;
  if (ivtmp_29 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_30 + 1;
  ivtmp_9 = ivtmp_28 - 1;
  if (ivtmp_9 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       10
;;                9

;;   basic block 10, loop depth 1
;;    pred:       7
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                10
  # nl_30 = PHI <0(2), nl_20(10)>
  # ivtmp_28 = PHI <10000(2), ivtmp_9(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       7
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_16;
  printf ("S1279\t %.3f \t\t", clock_dif_23);
  check (123);
  return 0;
;;    succ:       EXIT

}



;; Function s2710 (s2710, funcdef_no=649, decl_uid=9932, cgraph_uid=649, symbol_order=670)

s2710 (float x)
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float powmult_7;
  float _8;
  unsigned int ivtmp_10;
  float _13;
  float powmult_14;
  float _15;
  float _16;
  float powmult_17;
  float _18;
  unsigned int ivtmp_19;
  unsigned int ivtmp_20;
  float _21;
  unsigned int ivtmp_31;
  float powmult_40;
  float _41;
  unsigned int ivtmp_42;
  float _43;
  float _44;
  float _45;
  float _50;
  unsigned int ivtmp_53;
  float _55;
  float _56;
  float _57;
  float _59;
  float powmult_60;
  float _61;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s2710");
  start_t_25 = mysecond ();
  goto <bb 10>; [100.00%]
;;    succ:       10

;;   basic block 13, loop depth 2
;;    pred:       8
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       13
;;                22
  # i_47 = PHI <i_32(13), 0(22)>
  # ivtmp_31 = PHI <ivtmp_42(13), 32000(22)>
  _1 = a[i_47];
  _2 = b[i_47];
  if (_1 > _2)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _3 = d[i_47];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_47] = _5;
  _6 = c[i_47];
  powmult_14 = _3 * _3;
  _8 = _6 + powmult_14;
  c[i_47] = _8;
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 5, loop depth 2
;;    pred:       3
  _13 = e[i_47];
  powmult_17 = _13 * _13;
  _15 = _1 + powmult_17;
  b[i_47] = _15;
  _16 = d[i_47];
  powmult_7 = _16 * _16;
  _18 = _1 + powmult_7;
  c[i_47] = _18;
;;    succ:       8

;;   basic block 8, loop depth 2
;;    pred:       4
;;                5
  i_32 = i_47 + 1;
  ivtmp_42 = ivtmp_31 - 1;
  if (ivtmp_42 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       13
;;                9

;;   basic block 9, loop depth 1
;;    pred:       19
;;                8
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_34 = nl_46 + 1;
  ivtmp_53 = ivtmp_10 - 1;
  if (ivtmp_53 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 11>; [1.01%]
;;    succ:       12
;;                11

;;   basic block 12, loop depth 1
;;    pred:       9
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       2
;;                12
  # nl_46 = PHI <0(2), nl_34(12)>
  # ivtmp_10 = PHI <5000(2), ivtmp_53(12)>
  if (x_29(D) > 0.0)
    goto <bb 22>; [59.00%]
  else
    goto <bb 23>; [41.00%]
;;    succ:       23
;;                22

;;   basic block 22, loop depth 1
;;    pred:       10
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 23, loop depth 1
;;    pred:       10
;;    succ:       14

;;   basic block 14, loop depth 2
;;    pred:       20
;;                23
  # i_52 = PHI <i_64(20), 0(23)>
  # ivtmp_19 = PHI <ivtmp_20(20), 32000(23)>
  _50 = a[i_52];
  _43 = b[i_52];
  if (_50 > _43)
    goto <bb 18>; [50.00%]
  else
    goto <bb 15>; [50.00%]
;;    succ:       18
;;                15

;;   basic block 15, loop depth 2
;;    pred:       14
  _41 = e[i_52];
  powmult_40 = _41 * _41;
  _21 = _50 + powmult_40;
  b[i_52] = _21;
  _45 = c[i_52];
  _44 = powmult_40 + _45;
  c[i_52] = _44;
  goto <bb 19>; [100.00%]
;;    succ:       19

;;   basic block 18, loop depth 2
;;    pred:       14
  _55 = d[i_52];
  _56 = _43 * _55;
  _57 = _50 + _56;
  a[i_52] = _57;
  _59 = c[i_52];
  powmult_60 = _55 * _55;
  _61 = _59 + powmult_60;
  c[i_52] = _61;
;;    succ:       19

;;   basic block 19, loop depth 2
;;    pred:       15
;;                18
  i_64 = i_52 + 1;
  ivtmp_20 = ivtmp_19 - 1;
  if (ivtmp_20 != 0)
    goto <bb 20>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       20
;;                9

;;   basic block 20, loop depth 2
;;    pred:       19
  goto <bb 14>; [100.00%]
;;    succ:       14

;;   basic block 11, loop depth 0
;;    pred:       9
  end_t_36 = mysecond ();
  clock_dif_37 = end_t_36 - start_t_25;
  printf ("S2710\t %.3f \t\t", clock_dif_37);
  check (123);
  return 0;
;;    succ:       EXIT

}



;; Function s2711 (s2711, funcdef_no=650, decl_uid=9945, cgraph_uid=650, symbol_order=671)

s2711 ()
{
  int i;
  int D.18275;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_7;
  unsigned int ivtmp_26;
  unsigned int ivtmp_27;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s2711");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_29 = PHI <0(7), i_16(10)>
  # ivtmp_38 = PHI <32000(7), ivtmp_27(10)>
  _1 = b[i_29];
  if (_1 != 0.0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _2 = a[i_29];
  _3 = c[i_29];
  _4 = _1 * _3;
  _5 = _2 + _4;
  a[i_29] = _5;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  i_16 = i_29 + 1;
  ivtmp_27 = ivtmp_38 - 1;
  if (ivtmp_27 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_7 = ivtmp_26 - 1;
  if (ivtmp_7 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_28 = PHI <0(2), nl_18(9)>
  # ivtmp_26 = PHI <40000(2), ivtmp_7(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S2711\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s2712 (s2712, funcdef_no=651, decl_uid=9958, cgraph_uid=651, symbol_order=672)

s2712 ()
{
  int i;
  int D.18296;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_7;
  unsigned int ivtmp_26;
  unsigned int ivtmp_27;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s2712");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_29 = PHI <0(7), i_16(10)>
  # ivtmp_38 = PHI <32000(7), ivtmp_27(10)>
  _1 = a[i_29];
  _2 = b[i_29];
  if (_1 > _2)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _3 = c[i_29];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_29] = _5;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  i_16 = i_29 + 1;
  ivtmp_27 = ivtmp_38 - 1;
  if (ivtmp_27 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_7 = ivtmp_26 - 1;
  if (ivtmp_7 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_28 = PHI <0(2), nl_18(9)>
  # ivtmp_26 = PHI <40000(2), ivtmp_7(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S2712\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s281 (s281, funcdef_no=652, decl_uid=9971, cgraph_uid=652, symbol_order=673)

s281 ()
{
  int i;
  int D.18317;
  int i;
  int nl;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s281 ");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_31 = PHI <0(5), i_18(8)>
  # ivtmp_45 = PHI <32000(5), ivtmp_44(8)>
  _1 = 31999 - i_31;
  _2 = a[_1];
  _3 = b[i_31];
  _4 = c[i_31];
  _5 = _3 * _4;
  x_15 = _2 + _5;
  _6 = x_15 - 1.0e+0;
  a[i_31] = _6;
  b[i_31] = x_15;
  i_18 = i_31 + 1;
  ivtmp_44 = ivtmp_45 - 1;
  if (ivtmp_44 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_30 + 1;
  ivtmp_42 = ivtmp_43 - 1;
  if (ivtmp_42 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_30 = PHI <0(2), nl_20(7)>
  # ivtmp_43 = PHI <10000(2), ivtmp_42(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_14;
  printf ("S281\t %.3f \t\t", clock_dif_23);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s1281 (s1281, funcdef_no=653, decl_uid=9985, cgraph_uid=653, symbol_order=674)

Merging blocks 5 and 9
s1281 ()
{
  vector(4) float * vectp_b.3031;
  vector(4) float * vectp_b.3030;
  vector(4) float * vectp_a.3029;
  vector(4) float * vectp_a.3028;
  vector(4) float vect__9.3027;
  vector(4) float vect_x_18.3026;
  vector(4) float vect__30.3025;
  vector(4) float vect__7.3024;
  vector(4) float * vectp_e.3023;
  vector(4) float * vectp_e.3022;
  vector(4) float vect__6.3021;
  vector(4) float vect__5.3020;
  vector(4) float * vectp_d.3019;
  vector(4) float * vectp_d.3018;
  vector(4) float vect__4.3017;
  vector(4) float * vectp_a.3016;
  vector(4) float * vectp_a.3015;
  vector(4) float vect__3.3014;
  vector(4) float vect__2.3013;
  vector(4) float * vectp_c.3012;
  vector(4) float * vectp_c.3011;
  vector(4) float vect__1.3010;
  vector(4) float * vectp_b.3009;
  vector(4) float * vectp_b.3008;
  int i;
  int D.18341;
  int i;
  int nl;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _9;
  unsigned int ivtmp_12;
  unsigned int ivtmp_13;
  float _30;
  vector(4) float vect_cst__39;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;
  unsigned int ivtmp_63;
  unsigned int ivtmp_64;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s281 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_34 = PHI <i_21(8), 0(5)>
  # ivtmp_64 = PHI <ivtmp_63(8), 32000(5)>
  # vectp_b.3008_60 = PHI <vectp_b.3008_59(8), &b(5)>
  # vectp_c.3011_57 = PHI <vectp_c.3011_56(8), &c(5)>
  # vectp_a.3015_53 = PHI <vectp_a.3015_52(8), &a(5)>
  # vectp_d.3018_50 = PHI <vectp_d.3018_48(8), &d(5)>
  # vectp_e.3022_45 = PHI <vectp_e.3022_43(8), &e(5)>
  # vectp_a.3028_37 = PHI <vectp_a.3028_36(8), &a(5)>
  # vectp_b.3030_31 = PHI <vectp_b.3030_29(8), &b(5)>
  # ivtmp_13 = PHI <ivtmp_12(8), 0(5)>
  vect__1.3010_58 = MEM[(float *)vectp_b.3008_60];
  _1 = b[i_34];
  vect__2.3013_55 = MEM[(float *)vectp_c.3011_57];
  _2 = c[i_34];
  vect__3.3014_54 = vect__1.3010_58 * vect__2.3013_55;
  _3 = _1 * _2;
  vect__4.3017_51 = MEM[(float *)vectp_a.3015_53];
  _4 = a[i_34];
  vect__5.3020_47 = MEM[(float *)vectp_d.3018_50];
  _5 = d[i_34];
  vect__6.3021_46 = vect__4.3017_51 * vect__5.3020_47;
  _6 = _4 * _5;
  vect__7.3024_42 = MEM[(float *)vectp_e.3022_45];
  _7 = e[i_34];
  vect__30.3025_41 = vect__3.3014_54 + vect__6.3021_46;
  _30 = _3 + _6;
  vect_x_18.3026_40 = vect__7.3024_42 + vect__30.3025_41;
  x_18 = _7 + _30;
  vect__9.3027_38 = vect_x_18.3026_40 - vect_cst__39;
  _9 = x_18 - 1.0e+0;
  MEM[(float *)vectp_a.3028_37] = vect__9.3027_38;
  MEM[(float *)vectp_b.3030_31] = vect_x_18.3026_40;
  i_21 = i_34 + 1;
  ivtmp_63 = ivtmp_64 - 1;
  vectp_b.3008_59 = vectp_b.3008_60 + 16;
  vectp_c.3011_56 = vectp_c.3011_57 + 16;
  vectp_a.3015_52 = vectp_a.3015_53 + 16;
  vectp_d.3018_48 = vectp_d.3018_50 + 16;
  vectp_e.3022_43 = vectp_e.3022_45 + 16;
  vectp_a.3028_36 = vectp_a.3028_37 + 16;
  vectp_b.3030_29 = vectp_b.3030_31 + 16;
  ivtmp_12 = ivtmp_13 + 1;
  if (ivtmp_12 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_33 + 1;
  ivtmp_61 = ivtmp_62 - 1;
  if (ivtmp_61 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_23(7)>
  # ivtmp_62 = PHI <40000(2), ivtmp_61(7)>
  vect_cst__39 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_17;
  printf ("S1281\t %.3f \t\t", clock_dif_26);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s291 (s291, funcdef_no=654, decl_uid=9999, cgraph_uid=654, symbol_order=675)

s291 ()
{
  int i;
  int D.18390;
  int i;
  int nl;
  int im1;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _3;
  float _4;
  unsigned int ivtmp_28;
  float pretmp_31;
  float prephitmp_32;
  unsigned int ivtmp_34;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s291 ");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_29 = PHI <0(5), i_15(8)>
  # prephitmp_32 = PHI <pretmp_31(5), _1(8)>
  # ivtmp_28 = PHI <32000(5), ivtmp_37(8)>
  _1 = b[i_29];
  _3 = _1 + prephitmp_32;
  _4 = _3 * 5.0e-1;
  a[i_29] = _4;
  i_15 = i_29 + 1;
  ivtmp_37 = ivtmp_28 - 1;
  if (ivtmp_37 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_38 + 1;
  ivtmp_34 = ivtmp_36 - 1;
  if (ivtmp_34 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_38 = PHI <0(2), nl_17(7)>
  # ivtmp_36 = PHI <20000(2), ivtmp_34(7)>
  pretmp_31 = b[31999];
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_13;
  printf ("S291\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s292 (s292, funcdef_no=655, decl_uid=10013, cgraph_uid=655, symbol_order=676)

s292 ()
{
  int i;
  int D.18410;
  int i;
  int nl;
  int im2;
  int im1;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _3;
  float _5;
  float _6;
  float prephitmp_14;
  unsigned int ivtmp_32;
  unsigned int ivtmp_41;
  float pretmp_45;
  float pretmp_47;
  float prephitmp_48;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s292 ");
  start_t_16 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_42 = PHI <0(5), i_18(8)>
  # prephitmp_14 = PHI <pretmp_45(5), _1(8)>
  # prephitmp_48 = PHI <pretmp_47(5), prephitmp_14(8)>
  # ivtmp_32 = PHI <32000(5), ivtmp_41(8)>
  _1 = b[i_42];
  _3 = _1 + prephitmp_14;
  _5 = _3 + prephitmp_48;
  _6 = _5 * 3.33000004291534423828125e-1;
  a[i_42] = _6;
  i_18 = i_42 + 1;
  ivtmp_41 = ivtmp_32 - 1;
  if (ivtmp_41 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_33 + 1;
  ivtmp_51 = ivtmp_52 - 1;
  if (ivtmp_51 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_20(7)>
  # ivtmp_52 = PHI <10000(2), ivtmp_51(7)>
  pretmp_45 = b[31999];
  pretmp_47 = b[31998];
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_16;
  printf ("S292\t %.3f \t\t", clock_dif_23);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s293 (s293, funcdef_no=656, decl_uid=10028, cgraph_uid=656, symbol_order=677)

s293 ()
{
  int i;
  int D.18430;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_20;
  unsigned int ivtmp_22;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s293 ");
  start_t_9 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_24 = PHI <0(5), i_11(8)>
  # ivtmp_20 = PHI <32000(5), ivtmp_2(8)>
  _1 = a[0];
  a[i_24] = _1;
  i_11 = i_24 + 1;
  ivtmp_2 = ivtmp_20 - 1;
  if (ivtmp_2 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_13 = nl_23 + 1;
  ivtmp_22 = ivtmp_3 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_23 = PHI <0(2), nl_13(7)>
  # ivtmp_3 = PHI <40000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_15 = mysecond ();
  clock_dif_16 = end_t_15 - start_t_9;
  printf ("S293\t %.3f \t\t", clock_dif_16);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s2101 (s2101, funcdef_no=657, decl_uid=10041, cgraph_uid=657, symbol_order=678)

s2101 ()
{
  int i;
  int D.18448;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s2101");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_28 = PHI <0(5), i_15(8)>
  # ivtmp_42 = PHI <256(5), ivtmp_40(8)>
  _1 = aa[i_28][i_28];
  _2 = bb[i_28][i_28];
  _3 = cc[i_28][i_28];
  _4 = _2 * _3;
  _5 = _1 + _4;
  aa[i_28][i_28] = _5;
  i_15 = i_28 + 1;
  ivtmp_40 = ivtmp_42 - 1;
  if (ivtmp_40 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_37 = ivtmp_39 - 1;
  if (ivtmp_37 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_39 = PHI <100000(2), ivtmp_37(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_13;
  printf ("S2101\t %.3f \t\t", clock_dif_20);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s2102 (s2102, funcdef_no=658, decl_uid=10054, cgraph_uid=658, symbol_order=679)

s2102 ()
{
  int i;
  int D.18469;
  int j;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  unsigned int ivtmp_1;
  unsigned int ivtmp_2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_24;
  unsigned int ivtmp_27;
  unsigned int ivtmp_36;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s2102");
  start_t_10 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 11, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                11
  # j_38 = PHI <0(5), j_12(11)>
  # ivtmp_36 = PHI <256(5), ivtmp_24(11)>
  aa[j_38][i_29] = 0.0;
  j_12 = j_38 + 1;
  ivtmp_24 = ivtmp_36 - 1;
  if (ivtmp_24 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  aa[i_29][i_29] = 1.0e+0;
  i_14 = i_29 + 1;
  ivtmp_2 = ivtmp_1 - 1;
  if (ivtmp_2 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                10
  # i_29 = PHI <0(7), i_14(10)>
  # ivtmp_1 = PHI <256(7), ivtmp_2(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_28 + 1;
  ivtmp_27 = ivtmp_3 - 1;
  if (ivtmp_27 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_28 = PHI <0(2), nl_16(9)>
  # ivtmp_3 = PHI <3900(2), ivtmp_27(9)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_10;
  printf ("S2102\t %.3f \t\t", clock_dif_19);
  check (11);
  return 0;
;;    succ:       EXIT

}



;; Function s2111 (s2111, funcdef_no=659, decl_uid=10071, cgraph_uid=659, symbol_order=680)

Merging blocks 11 and 21
s2111 ()
{
  float vect__8.3135;
  float stmp__8.3134;
  vector(4) float vect__8.3133;
  vector(4) float vect__6.3132;
  vector(4) float * vectp_aa.3131;
  vector(4) float * vectp_aa.3130;
  vector(4) float vect__8.3129;
  float temp_lsm.3128;
  int j;
  int i;
  int i;
  int j;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _4;
  float _5;
  float _6;
  float _8;
  sizetype _18;
  sizetype _19;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_46;
  unsigned int ivtmp_48;
  unsigned int ivtmp_50;
  unsigned int ivtmp_52;
  unsigned int ivtmp_53;
  unsigned int ivtmp_54;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;
  int _69;
  float _73;
  float _74;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s2111");
  start_t_24 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 19, loop depth 3
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       5
;;                19
  # i_57 = PHI <1(5), i_26(19)>
  # ivtmp_48 = PHI <255(5), ivtmp_46(19)>
  _1 = i_57 + -1;
  _2 = aa[j_56][_1];
  _4 = aa[_69][i_57];
  _5 = _2 + _4;
  aa[j_56][i_57] = _5;
  i_26 = i_57 + 1;
  ivtmp_46 = ivtmp_48 - 1;
  if (ivtmp_46 != 0)
    goto <bb 19>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       19
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  j_27 = j_56 + 1;
  ivtmp_43 = ivtmp_44 - 1;
  if (ivtmp_43 != 0)
    goto <bb 18>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       18
;;                6

;;   basic block 18, loop depth 2
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       7
;;                18
  # j_56 = PHI <1(7), j_27(18)>
  # ivtmp_44 = PHI <255(7), ivtmp_43(18)>
  _69 = j_56 + -1;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_29 = nl_55 + 1;
  ivtmp_41 = ivtmp_42 - 1;
  if (ivtmp_41 != 0)
    goto <bb 17>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       17
;;                8

;;   basic block 17, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                17
  # nl_55 = PHI <0(2), nl_29(17)>
  # ivtmp_42 = PHI <3900(2), ivtmp_41(17)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_31 = mysecond ();
  clock_dif_32 = end_t_31 - start_t_24;
  printf ("S2111\t %.3f \t\t", clock_dif_32);
  temp = 0.0;
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 16, loop depth 2
;;    pred:       9
;;    succ:       9

;;   basic block 9, loop depth 2
;;    pred:       16
;;                11
  # j_59 = PHI <j_36(16), 0(11)>
  # temp_lsm.3128_9 = PHI <_8(16), temp_lsm.3128_45(11)>
  # ivtmp_54 = PHI <ivtmp_53(16), 256(11)>
  # vect__8.3129_40 = PHI <vect__8.3133_12(16), { 0.0, 0.0, 0.0, 0.0 }(11)>
  # vectp_aa.3130_17 = PHI <vectp_aa.3130_16(16), vectp_aa.3131_35(11)>
  # ivtmp_68 = PHI <ivtmp_67(16), 0(11)>
  vect__6.3132_15 = MEM[(float *)vectp_aa.3130_17];
  _6 = aa[i_58][j_59];
  vect__8.3133_12 = vect__6.3132_15 + vect__8.3129_40;
  _8 = _6 + temp_lsm.3128_9;
  j_36 = j_59 + 1;
  ivtmp_53 = ivtmp_54 - 1;
  vectp_aa.3130_16 = vectp_aa.3130_17 + 16;
  ivtmp_67 = ivtmp_68 + 1;
  if (ivtmp_67 < 64)
    goto <bb 16>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       16
;;                10

;;   basic block 10, loop depth 1
;;    pred:       9
  # _74 = PHI <_8(9)>
  # vect__8.3133_72 = PHI <vect__8.3133_12(9)>
  stmp__8.3134_71 = REDUC_PLUS (vect__8.3133_72);
  vect__8.3135_70 = stmp__8.3134_71 + temp_lsm.3128_45;
  i_37 = i_58 + 1;
  ivtmp_50 = ivtmp_52 - 1;
  if (ivtmp_50 != 0)
    goto <bb 15>; [98.99%]
  else
    goto <bb 12>; [1.01%]
;;    succ:       15
;;                12

;;   basic block 15, loop depth 1
;;    pred:       10
;;    succ:       11

;;   basic block 11, loop depth 1
;;    pred:       8
;;                15
  # i_58 = PHI <0(8), i_37(15)>
  # temp_lsm.3128_45 = PHI <0.0(8), vect__8.3135_70(15)>
  # ivtmp_52 = PHI <256(8), ivtmp_50(15)>
  _19 = (sizetype) i_58;
  _18 = _19 * 1024;
  vectp_aa.3131_35 = &aa + _18;
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 12, loop depth 0
;;    pred:       10
  # _73 = PHI <vect__8.3135_70(10)>
  if (_73 == 0.0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 20>; [50.00%]
;;    succ:       13
;;                20

;;   basic block 20, loop depth 0
;;    pred:       12
  temp = _73;
  goto <bb 14>; [100.00%]
;;    succ:       14

;;   basic block 13, loop depth 0
;;    pred:       12
  temp = 3.0e+0;
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       13
;;                20
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s311 (s311, funcdef_no=660, decl_uid=10096, cgraph_uid=660, symbol_order=681)

Merging blocks 5 and 9
s311 ()
{
  float vect_sum_11.3189;
  float stmp_sum_11.3188;
  vector(4) float vect_sum_11.3187;
  vector(4) float vect__1.3186;
  vector(4) float * vectp_a.3185;
  vector(4) float * vectp_a.3184;
  vector(4) float vect_sum_11.3183;
  int i;
  int D.18555;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_3;
  unsigned int ivtmp_4;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_29;
  unsigned int ivtmp_37;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s311 ");
  start_t_9 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # sum_25 = PHI <sum_11(8), 0.0(5)>
  # i_26 = PHI <i_12(8), 0(5)>
  # ivtmp_23 = PHI <ivtmp_4(8), 32000(5)>
  # vect_sum_11.3183_2 = PHI <vect_sum_11.3187_32(8), { 0.0, 0.0, 0.0, 0.0 }(5)>
  # vectp_a.3184_34 = PHI <vectp_a.3184_24(8), &a(5)>
  # ivtmp_29 = PHI <ivtmp_37(8), 0(5)>
  vect__1.3186_5 = MEM[(float *)vectp_a.3184_34];
  _1 = a[i_26];
  vect_sum_11.3187_32 = vect__1.3186_5 + vect_sum_11.3183_2;
  sum_11 = _1 + sum_25;
  i_12 = i_26 + 1;
  ivtmp_4 = ivtmp_23 - 1;
  vectp_a.3184_24 = vectp_a.3184_34 + 16;
  ivtmp_37 = ivtmp_29 + 1;
  if (ivtmp_37 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # sum_33 = PHI <sum_11(3)>
  # vect_sum_11.3187_21 = PHI <vect_sum_11.3187_32(3)>
  stmp_sum_11.3188_36 = REDUC_PLUS (vect_sum_11.3187_21);
  vect_sum_11.3189_28 = stmp_sum_11.3188_36 + 0.0;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, vect_sum_11.3189_28);
  nl_14 = nl_35 + 1;
  ivtmp_3 = ivtmp_22 - 1;
  if (ivtmp_3 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_35 = PHI <0(2), nl_14(7)>
  # ivtmp_22 = PHI <100000(2), ivtmp_3(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_16 = mysecond ();
  clock_dif_17 = end_t_16 - start_t_9;
  printf ("S311\t %.3f \t\t", clock_dif_17);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function test (test, funcdef_no=661, decl_uid=10111, cgraph_uid=661, symbol_order=682)

Merging blocks 2 and 6
test (float * A)
{
  float vect_s_10.3207;
  float stmp_s_10.3206;
  vector(4) float vect_s_10.3205;
  vector(4) float vect__4.3204;
  vector(4) float * vectp_A.3203;
  vector(4) float * vectp_A.3202;
  vector(4) float vect_s_10.3201;
  int i;
  float s;
  long unsigned int _1;
  long unsigned int _2;
  float * _3;
  float _4;
  unsigned int ivtmp_18;
  unsigned int ivtmp_20;
  unsigned int ivtmp_21;
  unsigned int ivtmp_23;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       5
;;                2
  # s_15 = PHI <s_10(5), 0.0(2)>
  # i_16 = PHI <i_11(5), 0(2)>
  # ivtmp_21 = PHI <ivtmp_20(5), 4(2)>
  # vect_s_10.3201_14 = PHI <vect_s_10.3205_5(5), { 0.0, 0.0, 0.0, 0.0 }(2)>
  # vectp_A.3202_13 = PHI <vectp_A.3202_7(5), A_8(D)(2)>
  # ivtmp_18 = PHI <ivtmp_23(5), 0(2)>
  _1 = (long unsigned int) i_16;
  _2 = _1 * 4;
  _3 = A_8(D) + _2;
  vect__4.3204_6 = MEM[(float *)vectp_A.3202_13];
  _4 = *_3;
  vect_s_10.3205_5 = vect__4.3204_6 + vect_s_10.3201_14;
  s_10 = _4 + s_15;
  i_11 = i_16 + 1;
  ivtmp_20 = ivtmp_21 - 1;
  vectp_A.3202_7 = vectp_A.3202_13 + 16;
  ivtmp_23 = ivtmp_18 + 1;
  if (ivtmp_23 < 1)
    goto <bb 5>; [0.00%]
  else
    goto <bb 4>; [100.00%]
;;    succ:       5
;;                4

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  # s_22 = PHI <s_10(3)>
  # vect_s_10.3205_19 = PHI <vect_s_10.3205_5(3)>
  stmp_s_10.3206_12 = REDUC_PLUS (vect_s_10.3205_19);
  vect_s_10.3207_17 = stmp_s_10.3206_12 + 0.0;
  return vect_s_10.3207_17;
;;    succ:       EXIT

}



;; Function s31111 (s31111, funcdef_no=662, decl_uid=10118, cgraph_uid=662, symbol_order=683)

s31111 ()
{
  float s;
  int i;
  float s;
  int i;
  float s;
  int i;
  float s;
  int i;
  float s;
  int i;
  float s;
  int i;
  float s;
  int i;
  float s;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _8;
  float _34;
  float _55;
  float _60;
  float _61;
  float _64;
  float _65;
  float _98;
  float _106;
  float _114;
  float _122;
  float _130;
  float _138;
  float _142;
  float _143;
  float _146;
  float _148;
  float _149;
  float _150;
  float _154;
  float _162;
  float _165;
  float _170;
  float _173;
  float _178;
  float _186;
  float _194;
  float _202;
  float _205;
  float _208;
  float _210;
  float _212;
  float _218;
  float _223;
  float _224;
  float _226;
  float _230;
  float _231;
  float _234;
  float _242;
  float _250;
  float _252;
  float _254;
  float _256;
  float _258;
  float _260;
  float _266;
  float _274;
  float _282;
  float _287;
  float _288;
  float _290;
  float _294;
  float _295;
  float _298;
  float _300;
  float _302;
  unsigned int ivtmp_304;
  float _306;
  unsigned int ivtmp_308;
  float _314;
  float _322;
  float _330;
  float _338;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s311 ");
  start_t_6 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
  # nl_219 = PHI <0(2), nl_27(5)>
  # ivtmp_308 = PHI <20000000(2), ivtmp_304(5)>
  _314 = MEM[(float *)&a];
  _322 = MEM[(float *)&a + 4B];
  _288 = _314 + _322;
  _330 = MEM[(float *)&a + 8B];
  _338 = MEM[(float *)&a + 12B];
  _287 = _330 + _338;
  _302 = _287 + _288;
  _282 = MEM[(float *)&a + 16B];
  _290 = MEM[(float *)&a + 20B];
  _295 = _282 + _290;
  _298 = MEM[(float *)&a + 24B];
  _306 = MEM[(float *)&a + 28B];
  _294 = _298 + _306;
  _300 = _294 + _295;
  _260 = _300 + _302;
  _250 = MEM[(float *)&a + 32B];
  _258 = MEM[(float *)&a + 36B];
  _254 = _250 + _258;
  _266 = MEM[(float *)&a + 40B];
  _274 = MEM[(float *)&a + 44B];
  _252 = _266 + _274;
  _256 = _252 + _254;
  _231 = _256 + _260;
  _218 = MEM[(float *)&a + 48B];
  _226 = MEM[(float *)&a + 52B];
  _224 = _218 + _226;
  _234 = MEM[(float *)&a + 56B];
  _242 = MEM[(float *)&a + 60B];
  _223 = _234 + _242;
  _230 = _223 + _224;
  _150 = _230 + _231;
  _186 = MEM[(float *)&a + 64B];
  _194 = MEM[(float *)&a + 68B];
  _212 = _186 + _194;
  _202 = MEM[(float *)&a + 72B];
  _210 = MEM[(float *)&a + 76B];
  _208 = _202 + _210;
  _149 = _208 + _212;
  _34 = _149 + _150;
  _154 = MEM[(float *)&a + 80B];
  _162 = MEM[(float *)&a + 84B];
  _143 = _154 + _162;
  _170 = MEM[(float *)&a + 88B];
  _178 = MEM[(float *)&a + 92B];
  _142 = _170 + _178;
  _148 = _142 + _143;
  _60 = _34 + _148;
  _122 = MEM[(float *)&a + 96B];
  _130 = MEM[(float *)&a + 100B];
  _64 = _122 + _130;
  _138 = MEM[(float *)&a + 104B];
  _146 = MEM[(float *)&a + 108B];
  _65 = _138 + _146;
  _61 = _64 + _65;
  _173 = _60 + _61;
  _8 = MEM[(float *)&a + 112B];
  _98 = MEM[(float *)&a + 116B];
  _55 = _8 + _98;
  _106 = MEM[(float *)&a + 120B];
  _114 = MEM[(float *)&a + 124B];
  _205 = _106 + _114;
  _165 = _55 + _205;
  sum_25 = _165 + _173;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, sum_25);
  nl_27 = nl_219 + 1;
  ivtmp_304 = ivtmp_308 - 1;
  if (ivtmp_304 != 0)
    goto <bb 5>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       5
;;                4

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  end_t_29 = mysecond ();
  clock_dif_30 = end_t_29 - start_t_6;
  printf ("S31111\t %.3f \t\t", clock_dif_30);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s312 (s312, funcdef_no=663, decl_uid=10128, cgraph_uid=663, symbol_order=684)

Merging blocks 5 and 9
s312 ()
{
  float vect_prod_13.3219;
  float stmp_prod_13.3218;
  vector(4) float vect_prod_13.3217;
  vector(4) float vect__1.3216;
  vector(4) float * vectp_a.3215;
  vector(4) float * vectp_a.3214;
  vector(4) float vect_prod_13.3213;
  int i;
  int D.18596;
  int i;
  int nl;
  float prod;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_3;
  unsigned int ivtmp_4;
  unsigned int ivtmp_23;
  unsigned int ivtmp_27;
  unsigned int ivtmp_38;
  unsigned int ivtmp_43;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s312 ");
  start_t_10 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # prod_30 = PHI <prod_13(8), 1.0e+0(5)>
  # i_40 = PHI <i_14(8), 0(5)>
  # ivtmp_4 = PHI <ivtmp_38(8), 32000(5)>
  # vect_prod_13.3213_5 = PHI <vect_prod_13.3217_28(8), { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 }(5)>
  # vectp_a.3214_2 = PHI <vectp_a.3214_29(8), &a(5)>
  # ivtmp_43 = PHI <ivtmp_23(8), 0(5)>
  vect__1.3216_39 = MEM[(float *)vectp_a.3214_2];
  _1 = a[i_40];
  vect_prod_13.3217_28 = vect__1.3216_39 * vect_prod_13.3213_5;
  prod_13 = _1 * prod_30;
  i_14 = i_40 + 1;
  ivtmp_38 = ivtmp_4 - 1;
  vectp_a.3214_29 = vectp_a.3214_2 + 16;
  ivtmp_23 = ivtmp_43 + 1;
  if (ivtmp_23 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # prod_37 = PHI <prod_13(3)>
  # vect_prod_13.3217_6 = PHI <vect_prod_13.3217_28(3)>
  stmp_prod_13.3218_25 = BIT_FIELD_REF <vect_prod_13.3217_6, 32, 0>;
  stmp_prod_13.3218_26 = BIT_FIELD_REF <vect_prod_13.3217_6, 32, 32>;
  stmp_prod_13.3218_33 = stmp_prod_13.3218_26 * stmp_prod_13.3218_25;
  stmp_prod_13.3218_41 = BIT_FIELD_REF <vect_prod_13.3217_6, 32, 64>;
  stmp_prod_13.3218_34 = stmp_prod_13.3218_41 * stmp_prod_13.3218_33;
  stmp_prod_13.3218_35 = BIT_FIELD_REF <vect_prod_13.3217_6, 32, 96>;
  stmp_prod_13.3218_42 = stmp_prod_13.3218_35 * stmp_prod_13.3218_34;
  vect_prod_13.3219_24 = stmp_prod_13.3218_42 * 1.0e+0;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, vect_prod_13.3219_24);
  nl_16 = nl_31 + 1;
  ivtmp_3 = ivtmp_27 - 1;
  if (ivtmp_3 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_31 = PHI <0(2), nl_16(7)>
  # ivtmp_27 = PHI <100000(2), ivtmp_3(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # prod_36 = PHI <vect_prod_13.3219_24(4)>
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_10;
  printf ("S312\t %.3f \t\t", clock_dif_19);
  temp = prod_36;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s313 (s313, funcdef_no=664, decl_uid=10142, cgraph_uid=664, symbol_order=685)

Merging blocks 5 and 9
s313 ()
{
  float vect_dot_15.3241;
  float stmp_dot_15.3240;
  vector(4) float vect_dot_15.3239;
  vector(4) float vect__3.3238;
  vector(4) float vect__2.3237;
  vector(4) float * vectp_b.3236;
  vector(4) float * vectp_b.3235;
  vector(4) float vect__1.3234;
  vector(4) float * vectp_a.3233;
  vector(4) float * vectp_a.3232;
  vector(4) float vect_dot_15.3231;
  int i;
  int D.18620;
  int i;
  int nl;
  float dot;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_26;
  unsigned int ivtmp_31;
  unsigned int ivtmp_35;
  unsigned int ivtmp_38;
  unsigned int ivtmp_39;
  unsigned int ivtmp_44;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s313 ");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # dot_32 = PHI <dot_15(8), 0.0(5)>
  # i_42 = PHI <i_16(8), 0(5)>
  # ivtmp_39 = PHI <ivtmp_38(8), 32000(5)>
  # vect_dot_15.3231_29 = PHI <vect_dot_15.3239_8(8), { 0.0, 0.0, 0.0, 0.0 }(5)>
  # vectp_a.3232_28 = PHI <vectp_a.3232_27(8), &a(5)>
  # vectp_b.3235_6 = PHI <vectp_b.3235_5(8), &b(5)>
  # ivtmp_44 = PHI <ivtmp_26(8), 0(5)>
  vect__1.3234_7 = MEM[(float *)vectp_a.3232_28];
  _1 = a[i_42];
  vect__2.3237_4 = MEM[(float *)vectp_b.3235_6];
  _2 = b[i_42];
  vect__3.3238_30 = vect__1.3234_7 * vect__2.3237_4;
  _3 = _1 * _2;
  vect_dot_15.3239_8 = vect__3.3238_30 + vect_dot_15.3231_29;
  dot_15 = _3 + dot_32;
  i_16 = i_42 + 1;
  ivtmp_38 = ivtmp_39 - 1;
  vectp_a.3232_27 = vectp_a.3232_28 + 16;
  vectp_b.3235_5 = vectp_b.3235_6 + 16;
  ivtmp_26 = ivtmp_44 + 1;
  if (ivtmp_26 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # dot_41 = PHI <dot_15(3)>
  # vect_dot_15.3239_43 = PHI <vect_dot_15.3239_8(3)>
  stmp_dot_15.3240_36 = REDUC_PLUS (vect_dot_15.3239_43);
  vect_dot_15.3241_37 = stmp_dot_15.3240_36 + 0.0;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, vect_dot_15.3241_37);
  nl_18 = nl_33 + 1;
  ivtmp_31 = ivtmp_35 - 1;
  if (ivtmp_31 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_18(7)>
  # ivtmp_35 = PHI <50000(2), ivtmp_31(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # dot_40 = PHI <vect_dot_15.3241_37(4)>
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_12;
  printf ("S313\t %.3f \t\t", clock_dif_21);
  temp = dot_40;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s314 (s314, funcdef_no=665, decl_uid=10156, cgraph_uid=665, symbol_order=686)

Merging blocks 3 and 9
s314 ()
{
  float stmp_x_38.3260;
  vector(4) float vect_x_38.3259;
  vector(4) float vect__1.3258;
  vector(4) float * vectp_a.3257;
  vector(4) float * vectp_a.3256;
  vector(4) float vect_x_38.3255;
  int i;
  int D.18650;
  int i;
  int nl;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_6;
  vector(4) float vect_cst__7;
  unsigned int ivtmp_34;
  unsigned int ivtmp_37;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s314 ");
  start_t_11 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_18(7)>
  # ivtmp_5 = PHI <50000(2), ivtmp_4(7)>
  x_14 = a[0];
  vect_cst__7 = {x_14, x_14, x_14, x_14};
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       8
;;                3
  # x_31 = PHI <x_38(8), x_14(3)>
  # i_41 = PHI <i_16(8), 0(3)>
  # ivtmp_37 = PHI <ivtmp_6(8), 32000(3)>
  # vect_x_38.3255_3 = PHI <vect_x_38.3259_29(8), vect_cst__7(3)>
  # vectp_a.3256_28 = PHI <vectp_a.3256_30(8), &a(3)>
  # ivtmp_34 = PHI <ivtmp_42(8), 0(3)>
  vect__1.3258_40 = MEM[(float *)vectp_a.3256_28];
  _1 = a[i_41];
  vect_x_38.3259_29 = MAX_EXPR <vect__1.3258_40, vect_x_38.3255_3>;
  x_38 = MAX_EXPR <_1, x_31>;
  i_16 = i_41 + 1;
  ivtmp_6 = ivtmp_37 - 1;
  vectp_a.3256_30 = vectp_a.3256_28 + 16;
  ivtmp_42 = ivtmp_34 + 1;
  if (ivtmp_42 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 5>; [4.00%]
;;    succ:       8
;;                5

;;   basic block 8, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 1
;;    pred:       4
  # x_39 = PHI <x_38(4)>
  # vect_x_38.3259_27 = PHI <vect_x_38.3259_29(4)>
  stmp_x_38.3260_26 = REDUC_MAX (vect_x_38.3259_27);
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, stmp_x_38.3260_26);
  nl_18 = nl_32 + 1;
  ivtmp_4 = ivtmp_5 - 1;
  if (ivtmp_4 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  # x_2 = PHI <stmp_x_38.3260_26(5)>
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_11;
  printf ("S314\t %.3f \t\t", clock_dif_21);
  temp = x_2;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s315 (s315, funcdef_no=666, decl_uid=10170, cgraph_uid=666, symbol_order=687)

Removing basic block 17
Removing basic block 6
Removing basic block 23
Merging blocks 2 and 25
Merging blocks 22 and 24
s315 ()
{
  vector(4) float * vectp_a.3280;
  vector(4) float * vectp_a.3279;
  vector(4) float vect__3.3278;
  vector(4) int vect_patt_45.3277;
  vector(4) int vect_patt_18.3276;
  vector(4) int vect_patt_19.3275;
  vector(4) int vect_patt_49.3274;
  vector(4) int vect__1.3273;
  vector(4) int vect_vec_iv_.3272;
  int i;
  int nl;
  int i;
  int index;
  float chksum;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  int _2;
  float _3;
  float _5;
  float _6;
  float _8;
  unsigned int ivtmp_11;
  unsigned int ivtmp_22;
  unsigned int ivtmp_27;
  unsigned int ivtmp_31;
  unsigned int ivtmp_32;
  vector(4) int vect_cst__44;
  unsigned int ivtmp_50;
  _Bool _51;
  unsigned int ivtmp_53;
  vector(4) int vect_cst__63;
  vector(4) int vect_cst__65;
  vector(4) int vect_cst__68;
  unsigned int ivtmp_75;
  unsigned int ivtmp_76;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s315 ");
  vect_cst__44 = { 4, 4, 4, 4 };
  vect_cst__63 = { 7, 7, 7, 7 };
  vect_cst__65 = { 274877907, 274877907, 274877907, 274877907 };
  vect_cst__68 = { 32000, 32000, 32000, 32000 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       13
;;                2
  # i_55 = PHI <i_24(13), 0(2)>
  # ivtmp_27 = PHI <ivtmp_22(13), 32000(2)>
  # vect_vec_iv_.3272_43 = PHI <vect_vec_iv_.3272_62(13), { 0, 1, 2, 3 }(2)>
  # vectp_a.3279_72 = PHI <vectp_a.3279_73(13), &a(2)>
  # ivtmp_75 = PHI <ivtmp_76(13), 0(2)>
  vect_vec_iv_.3272_62 = vect_vec_iv_.3272_43 + vect_cst__44;
  vect__1.3273_64 = vect_vec_iv_.3272_43 * vect_cst__63;
  _1 = i_55 * 7;
  vect_patt_49.3274_66 = vect__1.3273_64 h* vect_cst__65;
  vect_patt_19.3275_67 = vect_patt_49.3274_66 >> 11;
  vect_patt_18.3276_69 = vect_patt_19.3275_67 * vect_cst__68;
  vect_patt_45.3277_70 = vect__1.3273_64 - vect_patt_18.3276_69;
  _2 = _1 % 32000;
  vect__3.3278_71 = (vector(4) float) vect_patt_45.3277_70;
  _3 = (float) _2;
  MEM[(float *)vectp_a.3279_72] = vect__3.3278_71;
  i_24 = i_55 + 1;
  ivtmp_22 = ivtmp_27 - 1;
  vectp_a.3279_73 = vectp_a.3279_72 + 16;
  ivtmp_76 = ivtmp_75 + 1;
  if (ivtmp_76 < 8000)
    goto <bb 13>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       13
;;                4

;;   basic block 13, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  start_t_26 = mysecond ();
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       4
;;                12
  # nl_58 = PHI <0(4), nl_36(12)>
  # ivtmp_32 = PHI <10000(4), ivtmp_31(12)>
  x_30 = a[0];
  i_14 = 1;
  ivtmp_11 = 31999;
  if (ivtmp_11 != 0)
    goto <bb 22>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       22
;;                10

;;   basic block 22, loop depth 1
;;    pred:       5
  _51 = 0;
;;    succ:       18

;;   basic block 18, loop depth 2
;;    pred:       21
;;                22
  # x_12 = PHI <x_7(21), x_30(22)>
  # index_13 = PHI <index_17(21), 0(22)>
  # i_10 = PHI <i_52(21), i_14(22)>
  # ivtmp_53 = PHI <ivtmp_50(21), ivtmp_11(22)>
  _6 = a[i_10];
  if (_6 > x_12)
    goto <bb 20>; [50.51%]
  else
    goto <bb 19>; [49.49%]
;;    succ:       20
;;                19

;;   basic block 19, loop depth 2
;;    pred:       18
;;    succ:       20

;;   basic block 20, loop depth 2
;;    pred:       18
;;                19
  # x_7 = PHI <_6(18), x_12(19)>
  # index_17 = PHI <i_10(18), index_13(19)>
  i_52 = i_10 + 1;
  ivtmp_50 = ivtmp_53 + 4294967295;
  if (ivtmp_50 != 0)
    goto <bb 21>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       21
;;                10

;;   basic block 21, loop depth 2
;;    pred:       20
  goto <bb 18>; [100.00%]
;;    succ:       18

;;   basic block 10, loop depth 1
;;    pred:       20
;;                5
  # x_59 = PHI <x_7(20), x_30(5)>
  # index_57 = PHI <index_17(20), 0(5)>
  _5 = (float) index_57;
  chksum_34 = _5 + x_59;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, chksum_34);
  nl_36 = nl_58 + 1;
  ivtmp_31 = ivtmp_32 - 1;
  if (ivtmp_31 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 11>; [1.01%]
;;    succ:       12
;;                11

;;   basic block 12, loop depth 1
;;    pred:       10
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 11, loop depth 0
;;    pred:       10
  # chksum_56 = PHI <chksum_34(10)>
  end_t_38 = mysecond ();
  clock_dif_39 = end_t_38 - start_t_26;
  printf ("S315\t %.3f \t\t", clock_dif_39);
  _8 = chksum_56 + 1.0e+0;
  temp = _8;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s316 (s316, funcdef_no=667, decl_uid=10190, cgraph_uid=667, symbol_order=688)

Removing basic block 9
Merging blocks 3 and 13
s316 ()
{
  float stmp_x_38.3310;
  vector(4) float vect_x_38.3309;
  vector(4) float vect__1.3308;
  vector(4) float * vectp_a.3307;
  vector(4) float * vectp_a.3306;
  vector(4) float vect_x_38.3305;
  unsigned int tmp.3304;
  int tmp.3303;
  int i;
  int D.18707;
  int i;
  int nl;
  float x;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_9;
  unsigned int ivtmp_27;
  float _28;
  unsigned int ivtmp_30;
  unsigned int ivtmp_39;
  vector(4) float vect_cst__44;
  unsigned int ivtmp_46;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s316 ");
  start_t_11 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_18(7)>
  # ivtmp_5 = PHI <50000(2), ivtmp_4(7)>
  x_14 = a[0];
  vectp_a.3307_42 = &a + 4;
  vect_cst__44 = {x_14, x_14, x_14, x_14};
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       8
;;                3
  # x_31 = PHI <x_38(8), x_14(3)>
  # i_41 = PHI <i_16(8), 1(3)>
  # ivtmp_30 = PHI <ivtmp_6(8), 31999(3)>
  # vect_x_38.3305_34 = PHI <vect_x_38.3309_25(8), vect_cst__44(3)>
  # vectp_a.3306_35 = PHI <vectp_a.3306_36(8), vectp_a.3307_42(3)>
  # ivtmp_9 = PHI <ivtmp_46(8), 0(3)>
  vect__1.3308_43 = MEM[(float *)vectp_a.3306_35];
  _1 = a[i_41];
  vect_x_38.3309_25 = MIN_EXPR <vect__1.3308_43, vect_x_38.3305_34>;
  x_38 = MIN_EXPR <_1, x_31>;
  i_16 = i_41 + 1;
  ivtmp_6 = ivtmp_30 - 1;
  vectp_a.3306_36 = vectp_a.3306_35 + 16;
  ivtmp_46 = ivtmp_9 + 1;
  if (ivtmp_46 < 7999)
    goto <bb 8>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       8
;;                10

;;   basic block 8, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 10, loop depth 1
;;    pred:       4
  # x_26 = PHI <x_38(4)>
  # vect_x_38.3309_12 = PHI <vect_x_38.3309_25(4)>
  stmp_x_38.3310_15 = REDUC_MIN (vect_x_38.3309_12);
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # x_3 = PHI <stmp_x_38.3310_15(10), x_29(12)>
  # i_2 = PHI <31997(10), i_7(12)>
  # ivtmp_39 = PHI <3(10), ivtmp_27(12)>
  _28 = a[i_2];
  x_29 = MIN_EXPR <_28, x_3>;
  i_7 = i_2 + 1;
  ivtmp_27 = ivtmp_39 - 1;
  if (ivtmp_27 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 5>; [1.01%]
;;    succ:       12
;;                5

;;   basic block 12, loop depth 2
;;    pred:       11
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 5, loop depth 1
;;    pred:       11
  # x_40 = PHI <x_29(11)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, x_40);
  nl_18 = nl_32 + 1;
  ivtmp_4 = ivtmp_5 - 1;
  if (ivtmp_4 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  # x_37 = PHI <x_40(5)>
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_11;
  printf ("S316\t %.3f \t\t", clock_dif_21);
  temp = x_37;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s317 (s317, funcdef_no=668, decl_uid=10204, cgraph_uid=668, symbol_order=689)

Merging blocks 5 and 9
s317 ()
{
  float vect_q_12.3326;
  float stmp_q_12.3325;
  vector(4) float vect_q_12.3324;
  vector(4) float vect_q_12.3323;
  int i;
  int D.18733;
  int i;
  int nl;
  float q;
  double clock_dif;
  double end_t;
  double start_t;
  vector(4) float vect_cst__1;
  unsigned int ivtmp_2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_23;
  unsigned int ivtmp_26;
  unsigned int ivtmp_35;
  unsigned int ivtmp_41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s317 ");
  start_t_9 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # q_29 = PHI <q_12(8), 1.0e+0(5)>
  # i_39 = PHI <i_13(8), 0(5)>
  # ivtmp_35 = PHI <ivtmp_26(8), 16000(5)>
  # vect_q_12.3323_4 = PHI <vect_q_12.3324_28(8), { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 }(5)>
  # ivtmp_41 = PHI <ivtmp_23(8), 0(5)>
  vect_q_12.3324_28 = vect_cst__1 * vect_q_12.3323_4;
  q_12 = q_29 * 9.900000095367431640625e-1;
  i_13 = i_39 + 1;
  ivtmp_26 = ivtmp_35 - 1;
  ivtmp_23 = ivtmp_41 + 1;
  if (ivtmp_23 < 4000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # q_37 = PHI <q_12(3)>
  # vect_q_12.3324_38 = PHI <vect_q_12.3324_28(3)>
  stmp_q_12.3325_27 = BIT_FIELD_REF <vect_q_12.3324_38, 32, 0>;
  stmp_q_12.3325_5 = BIT_FIELD_REF <vect_q_12.3324_38, 32, 32>;
  stmp_q_12.3325_24 = stmp_q_12.3325_5 * stmp_q_12.3325_27;
  stmp_q_12.3325_25 = BIT_FIELD_REF <vect_q_12.3324_38, 32, 64>;
  stmp_q_12.3325_32 = stmp_q_12.3325_25 * stmp_q_12.3325_24;
  stmp_q_12.3325_40 = BIT_FIELD_REF <vect_q_12.3324_38, 32, 96>;
  stmp_q_12.3325_33 = stmp_q_12.3325_40 * stmp_q_12.3325_32;
  vect_q_12.3326_34 = stmp_q_12.3325_33 * 1.0e+0;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, vect_q_12.3326_34);
  nl_15 = nl_30 + 1;
  ivtmp_2 = ivtmp_3 - 1;
  if (ivtmp_2 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_30 = PHI <0(2), nl_15(7)>
  # ivtmp_3 = PHI <50000(2), ivtmp_2(7)>
  vect_cst__1 = { 9.900000095367431640625e-1, 9.900000095367431640625e-1, 9.900000095367431640625e-1, 9.900000095367431640625e-1 };
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # q_36 = PHI <vect_q_12.3326_34(4)>
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_9;
  printf ("S317\t %.3f \t\t", clock_dif_18);
  temp = q_36;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s318 (s318, funcdef_no=669, decl_uid=10219, cgraph_uid=669, symbol_order=690)

Removing basic block 9
Removing basic block 10
Removing basic block 7
Removing basic block 4
Removing basic block 3
Removing basic block 20
Removing basic block 16
Removing basic block 13
Removing basic block 27
Merging blocks 2 and 21
Merging blocks 12 and 28
s318 (int inc)
{
  int i;
  int nl;
  float chksum;
  float max;
  int index;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  float _14;
  int _23;
  int _24;
  float _33;
  unsigned int ivtmp_47;
  _Bool _50;
  float _68;
  unsigned int ivtmp_72;
  _Bool _74;
  unsigned int ivtmp_79;
  float _80;
  int _81;
  int _82;
  float _83;
  unsigned int ivtmp_88;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s318 ");
  start_t_28 = mysecond ();
  _50 = 0;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       18
;;                2
  # nl_49 = PHI <nl_71(18), 0(2)>
  # ivtmp_47 = PHI <ivtmp_72(18), 5000(2)>
  _33 = a[0];
  _24 = (int) _33;
  _23 = ABS_EXPR <_24>;
  max_22 = (float) _23;
  _74 = 0;
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       25
;;                12
  # k_75 = PHI <k_86(25), inc_32(D)(12)>
  # index_76 = PHI <index_84(25), 0(12)>
  # max_77 = PHI <max_85(25), max_22(12)>
  # i_78 = PHI <i_87(25), 1(12)>
  # ivtmp_79 = PHI <ivtmp_88(25), 31999(12)>
  _80 = a[k_75];
  _81 = (int) _80;
  _82 = ABS_EXPR <_81>;
  _83 = (float) _82;
  if (_83 <= max_77)
    goto <bb 24>; [34.00%]
  else
    goto <bb 23>; [66.00%]
;;    succ:       24
;;                23

;;   basic block 23, loop depth 2
;;    pred:       22
;;    succ:       24

;;   basic block 24, loop depth 2
;;    pred:       22
;;                23
  # index_84 = PHI <index_76(22), i_78(23)>
  # max_85 = PHI <max_77(22), _83(23)>
  k_86 = inc_32(D) + k_75;
  i_87 = i_78 + 1;
  ivtmp_88 = ivtmp_79 - 1;
  if (ivtmp_88 != 0)
    goto <bb 25>; [98.99%]
  else
    goto <bb 17>; [1.01%]
;;    succ:       25
;;                17

;;   basic block 25, loop depth 2
;;    pred:       24
  goto <bb 22>; [100.00%]
;;    succ:       22

;;   basic block 17, loop depth 1
;;    pred:       24
  # index_66 = PHI <index_84(24)>
  # max_67 = PHI <max_85(24)>
  _68 = (float) index_66;
  chksum_69 = _68 + max_67;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, chksum_69);
  nl_71 = nl_49 + 1;
  ivtmp_72 = ivtmp_47 - 1;
  if (ivtmp_72 != 0)
    goto <bb 18>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       18
;;                8

;;   basic block 18, loop depth 1
;;    pred:       17
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 8, loop depth 0
;;    pred:       17
  # chksum_61 = PHI <chksum_69(17)>
  end_t_40 = mysecond ();
  clock_dif_41 = end_t_40 - start_t_28;
  printf ("S318\t %.3f \t\t", clock_dif_41);
  _14 = chksum_61 + 1.0e+0;
  temp = _14;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s319 (s319, funcdef_no=670, decl_uid=10237, cgraph_uid=670, symbol_order=691)

Merging blocks 5 and 9
s319 ()
{
  float vect_sum_22.3370;
  float stmp_sum_22.3369;
  vector(4) float vect_sum_22.3368;
  vector(4) float * vectp_b.3367;
  vector(4) float * vectp_b.3366;
  vector(4) float vect__45.3365;
  vector(4) float vect__7.3364;
  vector(4) float vect__6.3363;
  vector(4) float * vectp_e.3362;
  vector(4) float * vectp_e.3361;
  vector(4) float * vectp_a.3360;
  vector(4) float * vectp_a.3359;
  vector(4) float vect__3.3358;
  vector(4) float vect__2.3357;
  vector(4) float * vectp_d.3356;
  vector(4) float * vectp_d.3355;
  vector(4) float vect__1.3354;
  vector(4) float * vectp_c.3353;
  vector(4) float * vectp_c.3352;
  vector(4) float vect_sum_22.3351;
  int i;
  int D.18770;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_4;
  unsigned int ivtmp_5;
  float _6;
  float _7;
  float _45;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  unsigned int ivtmp_59;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s319 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # sum_39 = PHI <sum_22(8), 0.0(5)>
  # i_40 = PHI <i_23(8), 0(5)>
  # ivtmp_59 = PHI <ivtmp_58(8), 32000(5)>
  # vect_sum_22.3351_55 = PHI <vect_sum_22.3368_11(8), { 0.0, 0.0, 0.0, 0.0 }(5)>
  # vectp_c.3352_51 = PHI <vectp_c.3352_50(8), &c(5)>
  # vectp_d.3355_46 = PHI <vectp_d.3355_44(8), &d(5)>
  # vectp_a.3359_38 = PHI <vectp_a.3359_37(8), &a(5)>
  # vectp_e.3361_35 = PHI <vectp_e.3361_34(8), &e(5)>
  # vectp_b.3366_15 = PHI <vectp_b.3366_13(8), &b(5)>
  # ivtmp_5 = PHI <ivtmp_4(8), 0(5)>
  vect__1.3354_47 = MEM[(float *)vectp_c.3352_51];
  _1 = c[i_40];
  vect__2.3357_43 = MEM[(float *)vectp_d.3355_46];
  _2 = d[i_40];
  vect__3.3358_42 = vect__1.3354_47 + vect__2.3357_43;
  _3 = _1 + _2;
  MEM[(float *)vectp_a.3359_38] = vect__3.3358_42;
  vect__6.3363_33 = MEM[(float *)vectp_e.3361_35];
  _6 = e[i_40];
  vect__7.3364_32 = vect__1.3354_47 + vect__6.3363_33;
  _7 = _1 + _6;
  vect__45.3365_20 = vect__3.3358_42 + vect__7.3364_32;
  _45 = _3 + _7;
  MEM[(float *)vectp_b.3366_15] = vect__7.3364_32;
  vect_sum_22.3368_11 = vect__45.3365_20 + vect_sum_22.3351_55;
  sum_22 = _45 + sum_39;
  i_23 = i_40 + 1;
  ivtmp_58 = ivtmp_59 - 1;
  vectp_c.3352_50 = vectp_c.3352_51 + 16;
  vectp_d.3355_44 = vectp_d.3355_46 + 16;
  vectp_a.3359_37 = vectp_a.3359_38 + 16;
  vectp_e.3361_34 = vectp_e.3361_35 + 16;
  vectp_b.3366_13 = vectp_b.3366_15 + 16;
  ivtmp_4 = ivtmp_5 + 1;
  if (ivtmp_4 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # sum_61 = PHI <sum_22(3)>
  # vect_sum_22.3368_10 = PHI <vect_sum_22.3368_11(3)>
  stmp_sum_22.3369_9 = REDUC_PLUS (vect_sum_22.3368_10);
  vect_sum_22.3370_8 = stmp_sum_22.3369_9 + 0.0;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, vect_sum_22.3370_8);
  nl_25 = nl_48 + 1;
  ivtmp_56 = ivtmp_57 - 1;
  if (ivtmp_56 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_48 = PHI <0(2), nl_25(7)>
  # ivtmp_57 = PHI <20000(2), ivtmp_56(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # sum_60 = PHI <vect_sum_22.3370_8(4)>
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_17;
  printf ("S319\t %.3f \t\t", clock_dif_28);
  temp = sum_60;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s3110 (s3110, funcdef_no=671, decl_uid=10251, cgraph_uid=671, symbol_order=692)

Removing basic block 12
Removing basic block 13
Removing basic block 7
Removing basic block 4
Removing basic block 8
Removing basic block 23
Removing basic block 19
Removing basic block 16
Removing basic block 30
Merging blocks 3 and 24
Merging blocks 15 and 31
s3110 ()
{
  int j;
  int i;
  int nl;
  float chksum;
  float max;
  int yindex;
  int xindex;
  double clock_dif;
  double end_t;
  double start_t;
  float _2;
  float _3;
  float _4;
  _Bool _5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_7;
  float _9;
  unsigned int ivtmp_22;
  float _54;
  unsigned int ivtmp_56;
  _Bool _67;
  unsigned int ivtmp_69;
  unsigned int ivtmp_84;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s3110");
  start_t_29 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                11
  # nl_76 = PHI <0(2), nl_46(11)>
  # ivtmp_7 = PHI <3900(2), ivtmp_6(11)>
  max_34 = aa[0][0];
  _5 = 0;
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       21
;;                3
  # xindex_40 = PHI <xindex_63(21), 0(3)>
  # yindex_37 = PHI <yindex_62(21), 0(3)>
  # max_30 = PHI <max_61(21), max_34(3)>
  # i_36 = PHI <i_68(21), 0(3)>
  # ivtmp_22 = PHI <ivtmp_69(21), 256(3)>
  _67 = 0;
;;    succ:       25

;;   basic block 25, loop depth 3
;;    pred:       28
;;                15
  # xindex_66 = PHI <xindex_80(28), xindex_40(15)>
  # yindex_65 = PHI <yindex_81(28), yindex_37(15)>
  # max_25 = PHI <max_82(28), max_30(15)>
  # j_55 = PHI <j_83(28), 0(15)>
  # ivtmp_56 = PHI <ivtmp_84(28), 256(15)>
  _54 = aa[i_36][j_55];
  if (_54 > max_25)
    goto <bb 27>; [50.00%]
  else
    goto <bb 26>; [50.00%]
;;    succ:       27
;;                26

;;   basic block 26, loop depth 3
;;    pred:       25
;;    succ:       27

;;   basic block 27, loop depth 3
;;    pred:       25
;;                26
  # xindex_80 = PHI <i_36(25), xindex_66(26)>
  # yindex_81 = PHI <j_55(25), yindex_65(26)>
  # max_82 = PHI <_54(25), max_25(26)>
  j_83 = j_55 + 1;
  ivtmp_84 = ivtmp_56 - 1;
  if (ivtmp_84 != 0)
    goto <bb 28>; [98.99%]
  else
    goto <bb 20>; [1.01%]
;;    succ:       28
;;                20

;;   basic block 28, loop depth 3
;;    pred:       27
  goto <bb 25>; [100.00%]
;;    succ:       25

;;   basic block 20, loop depth 2
;;    pred:       27
  # xindex_63 = PHI <xindex_80(27)>
  # yindex_62 = PHI <yindex_81(27)>
  # max_61 = PHI <max_82(27)>
  i_68 = i_36 + 1;
  ivtmp_69 = ivtmp_22 - 1;
  if (ivtmp_69 != 0)
    goto <bb 21>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       21
;;                9

;;   basic block 21, loop depth 2
;;    pred:       20
  goto <bb 15>; [100.00%]
;;    succ:       15

;;   basic block 9, loop depth 1
;;    pred:       20
  # xindex_59 = PHI <xindex_63(20)>
  # yindex_57 = PHI <yindex_62(20)>
  # max_41 = PHI <max_61(20)>
  _2 = (float) xindex_59;
  _3 = _2 + max_41;
  _4 = (float) yindex_57;
  chksum_44 = _3 + _4;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, chksum_44);
  nl_46 = nl_76 + 1;
  ivtmp_6 = ivtmp_7 - 1;
  if (ivtmp_6 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       9
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 10, loop depth 0
;;    pred:       9
  # chksum_39 = PHI <chksum_44(9)>
  end_t_48 = mysecond ();
  clock_dif_49 = end_t_48 - start_t_29;
  printf ("S3110\t %.3f \t\t", clock_dif_49);
  _9 = chksum_39 + 2.0e+0;
  temp = _9;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s13110 (s13110, funcdef_no=672, decl_uid=10272, cgraph_uid=672, symbol_order=693)

Merging blocks 6 and 12
s13110 ()
{
  float stmp_max_43.3414;
  vector(4) float vect_max_43.3413;
  vector(4) float vect__1.3412;
  vector(4) float * vectp_aa.3411;
  vector(4) float * vectp_aa.3410;
  vector(4) float vect_max_43.3409;
  int i;
  int D.18837;
  int j;
  int i;
  int nl;
  float max;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_4;
  unsigned int ivtmp_7;
  unsigned int ivtmp_8;
  unsigned int ivtmp_9;
  unsigned int ivtmp_11;
  unsigned int ivtmp_31;
  vector(4) float vect_cst__33;
  sizetype _36;
  sizetype _45;
  unsigned int ivtmp_49;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s3110");
  start_t_15 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                9
  # nl_40 = PHI <0(2), nl_23(9)>
  # ivtmp_7 = PHI <3900(2), ivtmp_4(9)>
  max_18 = aa[0][0];
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 11, loop depth 3
;;    pred:       4
;;    succ:       4

;;   basic block 4, loop depth 3
;;    pred:       11
;;                6
  # max_39 = PHI <max_43(11), max_47(6)>
  # j_48 = PHI <j_20(11), 0(6)>
  # ivtmp_31 = PHI <ivtmp_11(11), 256(6)>
  # vect_max_43.3409_46 = PHI <vect_max_43.3413_6(11), vect_cst__33(6)>
  # vectp_aa.3410_38 = PHI <vectp_aa.3410_37(11), vectp_aa.3411_5(6)>
  # ivtmp_49 = PHI <ivtmp_3(11), 0(6)>
  vect__1.3412_10 = MEM[(float *)vectp_aa.3410_38];
  _1 = aa[i_41][j_48];
  vect_max_43.3413_6 = MAX_EXPR <vect__1.3412_10, vect_max_43.3409_46>;
  max_43 = MAX_EXPR <_1, max_39>;
  j_20 = j_48 + 1;
  ivtmp_11 = ivtmp_31 - 1;
  vectp_aa.3410_37 = vectp_aa.3410_38 + 16;
  ivtmp_3 = ivtmp_49 + 1;
  if (ivtmp_3 < 64)
    goto <bb 11>; [96.00%]
  else
    goto <bb 5>; [4.00%]
;;    succ:       11
;;                5

;;   basic block 5, loop depth 2
;;    pred:       4
  # max_42 = PHI <max_43(4)>
  # vect_max_43.3413_44 = PHI <vect_max_43.3413_6(4)>
  stmp_max_43.3414_32 = REDUC_MAX (vect_max_43.3413_44);
  i_21 = i_41 + 1;
  ivtmp_8 = ivtmp_9 - 1;
  if (ivtmp_8 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       10
;;                7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       3
;;                10
  # max_47 = PHI <max_18(3), stmp_max_43.3414_32(10)>
  # i_41 = PHI <0(3), i_21(10)>
  # ivtmp_9 = PHI <256(3), ivtmp_8(10)>
  _45 = (sizetype) i_41;
  _36 = _45 * 1024;
  vectp_aa.3411_5 = &aa + _36;
  vect_cst__33 = {max_47, max_47, max_47, max_47};
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 7, loop depth 1
;;    pred:       5
  # max_35 = PHI <stmp_max_43.3414_32(5)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, max_35);
  nl_23 = nl_40 + 1;
  ivtmp_4 = ivtmp_7 - 1;
  if (ivtmp_4 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       7
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       7
  # max_34 = PHI <max_35(7)>
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_15;
  printf ("S13110\t %.3f \t\t", clock_dif_26);
  _2 = max_34 + 2.0e+0;
  temp = _2;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s3111 (s3111, funcdef_no=673, decl_uid=10293, cgraph_uid=673, symbol_order=694)

Removing basic block 9
Removing basic block 10
Removing basic block 6
Removing basic block 3
Removing basic block 7
Removing basic block 20
Removing basic block 25
Removing basic block 30
Removing basic block 23
Removing basic block 24
Removing basic block 22
Removing basic block 28
Merging blocks 2 and 21
Merging blocks 12 and 27
Merging blocks 29 and 17
Merging blocks 12 and 31
s3111 ()
{
  float vect_sum_42.3442;
  float stmp_sum_42.3441;
  vector(4) float vect_sum_42.3440;
  vector(4) float vect__ifc__55.3439;
  vector(4) float vect__27.3438;
  vector(4) float * vectp_a.3437;
  vector(4) float * vectp_a.3436;
  vector(4) float vect_sum_42.3435;
  int i;
  int D.18869;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  _Bool _7;
  unsigned int ivtmp_13;
  unsigned int ivtmp_26;
  float _27;
  unsigned int ivtmp_36;
  unsigned int ivtmp_40;
  _Bool _46;
  float _ifc__55;
  vector(4) float vect_cst__60;
  unsigned int ivtmp_66;
  unsigned int ivtmp_67;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s3111");
  start_t_12 = mysecond ();
  _7 = 0;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       18
;;                2
  # nl_4 = PHI <nl_44(18), 0(2)>
  # ivtmp_40 = PHI <ivtmp_13(18), 5000(2)>
  _46 = 1;
  vect_cst__60 = { 0.0, 0.0, 0.0, 0.0 };
;;    succ:       13

;;   basic block 13, loop depth 2
;;    pred:       16
;;                12
  # sum_29 = PHI <sum_42(16), 0.0(12)>
  # i_8 = PHI <i_35(16), 0(12)>
  # ivtmp_26 = PHI <ivtmp_36(16), 32000(12)>
  # vect_sum_42.3435_56 = PHI <vect_sum_42.3440_62(16), { 0.0, 0.0, 0.0, 0.0 }(12)>
  # vectp_a.3436_57 = PHI <vectp_a.3436_58(16), &a(12)>
  # ivtmp_66 = PHI <ivtmp_67(16), 0(12)>
  vect__27.3438_59 = MEM[(float *)vectp_a.3436_57];
  _27 = a[i_8];
  vect__ifc__55.3439_61 = MAX_EXPR <vect__27.3438_59, vect_cst__60>;
  _ifc__55 = MAX_EXPR <_27, 0.0>;
  vect_sum_42.3440_62 = vect__ifc__55.3439_61 + vect_sum_42.3435_56;
  sum_42 = _ifc__55 + sum_29;
  i_35 = i_8 + 1;
  ivtmp_36 = ivtmp_26 - 1;
  vectp_a.3436_58 = vectp_a.3436_57 + 16;
  ivtmp_67 = ivtmp_66 + 1;
  if (ivtmp_67 < 8000)
    goto <bb 16>; [96.00%]
  else
    goto <bb 29>; [4.00%]
;;    succ:       16
;;                29

;;   basic block 16, loop depth 2
;;    pred:       13
  goto <bb 13>; [100.00%]
;;    succ:       13

;;   basic block 29, loop depth 1
;;    pred:       13
  # sum_34 = PHI <sum_42(13)>
  # vect_sum_42.3440_63 = PHI <vect_sum_42.3440_62(13)>
  stmp_sum_42.3441_64 = REDUC_PLUS (vect_sum_42.3440_63);
  vect_sum_42.3442_65 = stmp_sum_42.3441_64 + 0.0;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, vect_sum_42.3442_65);
  nl_44 = nl_4 + 1;
  ivtmp_13 = ivtmp_40 - 1;
  if (ivtmp_13 != 0)
    goto <bb 18>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       18
;;                8

;;   basic block 18, loop depth 1
;;    pred:       29
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 8, loop depth 0
;;    pred:       29
  # sum_38 = PHI <vect_sum_42.3442_65(29)>
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_12;
  printf ("S3111\t %.3f \t\t", clock_dif_21);
  temp = sum_38;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s3112 (s3112, funcdef_no=674, decl_uid=10307, cgraph_uid=674, symbol_order=695)

s3112 ()
{
  int i;
  int D.18894;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_3;
  unsigned int ivtmp_4;
  unsigned int ivtmp_29;
  unsigned int ivtmp_40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s3112");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # sum_33 = PHI <0.0(5), sum_14(8)>
  # i_34 = PHI <0(5), i_16(8)>
  # ivtmp_4 = PHI <32000(5), ivtmp_40(8)>
  _1 = a[i_34];
  sum_14 = _1 + sum_33;
  b[i_34] = sum_14;
  i_16 = i_34 + 1;
  ivtmp_40 = ivtmp_4 - 1;
  if (ivtmp_40 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # sum_39 = PHI <sum_14(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, sum_39);
  nl_18 = nl_42 + 1;
  ivtmp_3 = ivtmp_29 - 1;
  if (ivtmp_3 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_42 = PHI <0(2), nl_18(7)>
  # ivtmp_29 = PHI <10000(2), ivtmp_3(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # sum_38 = PHI <sum_39(4)>
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_11;
  printf ("S3112\t %.3f \t\t", clock_dif_21);
  temp = sum_38;
  check (-12);
  return 0;
;;    succ:       EXIT

}



;; Function s3113 (s3113, funcdef_no=675, decl_uid=10321, cgraph_uid=675, symbol_order=696)

Merging blocks 3 and 9
s3113 ()
{
  float stmp_max_44.3476;
  vector(4) float vect_max_44.3475;
  vector(4) float vect__7.3474;
  vector(4) int vect__6.3473;
  vector(4) int vect__5.3472;
  vector(4) float vect__4.3471;
  vector(4) float * vectp_a.3470;
  vector(4) float * vectp_a.3469;
  vector(4) float vect_max_44.3468;
  int i;
  int D.18914;
  int i;
  int nl;
  float max;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  int _3;
  float _4;
  int _5;
  int _6;
  float _7;
  vector(4) float vect_cst__15;
  unsigned int ivtmp_36;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  unsigned int ivtmp_45;
  unsigned int ivtmp_46;
  unsigned int ivtmp_48;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s3113");
  start_t_19 = mysecond ();
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # nl_38 = PHI <0(2), nl_24(7)>
  # ivtmp_43 = PHI <40000(2), ivtmp_36(7)>
  _1 = a[0];
  _2 = (int) _1;
  _3 = ABS_EXPR <_2>;
  max_21 = (float) _3;
  vect_cst__15 = {max_21, max_21, max_21, max_21};
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       8
;;                3
  # max_37 = PHI <max_44(8), max_21(3)>
  # i_47 = PHI <i_22(8), 0(3)>
  # ivtmp_46 = PHI <ivtmp_45(8), 32000(3)>
  # vect_max_44.3468_34 = PHI <vect_max_44.3475_9(8), vect_cst__15(3)>
  # vectp_a.3469_31 = PHI <vectp_a.3469_14(8), &a(3)>
  # ivtmp_48 = PHI <ivtmp_42(8), 0(3)>
  vect__4.3471_13 = MEM[(float *)vectp_a.3469_31];
  _4 = a[i_47];
  vect__5.3472_12 = (vector(4) int) vect__4.3471_13;
  _5 = (int) _4;
  vect__6.3473_11 = ABS_EXPR <vect__5.3472_12>;
  _6 = ABS_EXPR <_5>;
  vect__7.3474_10 = (vector(4) float) vect__6.3473_11;
  _7 = (float) _6;
  vect_max_44.3475_9 = MAX_EXPR <vect__7.3474_10, vect_max_44.3468_34>;
  max_44 = MAX_EXPR <_7, max_37>;
  i_22 = i_47 + 1;
  ivtmp_45 = ivtmp_46 - 1;
  vectp_a.3469_14 = vectp_a.3469_31 + 16;
  ivtmp_42 = ivtmp_48 + 1;
  if (ivtmp_42 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 5>; [4.00%]
;;    succ:       8
;;                5

;;   basic block 8, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 1
;;    pred:       4
  # max_50 = PHI <max_44(4)>
  # vect_max_44.3475_32 = PHI <vect_max_44.3475_9(4)>
  stmp_max_44.3476_40 = REDUC_MAX (vect_max_44.3475_32);
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, stmp_max_44.3476_40);
  nl_24 = nl_38 + 1;
  ivtmp_36 = ivtmp_43 - 1;
  if (ivtmp_36 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  # max_49 = PHI <stmp_max_44.3476_40(5)>
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_19;
  printf ("S3113\t %.3f \t\t", clock_dif_27);
  temp = max_49;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s321 (s321, funcdef_no=676, decl_uid=10335, cgraph_uid=676, symbol_order=697)

s321 ()
{
  int i;
  int D.18940;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_37;
  unsigned int ivtmp_38;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s321 ");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_29 = PHI <1(5), i_16(8)>
  # ivtmp_41 = PHI <31999(5), ivtmp_40(8)>
  _1 = a[i_29];
  _2 = i_29 + -1;
  _3 = a[_2];
  _4 = b[i_29];
  _5 = _3 * _4;
  _6 = _1 + _5;
  a[i_29] = _6;
  i_16 = i_29 + 1;
  ivtmp_40 = ivtmp_41 - 1;
  if (ivtmp_40 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_37 = ivtmp_38 - 1;
  if (ivtmp_37 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_38 = PHI <10000(2), ivtmp_37(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S321\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s322 (s322, funcdef_no=677, decl_uid=10348, cgraph_uid=677, symbol_order=698)

s322 ()
{
  int i;
  int D.18965;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  float _3;
  float _4;
  float _5;
  int _7;
  float _8;
  float _9;
  float _10;
  float _11;
  float _30;
  unsigned int ivtmp_59;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s322 ");
  start_t_19 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_34 = PHI <2(5), i_21(8)>
  # ivtmp_62 = PHI <31998(5), ivtmp_61(8)>
  _1 = a[i_34];
  _2 = i_34 + -1;
  _3 = a[_2];
  _4 = b[i_34];
  _5 = _3 * _4;
  _7 = i_34 + -2;
  _8 = a[_7];
  _9 = c[i_34];
  _10 = _8 * _9;
  _30 = _5 + _10;
  _11 = _1 + _30;
  a[i_34] = _11;
  i_21 = i_34 + 1;
  ivtmp_61 = ivtmp_62 - 1;
  if (ivtmp_61 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_33 + 1;
  ivtmp_59 = ivtmp_60 - 1;
  if (ivtmp_59 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_23(7)>
  # ivtmp_60 = PHI <5000(2), ivtmp_59(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_19;
  printf ("S322\t %.3f \t\t", clock_dif_26);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s323 (s323, funcdef_no=678, decl_uid=10361, cgraph_uid=678, symbol_order=699)

s323 ()
{
  int i;
  int D.19001;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_56;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s323 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_33 = PHI <1(5), i_20(8)>
  # ivtmp_62 = PHI <31999(5), ivtmp_61(8)>
  _1 = i_33 + -1;
  _2 = b[_1];
  _3 = c[i_33];
  _4 = d[i_33];
  _5 = _3 * _4;
  _6 = _2 + _5;
  a[i_33] = _6;
  _7 = e[i_33];
  _8 = _3 * _7;
  _9 = _6 + _8;
  b[i_33] = _9;
  i_20 = i_33 + 1;
  ivtmp_61 = ivtmp_62 - 1;
  if (ivtmp_61 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_56 = ivtmp_60 - 1;
  if (ivtmp_56 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_22(7)>
  # ivtmp_60 = PHI <5000(2), ivtmp_56(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_17;
  printf ("S323\t %.3f \t\t", clock_dif_25);
  check (12);
  return 0;
;;    succ:       EXIT

}



;; Function s331 (s331, funcdef_no=679, decl_uid=10374, cgraph_uid=679, symbol_order=700)

Removing basic block 9
Removing basic block 10
Removing basic block 6
Removing basic block 3
Removing basic block 7
Removing basic block 20
Removing basic block 16
Removing basic block 13
Removing basic block 27
Merging blocks 2 and 21
Merging blocks 12 and 28
s331 ()
{
  int i;
  int D.19032;
  int i;
  int nl;
  float chksum;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  int _2;
  float _3;
  _Bool _8;
  _Bool _11;
  unsigned int ivtmp_14;
  unsigned int ivtmp_42;
  unsigned int ivtmp_50;
  float _51;
  unsigned int ivtmp_54;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s331 ");
  start_t_13 = mysecond ();
  _8 = 0;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       18
;;                2
  # nl_5 = PHI <nl_46(18), 0(2)>
  # ivtmp_42 = PHI <ivtmp_14(18), 10000(2)>
  _11 = 0;
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       25
;;                12
  # j_48 = PHI <j_52(25), -1(12)>
  # i_49 = PHI <i_53(25), 0(12)>
  # ivtmp_50 = PHI <ivtmp_54(25), 32000(12)>
  _51 = a[i_49];
  if (_51 < 0.0)
    goto <bb 24>; [41.00%]
  else
    goto <bb 23>; [59.00%]
;;    succ:       24
;;                23

;;   basic block 23, loop depth 2
;;    pred:       22
;;    succ:       24

;;   basic block 24, loop depth 2
;;    pred:       22
;;                23
  # j_52 = PHI <i_49(22), j_48(23)>
  i_53 = i_49 + 1;
  ivtmp_54 = ivtmp_50 - 1;
  if (ivtmp_54 != 0)
    goto <bb 25>; [98.99%]
  else
    goto <bb 17>; [1.01%]
;;    succ:       25
;;                17

;;   basic block 25, loop depth 2
;;    pred:       24
  goto <bb 22>; [100.00%]
;;    succ:       22

;;   basic block 17, loop depth 1
;;    pred:       24
  # j_38 = PHI <j_52(24)>
  chksum_45 = (float) j_38;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, chksum_45);
  nl_46 = nl_5 + 1;
  ivtmp_14 = ivtmp_42 - 1;
  if (ivtmp_14 != 0)
    goto <bb 18>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       18
;;                8

;;   basic block 18, loop depth 1
;;    pred:       17
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 8, loop depth 0
;;    pred:       17
  # j_39 = PHI <j_38(17)>
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_13;
  printf ("S331\t %.3f \t\t", clock_dif_23);
  _2 = j_39 + 1;
  _3 = (float) _2;
  temp = _3;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s332 (s332, funcdef_no=681, decl_uid=10394, cgraph_uid=681, symbol_order=702)

s332 (float t)
{
  int i;
  int D.19052;
  int i;
  int nl;
  float chksum;
  float value;
  int index;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _3;
  unsigned int ivtmp_5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_7;
  float prephitmp_8;
  float _31;
  unsigned int ivtmp_32;
  float _42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s332 ");
  start_t_12 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_43 = PHI <0(7), i_18(10)>
  # ivtmp_6 = PHI <32000(7), ivtmp_5(10)>
  _1 = a[i_43];
  if (_1 > t_15(D))
    goto <bb 4>; [5.50%]
  else
    goto <bb 5>; [94.50%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 1
;;    pred:       3
  # _3 = PHI <_1(3)>
  # i_13 = PHI <i_43(3)>
  _42 = (float) i_13;
  _31 = _3 + _42;
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 5, loop depth 2
;;    pred:       3
  i_18 = i_43 + 1;
  ivtmp_5 = ivtmp_6 - 1;
  if (ivtmp_5 != 0)
    goto <bb 10>; [98.93%]
  else
    goto <bb 6>; [1.07%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       4
;;                5
  # value_4 = PHI <_3(4), -1.0e+0(5)>
  # prephitmp_8 = PHI <_31(4), -3.0e+0(5)>
L20:
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, prephitmp_8);
  nl_21 = nl_33 + 1;
  ivtmp_7 = ivtmp_32 - 1;
  if (ivtmp_7 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_33 = PHI <0(2), nl_21(9)>
  # ivtmp_32 = PHI <10000(2), ivtmp_7(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  # value_30 = PHI <value_4(6)>
  end_t_23 = mysecond ();
  clock_dif_24 = end_t_23 - start_t_12;
  printf ("S332\t %.3f \t\t", clock_dif_24);
  temp = value_30;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s341 (s341, funcdef_no=682, decl_uid=10411, cgraph_uid=682, symbol_order=703)

s341 ()
{
  int i;
  int D.19070;
  int i;
  int nl;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_25;
  unsigned int ivtmp_26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init.part.3 ("s341 ");
  start_t_13 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # j_29 = PHI <-1(7), j_2(10)>
  # i_30 = PHI <0(7), i_16(10)>
  # ivtmp_26 = PHI <32000(7), ivtmp_25(10)>
  _1 = b[i_30];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  j_14 = j_29 + 1;
  a[j_14] = _1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  # j_2 = PHI <j_14(4), j_29(3)>
  i_16 = i_30 + 1;
  ivtmp_25 = ivtmp_26 - 1;
  if (ivtmp_25 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_39 + 1;
  ivtmp_5 = ivtmp_4 - 1;
  if (ivtmp_5 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_39 = PHI <0(2), nl_18(9)>
  # ivtmp_4 = PHI <10000(2), ivtmp_5(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_13;
  printf ("S341\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s342 (s342, funcdef_no=683, decl_uid=10425, cgraph_uid=683, symbol_order=704)

s342 ()
{
  int i;
  int D.19088;
  int i;
  int nl;
  int j;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  unsigned int ivtmp_5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_26;
  unsigned int ivtmp_27;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init.part.3 ("s342 ");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # j_30 = PHI <-1(7), j_3(10)>
  # i_31 = PHI <0(7), i_17(10)>
  # ivtmp_27 = PHI <32000(7), ivtmp_26(10)>
  _1 = a[i_31];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  j_15 = j_30 + 1;
  _2 = b[j_15];
  a[i_31] = _2;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  # j_3 = PHI <j_15(4), j_30(3)>
  i_17 = i_31 + 1;
  ivtmp_26 = ivtmp_27 - 1;
  if (ivtmp_26 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_19 = nl_40 + 1;
  ivtmp_6 = ivtmp_5 - 1;
  if (ivtmp_6 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_40 = PHI <0(2), nl_19(9)>
  # ivtmp_5 = PHI <10000(2), ivtmp_6(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_21 = mysecond ();
  clock_dif_22 = end_t_21 - start_t_14;
  printf ("S342\t %.3f \t\t", clock_dif_22);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s343 (s343, funcdef_no=684, decl_uid=10439, cgraph_uid=684, symbol_order=705)

s343 ()
{
  int i;
  int D.19106;
  int j;
  int i;
  int nl;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  unsigned int ivtmp_6;
  unsigned int ivtmp_7;
  unsigned int ivtmp_33;
  unsigned int ivtmp_35;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init.part.3 ("s343 ");
  start_t_17 = mysecond ();
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 13, loop depth 3
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 3
;;    pred:       7
;;                13
  # k_38 = PHI <k_39(7), k_3(13)>
  # j_41 = PHI <0(7), j_21(13)>
  # ivtmp_43 = PHI <256(7), ivtmp_35(13)>
  _1 = bb[j_41][i_40];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 3
;;    pred:       3
  k_19 = k_38 + 1;
  _2 = aa[j_41][i_40];
  array[k_19] = _2;
;;    succ:       5

;;   basic block 5, loop depth 3
;;    pred:       4
;;                3
  # k_3 = PHI <k_19(4), k_38(3)>
  j_21 = j_41 + 1;
  ivtmp_35 = ivtmp_43 - 1;
  if (ivtmp_35 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       13
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  # k_45 = PHI <k_3(5)>
  i_22 = i_40 + 1;
  ivtmp_44 = ivtmp_6 - 1;
  if (ivtmp_44 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 2
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       9
;;                12
  # k_39 = PHI <-1(9), k_45(12)>
  # i_40 = PHI <0(9), i_22(12)>
  # ivtmp_6 = PHI <256(9), ivtmp_44(12)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 1
;;    pred:       6
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_24 = nl_47 + 1;
  ivtmp_7 = ivtmp_33 - 1;
  if (ivtmp_7 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 10>; [1.01%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       8
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       2
;;                11
  # nl_47 = PHI <0(2), nl_24(11)>
  # ivtmp_33 = PHI <390(2), ivtmp_7(11)>
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 0
;;    pred:       8
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_17;
  printf ("S343\t %.3f \t\t", clock_dif_27);
  check (0);
  return 0;
;;    succ:       EXIT

}



;; Function s351 (s351, funcdef_no=685, decl_uid=10457, cgraph_uid=685, symbol_order=706)

Merging blocks 5 and 9
s351 ()
{
  vector(4) float * vectp_a.3650;
  vector(4) float * vectp_a.3649;
  vector(4) float vect__4.3648;
  vector(4) float vect__3.3647;
  vector(4) float vect__2.3646;
  vector(4) float vect__2.3645;
  vector(4) float vect__2.3644;
  vector(4) float vect__2.3643;
  vector(4) float vect__2.3642;
  vector(4) float * vectp_b.3641;
  vector(4) float * vectp_b.3640;
  vector(4) float vect__1.3639;
  vector(4) float vect__1.3638;
  vector(4) float vect__1.3637;
  vector(4) float vect__1.3636;
  vector(4) float vect__1.3635;
  vector(4) float * vectp_a.3634;
  vector(4) float * vectp_a.3633;
  int i;
  int nl;
  float alpha;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  int _5;
  float _6;
  float _7;
  float _8;
  float _9;
  int _10;
  float _11;
  float _12;
  float _13;
  float _14;
  int _15;
  float _16;
  float _17;
  float _18;
  float _19;
  int _20;
  float _21;
  float _22;
  float _23;
  float _24;
  vector(4) float vect_cst__26;
  vector(4) float _27;
  vector(4) float vect_cst__28;
  vector(4) float _48;
  vector(4) float vect_cst__49;
  vector(4) float _50;
  vector(4) float vect_cst__51;
  vector(4) float _52;
  vector(4) float vect_cst__53;
  vector(4) float _58;
  unsigned int ivtmp_87;
  unsigned int ivtmp_88;
  unsigned int ivtmp_89;
  unsigned int ivtmp_90;
  unsigned int ivtmp_105;
  unsigned int ivtmp_106;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init ("s351 ");
  start_t_33 = mysecond ();
  alpha_34 = c[0];
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_55 = PHI <i_40(8), 0(5)>
  # ivtmp_90 = PHI <ivtmp_89(8), 6400(5)>
  # vectp_a.3633_86 = PHI <vectp_a.3633_79(8), &a(5)>
  # vectp_b.3640_69 = PHI <vectp_b.3640_68(8), &b(5)>
  # vectp_a.3649_94 = PHI <vectp_a.3649_95(8), &a(5)>
  # ivtmp_105 = PHI <ivtmp_106(8), 0(5)>
  _1 = a[i_55];
  _2 = b[i_55];
  _3 = _2 * alpha_34;
  _4 = _1 + _3;
  _5 = i_55 + 1;
  _6 = a[_5];
  _7 = b[_5];
  _8 = _7 * alpha_34;
  _9 = _6 + _8;
  _10 = i_55 + 2;
  _11 = a[_10];
  _12 = b[_10];
  _13 = _12 * alpha_34;
  _14 = _11 + _13;
  _15 = i_55 + 3;
  _16 = a[_15];
  _17 = b[_15];
  _18 = _17 * alpha_34;
  _19 = _16 + _18;
  _20 = i_55 + 4;
  vect__1.3635_78 = MEM[(float *)vectp_a.3633_86];
  vectp_a.3633_77 = vectp_a.3633_86 + 16;
  vect__1.3636_76 = MEM[(float *)vectp_a.3633_77];
  vectp_a.3633_75 = vectp_a.3633_77 + 16;
  vect__1.3637_74 = MEM[(float *)vectp_a.3633_75];
  vectp_a.3633_73 = vectp_a.3633_75 + 16;
  vect__1.3638_72 = MEM[(float *)vectp_a.3633_73];
  vectp_a.3633_71 = vectp_a.3633_73 + 16;
  vect__1.3639_70 = MEM[(float *)vectp_a.3633_71];
  _21 = a[_20];
  vect__2.3642_67 = MEM[(float *)vectp_b.3640_69];
  vectp_b.3640_66 = vectp_b.3640_69 + 16;
  vect__2.3643_65 = MEM[(float *)vectp_b.3640_66];
  vectp_b.3640_64 = vectp_b.3640_66 + 16;
  vect__2.3644_63 = MEM[(float *)vectp_b.3640_64];
  vectp_b.3640_62 = vectp_b.3640_64 + 16;
  vect__2.3645_61 = MEM[(float *)vectp_b.3640_62];
  vectp_b.3640_60 = vectp_b.3640_62 + 16;
  vect__2.3646_59 = MEM[(float *)vectp_b.3640_60];
  _22 = b[_20];
  vect__3.3647_25 = vect__2.3642_67 * vect_cst__26;
  vect__3.3647_85 = vect__2.3643_65 * vect_cst__28;
  vect__3.3647_84 = vect__2.3644_63 * vect_cst__49;
  vect__3.3647_83 = vect__2.3645_61 * vect_cst__51;
  vect__3.3647_82 = vect__2.3646_59 * vect_cst__53;
  _23 = _22 * alpha_34;
  vect__4.3648_81 = vect__1.3635_78 + vect__3.3647_25;
  vect__4.3648_80 = vect__1.3636_76 + vect__3.3647_85;
  vect__4.3648_91 = vect__1.3637_74 + vect__3.3647_84;
  vect__4.3648_92 = vect__1.3638_72 + vect__3.3647_83;
  vect__4.3648_93 = vect__1.3639_70 + vect__3.3647_82;
  _24 = _21 + _23;
  MEM[(float *)vectp_a.3649_94] = vect__4.3648_81;
  vectp_a.3649_97 = vectp_a.3649_94 + 16;
  MEM[(float *)vectp_a.3649_97] = vect__4.3648_80;
  vectp_a.3649_99 = vectp_a.3649_97 + 16;
  MEM[(float *)vectp_a.3649_99] = vect__4.3648_91;
  vectp_a.3649_101 = vectp_a.3649_99 + 16;
  MEM[(float *)vectp_a.3649_101] = vect__4.3648_92;
  vectp_a.3649_103 = vectp_a.3649_101 + 16;
  MEM[(float *)vectp_a.3649_103] = vect__4.3648_93;
  i_40 = i_55 + 5;
  ivtmp_89 = ivtmp_90 - 1;
  vectp_a.3633_79 = vectp_a.3633_71 + 16;
  vectp_b.3640_68 = vectp_b.3640_60 + 16;
  vectp_a.3649_95 = vectp_a.3649_103 + 16;
  ivtmp_106 = ivtmp_105 + 1;
  if (ivtmp_106 < 1600)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_42 = nl_54 + 1;
  ivtmp_87 = ivtmp_88 - 1;
  if (ivtmp_87 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_54 = PHI <0(2), nl_42(7)>
  # ivtmp_88 = PHI <80000(2), ivtmp_87(7)>
  _58 = {alpha_34, alpha_34, alpha_34, alpha_34};
  vect_cst__53 = _58;
  _52 = {alpha_34, alpha_34, alpha_34, alpha_34};
  vect_cst__51 = _52;
  _50 = {alpha_34, alpha_34, alpha_34, alpha_34};
  vect_cst__49 = _50;
  _48 = {alpha_34, alpha_34, alpha_34, alpha_34};
  vect_cst__28 = _48;
  _27 = {alpha_34, alpha_34, alpha_34, alpha_34};
  vect_cst__26 = _27;
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_44 = mysecond ();
  clock_dif_45 = end_t_44 - start_t_33;
  printf ("S351\t %.3f \t\t", clock_dif_45);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s1351 (s1351, funcdef_no=686, decl_uid=10471, cgraph_uid=686, symbol_order=707)

Merging blocks 5 and 9
s1351 ()
{
  vector(4) float * vectp_a.3672;
  vector(4) float * vectp_a.3671;
  vector(4) float vect__3.3670;
  vector(4) float vect__2.3669;
  vector(4) float * vectp_c.3668;
  vector(4) float * vectp_c.3667;
  vector(4) float vect__1.3666;
  vector(4) float * vectp_b.3665;
  vector(4) float * vectp_b.3664;
  int i;
  int D.19169;
  int i;
  float * restrict C;
  float * restrict B;
  float * restrict A;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_34;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init.part.3 ("s351 ");
  start_t_15 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # A_37 = PHI <A_17(8), &a(5)>
  # B_45 = PHI <B_18(8), &b(5)>
  # C_38 = PHI <C_19(8), &c(5)>
  # i_39 = PHI <i_20(8), 0(5)>
  # ivtmp_44 = PHI <ivtmp_43(8), 32000(5)>
  # vectp_b.3664_33 = PHI <vectp_b.3664_32(8), &b(5)>
  # vectp_c.3667_8 = PHI <vectp_c.3667_7(8), &c(5)>
  # vectp_a.3671_35 = PHI <vectp_a.3671_5(8), &a(5)>
  # ivtmp_41 = PHI <ivtmp_40(8), 0(5)>
  vect__1.3666_10 = MEM[(float *)vectp_b.3664_33];
  _1 = *B_45;
  vect__2.3669_6 = MEM[(float *)vectp_c.3667_8];
  _2 = *C_38;
  vect__3.3670_4 = vect__1.3666_10 + vect__2.3669_6;
  _3 = _1 + _2;
  MEM[(float *)vectp_a.3671_35] = vect__3.3670_4;
  A_17 = A_37 + 4;
  B_18 = B_45 + 4;
  C_19 = C_38 + 4;
  i_20 = i_39 + 1;
  ivtmp_43 = ivtmp_44 - 1;
  vectp_b.3664_32 = vectp_b.3664_33 + 16;
  vectp_c.3667_7 = vectp_c.3667_8 + 16;
  vectp_a.3671_5 = vectp_a.3671_35 + 16;
  ivtmp_40 = ivtmp_41 + 1;
  if (ivtmp_40 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_36 + 1;
  ivtmp_34 = ivtmp_42 - 1;
  if (ivtmp_34 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_36 = PHI <0(2), nl_22(7)>
  # ivtmp_42 = PHI <80000(2), ivtmp_34(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_15;
  printf ("S1351\t %.3f \t\t", clock_dif_25);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s352 (s352, funcdef_no=687, decl_uid=10487, cgraph_uid=687, symbol_order=708)

s352 ()
{
  int i;
  int nl;
  float dot;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  int _5;
  float _6;
  float _8;
  float _9;
  int _11;
  float _12;
  float _14;
  float _15;
  int _17;
  float _18;
  float _19;
  float _20;
  int _22;
  float _23;
  float _24;
  float _25;
  float _27;
  float _29;
  float _49;
  float _50;
  unsigned int ivtmp_141;
  unsigned int ivtmp_142;
  unsigned int ivtmp_143;
  unsigned int ivtmp_144;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init ("s352 ");
  start_t_35 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # dot_54 = PHI <0.0(5), dot_37(8)>
  # i_56 = PHI <0(5), i_38(8)>
  # ivtmp_144 = PHI <6400(5), ivtmp_143(8)>
  _1 = a[i_56];
  _2 = b[i_56];
  _3 = _1 * _2;
  _49 = _3 + dot_54;
  _5 = i_56 + 1;
  _6 = a[_5];
  _8 = b[_5];
  _9 = _6 * _8;
  _11 = i_56 + 2;
  _12 = a[_11];
  _14 = b[_11];
  _15 = _12 * _14;
  _27 = _9 + _15;
  _17 = i_56 + 3;
  _18 = a[_17];
  _19 = b[_17];
  _20 = _18 * _19;
  _22 = i_56 + 4;
  _23 = a[_22];
  _24 = b[_22];
  _25 = _23 * _24;
  _29 = _20 + _25;
  _50 = _27 + _29;
  dot_37 = _50 + _49;
  i_38 = i_56 + 5;
  ivtmp_143 = ivtmp_144 - 1;
  if (ivtmp_143 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # dot_146 = PHI <dot_37(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, dot_146);
  nl_40 = nl_55 + 1;
  ivtmp_141 = ivtmp_142 - 1;
  if (ivtmp_141 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_55 = PHI <0(2), nl_40(7)>
  # ivtmp_142 = PHI <80000(2), ivtmp_141(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # dot_145 = PHI <dot_146(4)>
  end_t_42 = mysecond ();
  clock_dif_43 = end_t_42 - start_t_35;
  printf ("S352\t %.3f \t\t", clock_dif_43);
  temp = dot_145;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s353 (s353, funcdef_no=688, decl_uid=10502, cgraph_uid=688, symbol_order=709)

s353 (int * restrict ip)
{
  int i;
  int nl;
  float alpha;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  long unsigned int _2;
  long unsigned int _3;
  int * _4;
  int _5;
  float _6;
  float _7;
  float _8;
  int _9;
  float _10;
  sizetype _11;
  sizetype _12;
  int * _13;
  int _14;
  float _15;
  float _16;
  float _17;
  int _18;
  float _19;
  sizetype _20;
  sizetype _21;
  int * _22;
  int _23;
  float _24;
  float _25;
  float _26;
  int _27;
  float _28;
  sizetype _29;
  sizetype _30;
  int * _31;
  int _32;
  float _33;
  float _34;
  float _35;
  int _36;
  float _37;
  sizetype _38;
  sizetype _39;
  int * _40;
  int _41;
  float _42;
  float _43;
  float _44;
  unsigned int ivtmp_169;
  unsigned int ivtmp_170;
  unsigned int ivtmp_171;
  unsigned int ivtmp_172;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mysecond ();
  init ("s353 ");
  start_t_53 = mysecond ();
  alpha_54 = c[0];
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_76 = PHI <0(5), i_61(8)>
  # ivtmp_172 = PHI <6400(5), ivtmp_171(8)>
  _1 = a[i_76];
  _2 = (long unsigned int) i_76;
  _3 = _2 * 4;
  _4 = ip_55(D) + _3;
  _5 = *_4;
  _6 = b[_5];
  _7 = _6 * alpha_54;
  _8 = _1 + _7;
  a[i_76] = _8;
  _9 = i_76 + 1;
  _10 = a[_9];
  _11 = _2 + 1;
  _12 = _11 * 4;
  _13 = ip_55(D) + _12;
  _14 = *_13;
  _15 = b[_14];
  _16 = _15 * alpha_54;
  _17 = _10 + _16;
  a[_9] = _17;
  _18 = i_76 + 2;
  _19 = a[_18];
  _20 = _2 + 2;
  _21 = _20 * 4;
  _22 = ip_55(D) + _21;
  _23 = *_22;
  _24 = b[_23];
  _25 = _24 * alpha_54;
  _26 = _19 + _25;
  a[_18] = _26;
  _27 = i_76 + 3;
  _28 = a[_27];
  _29 = _2 + 3;
  _30 = _29 * 4;
  _31 = ip_55(D) + _30;
  _32 = *_31;
  _33 = b[_32];
  _34 = _33 * alpha_54;
  _35 = _28 + _34;
  a[_27] = _35;
  _36 = i_76 + 4;
  _37 = a[_36];
  _38 = _2 + 4;
  _39 = _38 * 4;
  _40 = ip_55(D) + _39;
  _41 = *_40;
  _42 = b[_41];
  _43 = _42 * alpha_54;
  _44 = _37 + _43;
  a[_36] = _44;
  i_61 = i_76 + 5;
  ivtmp_171 = ivtmp_172 - 1;
  if (ivtmp_171 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_63 = nl_75 + 1;
  ivtmp_169 = ivtmp_170 - 1;
  if (ivtmp_169 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_75 = PHI <0(2), nl_63(7)>
  # ivtmp_170 = PHI <10000(2), ivtmp_169(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_65 = mysecond ();
  clock_dif_66 = end_t_65 - start_t_53;
  printf ("S353\t %.3f \t\t", clock_dif_66);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s421 (s421, funcdef_no=689, decl_uid=10516, cgraph_uid=689, symbol_order=710)

Removing basic block 16
Merging blocks 2 and 21
Merging blocks 5 and 20
Merging blocks 8 and 15
s421 ()
{
  vector(4) float * vectp_xx.3740;
  vector(4) float * vectp_xx.3739;
  vector(4) float * vectp_xx.3738;
  vector(4) float * vectp_xx.3737;
  vector(4) float vect__11.3736;
  vector(4) float vect__8.3735;
  vector(4) float * vectp_a.3734;
  vector(4) float * vectp_a.3733;
  vector(4) float vect__7.3732;
  vector(4) float * vectp_xx.3731;
  vector(4) float * vectp_xx.3730;
  unsigned int tmp.3729;
  int tmp.3728;
  float vect__18.3727;
  float stmp__18.3726;
  vector(4) float vect__18.3725;
  vector(4) float vect__16.3724;
  vector(4) float * vectp_xx.3723;
  vector(4) float * vectp_xx.3722;
  vector(4) float vect__18.3721;
  float temp_lsm.3720;
  int i;
  int i;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float * xx.140_1;
  float * xx.141_2;
  sizetype _3;
  sizetype _4;
  sizetype _5;
  float * _6;
  float _7;
  float _8;
  long unsigned int _9;
  float * _10;
  float _11;
  float * xx.144_12;
  long unsigned int _13;
  long unsigned int _14;
  float * _15;
  float _16;
  unsigned int ivtmp_17;
  float _18;
  unsigned int ivtmp_19;
  float * _22;
  long unsigned int _23;
  float _24;
  float _39;
  float * _42;
  long unsigned int _43;
  long unsigned int _44;
  float * _45;
  sizetype _47;
  sizetype _49;
  sizetype _50;
  unsigned int ivtmp_51;
  vector(4) float vect_cst__55;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  unsigned int ivtmp_75;
  unsigned int ivtmp_76;
  unsigned int ivtmp_77;
  unsigned int ivtmp_82;
  unsigned int ivtmp_90;
  unsigned int ivtmp_91;
  unsigned int ivtmp_94;
  float _95;
  unsigned int ivtmp_96;
  unsigned int ivtmp_97;
  float _98;
  unsigned int ivtmp_102;
  unsigned int ivtmp_103;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  xx.140_1 = xx;
  vect_cst__55 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       14
;;                2
  # i_67 = PHI <i_46(14), 0(2)>
  # ivtmp_76 = PHI <ivtmp_75(14), 32000(2)>
  # vectp_xx.3739_99 = PHI <vectp_xx.3739_100(14), xx.140_1(2)>
  # ivtmp_102 = PHI <ivtmp_103(14), 0(2)>
  _43 = (long unsigned int) i_67;
  _44 = _43 * 4;
  _45 = xx.140_1 + _44;
  MEM[(float *)vectp_xx.3739_99] = vect_cst__55;
  i_46 = i_67 + 1;
  ivtmp_75 = ivtmp_76 - 1;
  vectp_xx.3739_100 = vectp_xx.3739_99 + 16;
  ivtmp_103 = ivtmp_102 + 1;
  if (ivtmp_103 < 8000)
    goto <bb 14>; [83.33%]
  else
    goto <bb 4>; [16.67%]
;;    succ:       14
;;                4

;;   basic block 14, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  init ("s421 ");
  start_t_28 = mysecond ();
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       4
;;                12
  # nl_61 = PHI <0(4), nl_33(12)>
  # ivtmp_82 = PHI <40000(4), ivtmp_77(12)>
  xx.141_2 = xx;
  yy = xx.141_2;
  vectp_xx.3731_84 = xx.141_2 + 4;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       13
;;                5
  # i_62 = PHI <i_31(13), 0(5)>
  # ivtmp_91 = PHI <ivtmp_90(13), 31999(5)>
  # vectp_xx.3730_87 = PHI <vectp_xx.3730_88(13), vectp_xx.3731_84(5)>
  # vectp_a.3733_86 = PHI <vectp_a.3733_83(13), &a(5)>
  # vectp_xx.3737_79 = PHI <vectp_xx.3737_80(13), xx.141_2(5)>
  # ivtmp_17 = PHI <ivtmp_19(13), 0(5)>
  _3 = (sizetype) i_62;
  _4 = _3 + 1;
  _5 = _4 * 4;
  _6 = xx.141_2 + _5;
  vect__7.3732_85 = MEM[(float *)vectp_xx.3730_87];
  _7 = *_6;
  vect__8.3735_81 = MEM[(float *)vectp_a.3733_86];
  _8 = a[i_62];
  _9 = _3 * 4;
  _10 = xx.141_2 + _9;
  vect__11.3736_78 = vect__7.3732_85 + vect__8.3735_81;
  _11 = _7 + _8;
  MEM[(float *)vectp_xx.3737_79] = vect__11.3736_78;
  i_31 = i_62 + 1;
  ivtmp_90 = ivtmp_91 - 1;
  vectp_xx.3730_88 = vectp_xx.3730_87 + 16;
  vectp_a.3733_83 = vectp_a.3733_86 + 16;
  vectp_xx.3737_80 = vectp_xx.3737_79 + 16;
  ivtmp_19 = ivtmp_17 + 1;
  if (ivtmp_19 < 7999)
    goto <bb 13>; [96.00%]
  else
    goto <bb 17>; [4.00%]
;;    succ:       13
;;                17

;;   basic block 13, loop depth 2
;;    pred:       6
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 17, loop depth 1
;;    pred:       6
;;    succ:       18

;;   basic block 18, loop depth 2
;;    pred:       17
;;                19
  # i_54 = PHI <31996(17), i_93(19)>
  # ivtmp_51 = PHI <3(17), ivtmp_94(19)>
  _50 = (sizetype) i_54;
  _49 = _50 + 1;
  _47 = _49 * 4;
  _42 = xx.141_2 + _47;
  _39 = *_42;
  _24 = a[i_54];
  _23 = _50 * 4;
  _22 = xx.141_2 + _23;
  _95 = _39 + _24;
  *_22 = _95;
  i_93 = i_54 + 1;
  ivtmp_94 = ivtmp_51 - 1;
  if (ivtmp_94 != 0)
    goto <bb 19>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       19
;;                7

;;   basic block 19, loop depth 2
;;    pred:       18
  goto <bb 18>; [100.00%]
;;    succ:       18

;;   basic block 7, loop depth 1
;;    pred:       18
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_33 = nl_61 + 1;
  ivtmp_77 = ivtmp_82 - 1;
  if (ivtmp_77 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 1
;;    pred:       7
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       7
  end_t_35 = mysecond ();
  clock_dif_36 = end_t_35 - start_t_28;
  printf ("S421\t %.3f \t\t", clock_dif_36);
  temp = 0.0;
  xx.144_12 = xx;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       11
;;                8
  # i_63 = PHI <i_40(11), 0(8)>
  # temp_lsm.3720_21 = PHI <_18(11), 0.0(8)>
  # ivtmp_97 = PHI <ivtmp_96(11), 32000(8)>
  # vect__18.3721_74 = PHI <vect__18.3725_70(11), { 0.0, 0.0, 0.0, 0.0 }(8)>
  # vectp_xx.3722_73 = PHI <vectp_xx.3722_72(11), xx.144_12(8)>
  # ivtmp_58 = PHI <ivtmp_57(11), 0(8)>
  _13 = (long unsigned int) i_63;
  _14 = _13 * 4;
  _15 = xx.144_12 + _14;
  vect__16.3724_71 = MEM[(float *)vectp_xx.3722_73];
  _16 = *_15;
  vect__18.3725_70 = vect__16.3724_71 + vect__18.3721_74;
  _18 = _16 + temp_lsm.3720_21;
  i_40 = i_63 + 1;
  ivtmp_96 = ivtmp_97 - 1;
  vectp_xx.3722_72 = vectp_xx.3722_73 + 16;
  ivtmp_57 = ivtmp_58 + 1;
  if (ivtmp_57 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       9
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 10, loop depth 0
;;    pred:       9
  # _98 = PHI <_18(9)>
  # vect__18.3725_69 = PHI <vect__18.3725_70(9)>
  stmp__18.3726_60 = REDUC_PLUS (vect__18.3725_69);
  vect__18.3727_59 = stmp__18.3726_60 + 0.0;
  temp = vect__18.3727_59;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s1421 (s1421, funcdef_no=690, decl_uid=10533, cgraph_uid=690, symbol_order=711)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

i_69 -> { i_28 }
ivtmp_70 -> { ivtmp_73 }
.MEM_71 -> { .MEM_27 }
.MEM_72 -> { .MEM_27 }
_76 -> { _8 }
_77 -> { _5 }
_78 -> { _6 }
_79 -> { _7 }
_80 -> { _4 }
.MEM_82 -> { .MEM_61 }
ivtmp_83 -> { ivtmp_81 }
_84 -> { _3 }
i_85 -> { i_59 }
Incremental SSA update started at block: 18
Number of blocks in CFG: 22
Number of blocks to update: 8 ( 36%)


Merging blocks 2 and 23
Merging blocks 8 and 18
Merging blocks 9 and 15
Removing basic block 19
Removing basic block 21
s1421 ()
{
  vector(4) float * vectp_xx.3786;
  vector(4) float * vectp_xx.3785;
  vector(4) float * vectp_b.3784;
  vector(4) float * vectp_b.3783;
  vector(4) float vect__8.3782;
  vector(4) float vect__7.3781;
  vector(4) float * vectp_a.3780;
  vector(4) float * vectp_a.3779;
  vector(4) float vect__6.3778;
  vector(4) float * vectp_prephitmp.3777;
  vector(4) float * vectp_prephitmp.3776;
  float vect__15.3775;
  float stmp__15.3774;
  vector(4) float vect__15.3773;
  vector(4) float vect__13.3772;
  vector(4) float * vectp_xx.3771;
  vector(4) float * vectp_xx.3770;
  vector(4) float vect__15.3769;
  float temp_lsm.3768;
  int i;
  int i;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float * xx.146_1;
  long unsigned int _3;
  long unsigned int _4;
  float * _5;
  float _6;
  float _7;
  float _8;
  float * xx.148_9;
  long unsigned int _10;
  long unsigned int _11;
  float * _12;
  float _13;
  float _15;
  _Bool _19;
  _Bool _20;
  float * _21;
  _Bool _36;
  float[32000] * _39;
  long unsigned int _40;
  long unsigned int _41;
  float * _42;
  unsigned int ivtmp_44;
  unsigned int ivtmp_46;
  unsigned int ivtmp_57;
  unsigned int ivtmp_66;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;
  unsigned int ivtmp_70;
  unsigned int ivtmp_73;
  float * pretmp_74;
  float * prephitmp_75;
  float _76;
  float * _77;
  float _78;
  float _79;
  long unsigned int _80;
  unsigned int ivtmp_81;
  unsigned int ivtmp_83;
  long unsigned int _84;
  unsigned int ivtmp_86;
  unsigned int ivtmp_87;
  float _88;
  unsigned int ivtmp_94;
  unsigned int ivtmp_95;
  vector(4) float vect_cst__96;
  unsigned int ivtmp_100;
  unsigned int ivtmp_101;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  xx.146_1 = xx;
  vect_cst__96 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       14
;;                2
  # i_64 = PHI <i_43(14), 0(2)>
  # ivtmp_66 = PHI <ivtmp_57(14), 32000(2)>
  # vectp_xx.3785_97 = PHI <vectp_xx.3785_98(14), xx.146_1(2)>
  # ivtmp_100 = PHI <ivtmp_101(14), 0(2)>
  _40 = (long unsigned int) i_64;
  _41 = _40 * 4;
  _42 = xx.146_1 + _41;
  MEM[(float *)vectp_xx.3785_97] = vect_cst__96;
  i_43 = i_64 + 1;
  ivtmp_57 = ivtmp_66 - 1;
  vectp_xx.3785_98 = vectp_xx.3785_97 + 16;
  ivtmp_101 = ivtmp_100 + 1;
  if (ivtmp_101 < 8000)
    goto <bb 14>; [83.33%]
  else
    goto <bb 4>; [16.67%]
;;    succ:       14
;;                4

;;   basic block 14, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  init ("s421 ");
  start_t_25 = mysecond ();
  xx = &b[16000];
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 13, loop depth 2
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 20, loop depth 1
;;    pred:       8
;;    succ:       16

;;   basic block 16, loop depth 2
;;    pred:       17
;;                20
  # i_85 = PHI <i_69(17), 0(20)>
  # ivtmp_83 = PHI <ivtmp_70(17), 16000(20)>
  _84 = (long unsigned int) i_85;
  _80 = _84 * 4;
  _77 = prephitmp_75 + _80;
  _78 = *_77;
  _79 = a[i_85];
  _76 = _78 + _79;
  b[i_85] = _76;
  i_69 = i_85 + 1;
  ivtmp_70 = ivtmp_83 - 1;
  if (ivtmp_70 != 0)
    goto <bb 17>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       17
;;                6

;;   basic block 17, loop depth 2
;;    pred:       16
  goto <bb 16>; [100.00%]
;;    succ:       16

;;   basic block 22, loop depth 1
;;    pred:       8
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       13
;;                22
  # i_59 = PHI <i_28(13), 0(22)>
  # ivtmp_81 = PHI <ivtmp_73(13), 16000(22)>
  # vectp_prephitmp.3776_2 = PHI <vectp_prephitmp.3776_50(13), prephitmp_75(22)>
  # vectp_a.3779_52 = PHI <vectp_a.3779_17(13), &a(22)>
  # vectp_b.3783_91 = PHI <vectp_b.3783_92(13), &b(22)>
  # ivtmp_94 = PHI <ivtmp_95(13), 0(22)>
  _3 = (long unsigned int) i_59;
  _4 = _3 * 4;
  _5 = prephitmp_75 + _4;
  vect__6.3778_14 = MEM[(float *)vectp_prephitmp.3776_2];
  _6 = *_5;
  vect__7.3781_89 = MEM[(float *)vectp_a.3779_52];
  _7 = a[i_59];
  vect__8.3782_90 = vect__6.3778_14 + vect__7.3781_89;
  _8 = _6 + _7;
  MEM[(float *)vectp_b.3783_91] = vect__8.3782_90;
  i_28 = i_59 + 1;
  ivtmp_73 = ivtmp_81 - 1;
  vectp_prephitmp.3776_50 = vectp_prephitmp.3776_2 + 16;
  vectp_a.3779_17 = vectp_a.3779_52 + 16;
  vectp_b.3783_92 = vectp_b.3783_91 + 16;
  ivtmp_95 = ivtmp_94 + 1;
  if (ivtmp_95 < 4000)
    goto <bb 13>; [96.00%]
  else
    goto <bb 6>; [4.00%]
;;    succ:       13
;;                6

;;   basic block 6, loop depth 1
;;    pred:       16
;;                5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_30 = nl_58 + 1;
  ivtmp_67 = ivtmp_68 - 1;
  if (ivtmp_67 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       7
;;                9

;;   basic block 7, loop depth 1
;;    pred:       6
  pretmp_74 = xx;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       4
;;                7
  # nl_58 = PHI <0(4), nl_30(7)>
  # prephitmp_75 = PHI <&b[16000](4), pretmp_74(7)>
  # ivtmp_68 = PHI <80000(4), ivtmp_67(7)>
  _39 = &b + 16;
  _36 = _39 <= prephitmp_75;
  _21 = prephitmp_75 + 16;
  _20 = _21 <= &b;
  _19 = _20 | _36;
  if (_19 != 0)
    goto <bb 22>; [80.00%]
  else
    goto <bb 20>; [20.00%]
;;    succ:       20
;;                22

;;   basic block 9, loop depth 0
;;    pred:       6
  end_t_32 = mysecond ();
  clock_dif_33 = end_t_32 - start_t_25;
  printf ("S1421\t %.3f \t\t", clock_dif_33);
  temp = 0.0;
  xx.148_9 = xx;
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       12
;;                9
  # i_60 = PHI <i_37(12), 0(9)>
  # temp_lsm.3768_18 = PHI <_15(12), 0.0(9)>
  # ivtmp_87 = PHI <ivtmp_86(12), 16000(9)>
  # vect__15.3769_56 = PHI <vect__15.3773_51(12), { 0.0, 0.0, 0.0, 0.0 }(9)>
  # vectp_xx.3770_55 = PHI <vectp_xx.3770_54(12), xx.148_9(9)>
  # ivtmp_46 = PHI <ivtmp_44(12), 0(9)>
  _10 = (long unsigned int) i_60;
  _11 = _10 * 4;
  _12 = xx.148_9 + _11;
  vect__13.3772_53 = MEM[(float *)vectp_xx.3770_55];
  _13 = *_12;
  vect__15.3773_51 = vect__13.3772_53 + vect__15.3769_56;
  _15 = _13 + temp_lsm.3768_18;
  i_37 = i_60 + 1;
  ivtmp_86 = ivtmp_87 - 1;
  vectp_xx.3770_54 = vectp_xx.3770_55 + 16;
  ivtmp_44 = ivtmp_46 + 1;
  if (ivtmp_44 < 4000)
    goto <bb 12>; [96.00%]
  else
    goto <bb 11>; [4.00%]
;;    succ:       12
;;                11

;;   basic block 12, loop depth 1
;;    pred:       10
  goto <bb 10>; [100.00%]
;;    succ:       10

;;   basic block 11, loop depth 0
;;    pred:       10
  # _88 = PHI <_15(10)>
  # vect__15.3773_49 = PHI <vect__15.3773_51(10)>
  stmp__15.3774_48 = REDUC_PLUS (vect__15.3773_49);
  vect__15.3775_47 = stmp__15.3774_48 + 0.0;
  temp = vect__15.3775_47;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s422 (s422, funcdef_no=691, decl_uid=10550, cgraph_uid=691, symbol_order=712)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_19 -> { _3 }
_20 -> { _2 }
_21 -> { _1 }
ivtmp_36 -> { ivtmp_79 }
.MEM_39 -> { .MEM_61 }
i_44 -> { i_59 }
i_75 -> { i_28 }
ivtmp_76 -> { ivtmp_72 }
.MEM_77 -> { .MEM_27 }
.MEM_78 -> { .MEM_27 }
_80 -> { _6 }
_81 -> { _7 }
_82 -> { _8 }
_83 -> { _5 }
Incremental SSA update started at block: 18
Number of blocks in CFG: 22
Number of blocks to update: 8 ( 36%)


Merging blocks 7 and 18
Merging blocks 8 and 15
Removing basic block 19
Removing basic block 21
s422 ()
{
  vector(4) float * vectp_xx.3845;
  vector(4) float * vectp_xx.3844;
  vector(4) float vect__8.3843;
  vector(4) float vect__3.3842;
  vector(4) float * vectp_a.3841;
  vector(4) float * vectp_a.3840;
  vector(4) float vect__2.3839;
  vector(4) float * vectp_array.3838;
  vector(4) float * vectp_array.3837;
  float vect__15.3836;
  float stmp__15.3835;
  vector(4) float vect__15.3834;
  vector(4) float vect__13.3833;
  vector(4) float * vectp_xx.3832;
  vector(4) float * vectp_xx.3831;
  vector(4) float vect__15.3830;
  float temp_lsm.3829;
  int i;
  int i;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _2;
  float _3;
  float * xx.151_4;
  long unsigned int _5;
  long unsigned int _6;
  float * _7;
  float _8;
  float * xx.152_9;
  long unsigned int _10;
  long unsigned int _11;
  float * _12;
  float _13;
  float _15;
  float _19;
  float _20;
  int _21;
  unsigned int ivtmp_36;
  _Bool _46;
  _Bool _47;
  float[65536] * _48;
  float * _49;
  _Bool _51;
  float[65536] * _53;
  unsigned int ivtmp_54;
  unsigned int ivtmp_56;
  unsigned int ivtmp_66;
  unsigned int ivtmp_67;
  unsigned int ivtmp_72;
  unsigned int ivtmp_76;
  unsigned int ivtmp_79;
  long unsigned int _80;
  float * _81;
  float _82;
  long unsigned int _83;
  unsigned int ivtmp_84;
  unsigned int ivtmp_85;
  float _86;
  unsigned int ivtmp_88;
  unsigned int ivtmp_89;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  xx = &MEM[(void *)&array + 16B];
  __builtin_memset (&MEM[(void *)&array + 16B], 0, 128000);
  init ("s422 ");
  start_t_26 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 13, loop depth 2
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 20, loop depth 1
;;    pred:       7
;;    succ:       16

;;   basic block 16, loop depth 2
;;    pred:       17
;;                20
  # i_44 = PHI <i_75(17), 0(20)>
  # ivtmp_36 = PHI <ivtmp_76(17), 32000(20)>
  _21 = i_44 + 8;
  _20 = array[_21];
  _19 = a[i_44];
  _83 = (long unsigned int) i_44;
  _80 = _83 * 4;
  _81 = xx.151_4 + _80;
  _82 = _20 + _19;
  *_81 = _82;
  i_75 = i_44 + 1;
  ivtmp_76 = ivtmp_36 - 1;
  if (ivtmp_76 != 0)
    goto <bb 17>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       17
;;                6

;;   basic block 17, loop depth 2
;;    pred:       16
  goto <bb 16>; [100.00%]
;;    succ:       16

;;   basic block 22, loop depth 1
;;    pred:       7
  vectp_array.3838_74 = &array + 32;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       13
;;                22
  # i_59 = PHI <i_28(13), 0(22)>
  # ivtmp_79 = PHI <ivtmp_72(13), 32000(22)>
  # vectp_array.3837_73 = PHI <vectp_array.3837_71(13), vectp_array.3838_74(22)>
  # vectp_a.3840_69 = PHI <vectp_a.3840_70(13), &a(22)>
  # vectp_xx.3844_52 = PHI <vectp_xx.3844_17(13), xx.151_4(22)>
  # ivtmp_88 = PHI <ivtmp_89(13), 0(22)>
  _1 = i_59 + 8;
  vect__2.3839_68 = MEM[(float *)vectp_array.3837_73];
  _2 = array[_1];
  vect__3.3842_50 = MEM[(float *)vectp_a.3840_69];
  _3 = a[i_59];
  _5 = (long unsigned int) i_59;
  _6 = _5 * 4;
  _7 = xx.151_4 + _6;
  vect__8.3843_14 = vect__2.3839_68 + vect__3.3842_50;
  _8 = _2 + _3;
  MEM[(float *)vectp_xx.3844_52] = vect__8.3843_14;
  i_28 = i_59 + 1;
  ivtmp_72 = ivtmp_79 - 1;
  vectp_array.3837_71 = vectp_array.3837_73 + 16;
  vectp_a.3840_70 = vectp_a.3840_69 + 16;
  vectp_xx.3844_17 = vectp_xx.3844_52 + 16;
  ivtmp_89 = ivtmp_88 + 1;
  if (ivtmp_89 < 8000)
    goto <bb 13>; [96.00%]
  else
    goto <bb 6>; [4.00%]
;;    succ:       13
;;                6

;;   basic block 6, loop depth 1
;;    pred:       16
;;                5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_30 = nl_58 + 1;
  ivtmp_66 = ivtmp_67 - 1;
  if (ivtmp_66 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                12
  # nl_58 = PHI <0(2), nl_30(12)>
  # ivtmp_67 = PHI <80000(2), ivtmp_66(12)>
  xx.151_4 = xx;
  _53 = &array + 48;
  _51 = xx.151_4 >= _53;
  _49 = xx.151_4 + 16;
  _48 = &array + 32;
  _47 = _48 >= _49;
  _46 = _47 | _51;
  if (_46 != 0)
    goto <bb 22>; [80.00%]
  else
    goto <bb 20>; [20.00%]
;;    succ:       20
;;                22

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_32 = mysecond ();
  clock_dif_33 = end_t_32 - start_t_26;
  printf ("S422\t %.3f \t\t", clock_dif_33);
  temp = 0.0;
  xx.152_9 = xx;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       11
;;                8
  # i_60 = PHI <i_37(11), 0(8)>
  # temp_lsm.3829_18 = PHI <_15(11), 0.0(8)>
  # ivtmp_85 = PHI <ivtmp_84(11), 32000(8)>
  # vect__15.3830_57 = PHI <vect__15.3834_41(11), { 0.0, 0.0, 0.0, 0.0 }(8)>
  # vectp_xx.3831_65 = PHI <vectp_xx.3831_64(11), xx.152_9(8)>
  # ivtmp_56 = PHI <ivtmp_54(11), 0(8)>
  _10 = (long unsigned int) i_60;
  _11 = _10 * 4;
  _12 = xx.152_9 + _11;
  vect__13.3833_40 = MEM[(float *)vectp_xx.3831_65];
  _13 = *_12;
  vect__15.3834_41 = vect__13.3833_40 + vect__15.3830_57;
  _15 = _13 + temp_lsm.3829_18;
  i_37 = i_60 + 1;
  ivtmp_84 = ivtmp_85 - 1;
  vectp_xx.3831_64 = vectp_xx.3831_65 + 16;
  ivtmp_54 = ivtmp_56 + 1;
  if (ivtmp_54 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       9
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 10, loop depth 0
;;    pred:       9
  # _86 = PHI <_15(9)>
  # vect__15.3834_42 = PHI <vect__15.3834_41(9)>
  stmp__15.3835_45 = REDUC_PLUS (vect__15.3834_42);
  vect__15.3836_43 = stmp__15.3835_45 + 0.0;
  temp = vect__15.3836_43;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s423 (s423, funcdef_no=692, decl_uid=10567, cgraph_uid=692, symbol_order=713)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_10 -> { _5 }
_13 -> { _7 }
_45 -> { _4 }
_47 -> { _6 }
ivtmp_62 -> { ivtmp_61 }
_63 -> { _2 }
_64 -> { _3 }
.MEM_65 -> { .MEM_56 }
i_67 -> { i_54 }
_75 -> { _8 }
.MEM_76 -> { .MEM_23 }
ivtmp_77 -> { ivtmp_52 }
.MEM_78 -> { .MEM_23 }
Incremental SSA update started at block: 18
Number of blocks in CFG: 22
Number of blocks to update: 8 ( 36%)


Removing basic block 22
Merging blocks 2 and 27
Merging blocks 7 and 18
Merging blocks 8 and 15
Removing basic block 19
s423 ()
{
  vector(4) float * vectp_array.3899;
  vector(4) float * vectp_array.3898;
  vector(4) float * vectp_array.3897;
  vector(4) float * vectp_array.3896;
  vector(4) float vect__8.3895;
  vector(4) float vect__6.3894;
  vector(4) float * vectp_a.3893;
  vector(4) float * vectp_a.3892;
  vector(4) float vect__5.3891;
  vector(4) float * vectp_xx.3890;
  vector(4) float * vectp_xx.3889;
  unsigned int tmp.3888;
  int tmp.3887;
  float vect__11.3886;
  float stmp__11.3885;
  vector(4) float vect__11.3884;
  vector(4) float vect__9.3883;
  vector(4) float * vectp_array.3882;
  vector(4) float * vectp_array.3881;
  vector(4) float vect__11.3880;
  float temp_lsm.3879;
  int i;
  int i;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float * xx.155_1;
  long unsigned int _2;
  long unsigned int _3;
  float * _4;
  float _5;
  float _6;
  int _7;
  float _8;
  float _9;
  float _10;
  float _11;
  int _13;
  float[65536] * _15;
  unsigned int ivtmp_16;
  unsigned int ivtmp_17;
  long unsigned int _35;
  long unsigned int _36;
  float * _37;
  float * _45;
  float _47;
  unsigned int ivtmp_48;
  unsigned int ivtmp_49;
  unsigned int ivtmp_50;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;
  long unsigned int _63;
  long unsigned int _64;
  unsigned int ivtmp_66;
  float[65536] * _68;
  _Bool _69;
  _Bool _70;
  float * _71;
  unsigned int ivtmp_72;
  _Bool _73;
  float _74;
  float _75;
  unsigned int ivtmp_77;
  unsigned int ivtmp_82;
  long unsigned int _83;
  long unsigned int _84;
  float * _85;
  float _86;
  float _87;
  int _88;
  float _89;
  unsigned int ivtmp_91;
  unsigned int ivtmp_104;
  unsigned int ivtmp_105;
  vector(4) float vect_cst__106;
  unsigned int ivtmp_111;
  unsigned int ivtmp_112;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  xx = &MEM[(void *)&array + 256B];
  vect_cst__106 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
  vectp_array.3899_107 = &array + 256;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       14
;;                2
  # i_59 = PHI <i_38(14), 0(2)>
  # ivtmp_49 = PHI <ivtmp_48(14), 32000(2)>
  # vectp_array.3898_108 = PHI <vectp_array.3898_109(14), vectp_array.3899_107(2)>
  # ivtmp_111 = PHI <ivtmp_112(14), 0(2)>
  _35 = (long unsigned int) i_59;
  _36 = _35 * 4;
  _37 = &MEM[(void *)&array + 256B] + _36;
  MEM[(float *)vectp_array.3898_108] = vect_cst__106;
  i_38 = i_59 + 1;
  ivtmp_48 = ivtmp_49 - 1;
  vectp_array.3898_109 = vectp_array.3898_108 + 16;
  ivtmp_112 = ivtmp_111 + 1;
  if (ivtmp_112 < 8000)
    goto <bb 14>; [83.33%]
  else
    goto <bb 4>; [16.67%]
;;    succ:       14
;;                4

;;   basic block 14, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 4, loop depth 0
;;    pred:       3
  init ("s423 ");
  start_t_22 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 13, loop depth 2
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 23, loop depth 1
;;    pred:       5
;;    succ:       24

;;   basic block 24, loop depth 2
;;    pred:       23
;;                25
  # i_80 = PHI <31996(23), _88(25)>
  # ivtmp_82 = PHI <3(23), ivtmp_91(25)>
  _83 = (long unsigned int) i_80;
  _84 = _83 * 4;
  _85 = xx.155_1 + _84;
  _86 = *_85;
  _87 = a[i_80];
  _88 = i_80 + 1;
  _89 = _86 + _87;
  array[_88] = _89;
  ivtmp_91 = ivtmp_82 - 1;
  if (ivtmp_91 != 0)
    goto <bb 25>; [98.99%]
  else
    goto <bb 21>; [1.01%]
;;    succ:       25
;;                21

;;   basic block 25, loop depth 2
;;    pred:       24
  goto <bb 24>; [100.00%]
;;    succ:       24

;;   basic block 20, loop depth 1
;;    pred:       7
;;    succ:       16

;;   basic block 16, loop depth 2
;;    pred:       17
;;                20
  # i_67 = PHI <_13(17), 0(20)>
  # ivtmp_62 = PHI <ivtmp_77(17), 31999(20)>
  _63 = (long unsigned int) i_67;
  _64 = _63 * 4;
  _45 = xx.155_1 + _64;
  _10 = *_45;
  _47 = a[i_67];
  _13 = i_67 + 1;
  _75 = _10 + _47;
  array[_13] = _75;
  ivtmp_77 = ivtmp_62 - 1;
  if (ivtmp_77 != 0)
    goto <bb 17>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       17
;;                6

;;   basic block 17, loop depth 2
;;    pred:       16
  goto <bb 16>; [100.00%]
;;    succ:       16

;;   basic block 26, loop depth 1
;;    pred:       7
  vectp_array.3897_100 = &array + 4;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       13
;;                26
  # i_54 = PHI <_7(13), 0(26)>
  # ivtmp_61 = PHI <ivtmp_52(13), 31999(26)>
  # vectp_xx.3889_93 = PHI <vectp_xx.3889_94(13), xx.155_1(26)>
  # vectp_a.3892_96 = PHI <vectp_a.3892_97(13), &a(26)>
  # vectp_array.3896_101 = PHI <vectp_array.3896_102(13), vectp_array.3897_100(26)>
  # ivtmp_104 = PHI <ivtmp_105(13), 0(26)>
  _2 = (long unsigned int) i_54;
  _3 = _2 * 4;
  _4 = xx.155_1 + _3;
  vect__5.3891_95 = MEM[(float *)vectp_xx.3889_93];
  _5 = *_4;
  vect__6.3894_98 = MEM[(float *)vectp_a.3892_96];
  _6 = a[i_54];
  _7 = i_54 + 1;
  vect__8.3895_99 = vect__5.3891_95 + vect__6.3894_98;
  _8 = _5 + _6;
  MEM[(float *)vectp_array.3896_101] = vect__8.3895_99;
  ivtmp_52 = ivtmp_61 - 1;
  vectp_xx.3889_94 = vectp_xx.3889_93 + 16;
  vectp_a.3892_97 = vectp_a.3892_96 + 16;
  vectp_array.3896_102 = vectp_array.3896_101 + 16;
  ivtmp_105 = ivtmp_104 + 1;
  if (ivtmp_105 < 7999)
    goto <bb 13>; [96.00%]
  else
    goto <bb 23>; [4.00%]
;;    succ:       13
;;                23

;;   basic block 21, loop depth 1
;;    pred:       24
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       16
;;                21
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_25 = nl_53 + 1;
  ivtmp_50 = ivtmp_51 - 1;
  if (ivtmp_50 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       4
;;                12
  # nl_53 = PHI <0(4), nl_25(12)>
  # ivtmp_51 = PHI <40000(4), ivtmp_50(12)>
  xx.155_1 = xx;
  _15 = &array + 20;
  _73 = xx.155_1 >= _15;
  _71 = xx.155_1 + 16;
  _68 = &array + 4;
  _69 = _68 >= _71;
  _70 = _69 | _73;
  if (_70 != 0)
    goto <bb 26>; [80.00%]
  else
    goto <bb 20>; [20.00%]
;;    succ:       20
;;                26

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_22;
  printf ("S423\t %.3f \t\t", clock_dif_28);
  temp = 0.0;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       11
;;                8
  # i_55 = PHI <i_32(11), 0(8)>
  # temp_lsm.3879_14 = PHI <_11(11), 0.0(8)>
  # ivtmp_72 = PHI <ivtmp_66(11), 32000(8)>
  # vect__11.3880_46 = PHI <vect__11.3884_41(11), { 0.0, 0.0, 0.0, 0.0 }(8)>
  # vectp_array.3881_44 = PHI <vectp_array.3881_43(11), &array(8)>
  # ivtmp_17 = PHI <ivtmp_16(11), 0(8)>
  vect__9.3883_42 = MEM[(float *)vectp_array.3881_44];
  _9 = array[i_55];
  vect__11.3884_41 = vect__9.3883_42 + vect__11.3880_46;
  _11 = _9 + temp_lsm.3879_14;
  i_32 = i_55 + 1;
  ivtmp_66 = ivtmp_72 - 1;
  vectp_array.3881_43 = vectp_array.3881_44 + 16;
  ivtmp_16 = ivtmp_17 + 1;
  if (ivtmp_16 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       9
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 10, loop depth 0
;;    pred:       9
  # _74 = PHI <_11(9)>
  # vect__11.3884_39 = PHI <vect__11.3884_41(9)>
  stmp__11.3885_34 = REDUC_PLUS (vect__11.3884_39);
  vect__11.3886_31 = stmp__11.3885_34 + 0.0;
  temp = vect__11.3886_31;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s424 (s424, funcdef_no=693, decl_uid=10585, cgraph_uid=693, symbol_order=714)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_19 -> { _7 }
_20 -> { _6 }
_21 -> { _5 }
_36 -> { _4 }
_39 -> { _2 }
_44 -> { _1 }
ivtmp_46 -> { ivtmp_81 }
.MEM_47 -> { .MEM_61 }
i_48 -> { i_59 }
.MEM_79 -> { .MEM_27 }
.MEM_82 -> { .MEM_27 }
i_83 -> { i_28 }
ivtmp_84 -> { ivtmp_80 }
_85 -> { _8 }
Incremental SSA update started at block: 18
Number of blocks in CFG: 22
Number of blocks to update: 8 ( 36%)


Removing basic block 22
Merging blocks 7 and 18
Merging blocks 8 and 15
Removing basic block 19
s424 ()
{
  vector(4) float * vectp_xx.3958;
  vector(4) float * vectp_xx.3957;
  vector(4) float vect__8.3956;
  vector(4) float vect__2.3955;
  vector(4) float * vectp_a.3954;
  vector(4) float * vectp_a.3953;
  vector(4) float vect__1.3952;
  vector(4) float * vectp_array.3951;
  vector(4) float * vectp_array.3950;
  unsigned int tmp.3949;
  int tmp.3948;
  float vect__15.3947;
  float stmp__15.3946;
  vector(4) float vect__15.3945;
  vector(4) float vect__13.3944;
  vector(4) float * vectp_xx.3943;
  vector(4) float * vectp_xx.3942;
  vector(4) float vect__15.3941;
  float temp_lsm.3940;
  int i;
  int i;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float * xx.158_3;
  sizetype _4;
  sizetype _5;
  sizetype _6;
  float * _7;
  float _8;
  float * xx.159_9;
  long unsigned int _10;
  long unsigned int _11;
  float * _12;
  float _13;
  float * _14;
  float _15;
  float * _19;
  sizetype _20;
  sizetype _21;
  sizetype _36;
  float _39;
  float _44;
  unsigned int ivtmp_46;
  _Bool _49;
  sizetype _50;
  _Bool _51;
  float _52;
  float * _53;
  _Bool _54;
  float[65536] * _55;
  float * _56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_67;
  unsigned int ivtmp_69;
  float _70;
  sizetype _71;
  sizetype _72;
  float _73;
  unsigned int ivtmp_74;
  unsigned int ivtmp_75;
  unsigned int ivtmp_80;
  unsigned int ivtmp_81;
  unsigned int ivtmp_84;
  float _85;
  unsigned int ivtmp_86;
  unsigned int ivtmp_87;
  float _88;
  unsigned int ivtmp_90;
  unsigned int ivtmp_103;
  unsigned int ivtmp_104;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  xx = &MEM[(void *)&array + 252B];
  __builtin_memset (&MEM[(void *)&array + 252B], 0, 128000);
  init ("s424 ");
  start_t_26 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 13, loop depth 2
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 23, loop depth 1
;;    pred:       5
;;    succ:       24

;;   basic block 24, loop depth 2
;;    pred:       23
;;                25
  # i_77 = PHI <31996(23), i_89(25)>
  # ivtmp_75 = PHI <3(23), ivtmp_90(25)>
  _73 = array[i_77];
  _70 = a[i_77];
  _71 = (sizetype) i_77;
  _72 = _71 + 1;
  _50 = _72 * 4;
  _14 = xx.158_3 + _50;
  _52 = _73 + _70;
  *_14 = _52;
  i_89 = i_77 + 1;
  ivtmp_90 = ivtmp_75 - 1;
  if (ivtmp_90 != 0)
    goto <bb 25>; [98.99%]
  else
    goto <bb 21>; [1.01%]
;;    succ:       25
;;                21

;;   basic block 25, loop depth 2
;;    pred:       24
  goto <bb 24>; [100.00%]
;;    succ:       24

;;   basic block 20, loop depth 1
;;    pred:       7
;;    succ:       16

;;   basic block 16, loop depth 2
;;    pred:       17
;;                20
  # i_48 = PHI <i_83(17), 0(20)>
  # ivtmp_46 = PHI <ivtmp_84(17), 31999(20)>
  _44 = array[i_48];
  _39 = a[i_48];
  _36 = (sizetype) i_48;
  _21 = _36 + 1;
  _20 = _21 * 4;
  _19 = xx.158_3 + _20;
  _85 = _44 + _39;
  *_19 = _85;
  i_83 = i_48 + 1;
  ivtmp_84 = ivtmp_46 - 1;
  if (ivtmp_84 != 0)
    goto <bb 17>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       17
;;                6

;;   basic block 17, loop depth 2
;;    pred:       16
  goto <bb 16>; [100.00%]
;;    succ:       16

;;   basic block 26, loop depth 1
;;    pred:       7
  vectp_xx.3958_99 = xx.158_3 + 4;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       13
;;                26
  # i_59 = PHI <i_28(13), 0(26)>
  # ivtmp_81 = PHI <ivtmp_80(13), 31999(26)>
  # vectp_array.3950_92 = PHI <vectp_array.3950_93(13), &array(26)>
  # vectp_a.3953_95 = PHI <vectp_a.3953_96(13), &a(26)>
  # vectp_xx.3957_100 = PHI <vectp_xx.3957_101(13), vectp_xx.3958_99(26)>
  # ivtmp_103 = PHI <ivtmp_104(13), 0(26)>
  vect__1.3952_94 = MEM[(float *)vectp_array.3950_92];
  _1 = array[i_59];
  vect__2.3955_97 = MEM[(float *)vectp_a.3953_95];
  _2 = a[i_59];
  _4 = (sizetype) i_59;
  _5 = _4 + 1;
  _6 = _5 * 4;
  _7 = xx.158_3 + _6;
  vect__8.3956_98 = vect__1.3952_94 + vect__2.3955_97;
  _8 = _1 + _2;
  MEM[(float *)vectp_xx.3957_100] = vect__8.3956_98;
  i_28 = i_59 + 1;
  ivtmp_80 = ivtmp_81 - 1;
  vectp_array.3950_93 = vectp_array.3950_92 + 16;
  vectp_a.3953_96 = vectp_a.3953_95 + 16;
  vectp_xx.3957_101 = vectp_xx.3957_100 + 16;
  ivtmp_104 = ivtmp_103 + 1;
  if (ivtmp_104 < 7999)
    goto <bb 13>; [96.00%]
  else
    goto <bb 23>; [4.00%]
;;    succ:       13
;;                23

;;   basic block 21, loop depth 1
;;    pred:       24
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       16
;;                21
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 1.0e+0);
  nl_30 = nl_58 + 1;
  ivtmp_69 = ivtmp_74 - 1;
  if (ivtmp_69 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                12
  # nl_58 = PHI <0(2), nl_30(12)>
  # ivtmp_74 = PHI <40000(2), ivtmp_69(12)>
  xx.158_3 = xx;
  _56 = xx.158_3 + 4;
  _55 = &array + 16;
  _54 = _55 <= _56;
  _53 = xx.158_3 + 20;
  _51 = _53 <= &array;
  _49 = _51 | _54;
  if (_49 != 0)
    goto <bb 26>; [80.00%]
  else
    goto <bb 20>; [20.00%]
;;    succ:       20
;;                26

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_32 = mysecond ();
  clock_dif_33 = end_t_32 - start_t_26;
  printf ("S424\t %.3f \t\t", clock_dif_33);
  temp = 0.0;
  xx.159_9 = xx;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       11
;;                8
  # i_60 = PHI <i_37(11), 0(8)>
  # temp_lsm.3940_18 = PHI <_15(11), 0.0(8)>
  # ivtmp_87 = PHI <ivtmp_86(11), 32000(8)>
  # vect__15.3941_68 = PHI <vect__15.3945_41(11), { 0.0, 0.0, 0.0, 0.0 }(8)>
  # vectp_xx.3942_65 = PHI <vectp_xx.3942_64(11), xx.159_9(8)>
  # ivtmp_67 = PHI <ivtmp_57(11), 0(8)>
  _10 = (long unsigned int) i_60;
  _11 = _10 * 4;
  _12 = xx.159_9 + _11;
  vect__13.3944_40 = MEM[(float *)vectp_xx.3942_65];
  _13 = *_12;
  vect__15.3945_41 = vect__13.3944_40 + vect__15.3941_68;
  _15 = _13 + temp_lsm.3940_18;
  i_37 = i_60 + 1;
  ivtmp_86 = ivtmp_87 - 1;
  vectp_xx.3942_64 = vectp_xx.3942_65 + 16;
  ivtmp_57 = ivtmp_67 + 1;
  if (ivtmp_57 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       9
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 10, loop depth 0
;;    pred:       9
  # _88 = PHI <_15(9)>
  # vect__15.3945_42 = PHI <vect__15.3945_41(9)>
  stmp__15.3946_45 = REDUC_PLUS (vect__15.3945_42);
  vect__15.3947_43 = stmp__15.3946_45 + 0.0;
  temp = vect__15.3947_43;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s431 (s431, funcdef_no=694, decl_uid=10603, cgraph_uid=694, symbol_order=715)

Merging blocks 5 and 9
s431 ()
{
  vector(4) float * vectp_a.4000;
  vector(4) float * vectp_a.3999;
  vector(4) float vect__3.3998;
  vector(4) float vect__2.3997;
  vector(4) float * vectp_b.3996;
  vector(4) float * vectp_b.3995;
  vector(4) float vect__1.3994;
  vector(4) float * vectp_a.3993;
  vector(4) float * vectp_a.3992;
  int i;
  int D.19540;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_31;
  unsigned int ivtmp_35;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s431 ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_26 = PHI <i_13(8), 0(5)>
  # ivtmp_35 = PHI <ivtmp_24(8), 32000(5)>
  # vectp_a.3992_7 = PHI <vectp_a.3992_6(8), &a(5)>
  # vectp_b.3995_4 = PHI <vectp_b.3995_34(8), &b(5)>
  # vectp_a.3999_37 = PHI <vectp_a.3999_29(8), &a(5)>
  # ivtmp_38 = PHI <ivtmp_31(8), 0(5)>
  vect__1.3994_5 = MEM[(float *)vectp_a.3992_7];
  _1 = a[i_26];
  vect__2.3997_33 = MEM[(float *)vectp_b.3995_4];
  _2 = b[i_26];
  vect__3.3998_28 = vect__1.3994_5 + vect__2.3997_33;
  _3 = _1 + _2;
  MEM[(float *)vectp_a.3999_37] = vect__3.3998_28;
  i_13 = i_26 + 1;
  ivtmp_24 = ivtmp_35 - 1;
  vectp_a.3992_6 = vectp_a.3992_7 + 16;
  vectp_b.3995_34 = vectp_b.3995_4 + 16;
  vectp_a.3999_29 = vectp_a.3999_37 + 16;
  ivtmp_31 = ivtmp_38 + 1;
  if (ivtmp_31 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_22 = ivtmp_23 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_23 = PHI <100000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("S431\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s441 (s441, funcdef_no=695, decl_uid=10619, cgraph_uid=695, symbol_order=716)

s441 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _3;
  float _4;
  float _5;
  float _6;
  float _8;
  float powmult_9;
  float _10;
  float _12;
  float powmult_13;
  float _14;
  unsigned int ivtmp_35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_38;
  unsigned int ivtmp_40;
  float pretmp_45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s441 ");
  start_t_23 = mysecond ();
  goto <bb 10>; [100.00%]
;;    succ:       10

;;   basic block 13, loop depth 2
;;    pred:       8
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       10
;;                13
  # i_42 = PHI <0(10), i_27(13)>
  # ivtmp_40 = PHI <32000(10), ivtmp_38(13)>
  _1 = d[i_42];
  pretmp_45 = a[i_42];
  if (_1 < 0.0)
    goto <bb 4>; [41.00%]
  else
    goto <bb 5>; [59.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  _3 = b[i_42];
  _4 = c[i_42];
  _5 = _3 * _4;
  _6 = _5 + pretmp_45;
  a[i_42] = _6;
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 5, loop depth 2
;;    pred:       3
  if (_1 == 0.0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 2
;;    pred:       5
  _8 = b[i_42];
  powmult_13 = _8 * _8;
  _10 = powmult_13 + pretmp_45;
  a[i_42] = _10;
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 7, loop depth 2
;;    pred:       5
  _12 = c[i_42];
  powmult_9 = _12 * _12;
  _14 = powmult_9 + pretmp_45;
  a[i_42] = _14;
;;    succ:       8

;;   basic block 8, loop depth 2
;;    pred:       4
;;                6
;;                7
  i_27 = i_42 + 1;
  ivtmp_38 = ivtmp_40 - 1;
  if (ivtmp_38 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       13
;;                9

;;   basic block 9, loop depth 1
;;    pred:       8
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_29 = nl_41 + 1;
  ivtmp_35 = ivtmp_36 - 1;
  if (ivtmp_35 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 11>; [1.01%]
;;    succ:       12
;;                11

;;   basic block 12, loop depth 1
;;    pred:       9
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       2
;;                12
  # nl_41 = PHI <0(2), nl_29(12)>
  # ivtmp_36 = PHI <10000(2), ivtmp_35(12)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 11, loop depth 0
;;    pred:       9
  end_t_31 = mysecond ();
  clock_dif_32 = end_t_31 - start_t_23;
  printf ("S441\t %.3f \t\t", clock_dif_32);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s442 (s442, funcdef_no=696, decl_uid=10632, cgraph_uid=696, symbol_order=717)

s442 ()
{
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  int _1;
  float _3;
  float powmult_4;
  float _5;
  float _7;
  float powmult_8;
  float _9;
  float _11;
  float powmult_12;
  float _13;
  float _15;
  float powmult_16;
  float _17;
  unsigned int ivtmp_50;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;
  unsigned int ivtmp_53;
  float pretmp_54;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s442 ");
  start_t_26 = mysecond ();
  goto <bb 10>; [100.00%]
;;    succ:       10

;;   basic block 13, loop depth 2
;;    pred:       8
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       10
;;                13
  # i_46 = PHI <0(10), i_31(13)>
  # ivtmp_53 = PHI <32000(10), ivtmp_52(13)>
  _1 = indx[i_46];
  pretmp_54 = a[i_46];
  switch (_1) <default: L15 [40.00%], case 2: <L3> [20.00%], case 3: <L4> [20.00%], case 4: <L5> [20.00%]>
;;    succ:       7
;;                6
;;                4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
<L3>:
  _7 = c[i_46];
  powmult_12 = _7 * _7;
  _9 = powmult_12 + pretmp_54;
  a[i_46] = _9;
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 5, loop depth 2
;;    pred:       3
<L4>:
  _11 = d[i_46];
  powmult_8 = _11 * _11;
  _13 = powmult_8 + pretmp_54;
  a[i_46] = _13;
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 6, loop depth 2
;;    pred:       3
<L5>:
  _15 = e[i_46];
  powmult_16 = _15 * _15;
  _17 = powmult_16 + pretmp_54;
  a[i_46] = _17;
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 7, loop depth 2
;;    pred:       3
L15:
  _3 = b[i_46];
  powmult_4 = _3 * _3;
  _5 = powmult_4 + pretmp_54;
  a[i_46] = _5;
;;    succ:       8

;;   basic block 8, loop depth 2
;;    pred:       7
;;                4
;;                5
;;                6
L50:
  i_31 = i_46 + 1;
  ivtmp_52 = ivtmp_53 - 1;
  if (ivtmp_52 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       13
;;                9

;;   basic block 9, loop depth 1
;;    pred:       8
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_33 = nl_45 + 1;
  ivtmp_50 = ivtmp_51 - 1;
  if (ivtmp_50 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 11>; [1.01%]
;;    succ:       12
;;                11

;;   basic block 12, loop depth 1
;;    pred:       9
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       2
;;                12
  # nl_45 = PHI <0(2), nl_33(12)>
  # ivtmp_51 = PHI <5000(2), ivtmp_50(12)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 11, loop depth 0
;;    pred:       9
  end_t_35 = mysecond ();
  clock_dif_36 = end_t_35 - start_t_26;
  printf ("S442\t %.3f \t\t", clock_dif_36);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s443 (s443, funcdef_no=697, decl_uid=10654, cgraph_uid=697, symbol_order=718)

Removing basic block 10
Removing basic block 11
Removing basic block 7
Removing basic block 3
Removing basic block 8
Removing basic block 21
Removing basic block 27
Removing basic block 32
Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 23
Removing basic block 30
Merging blocks 2 and 22
Merging blocks 12 and 29
Merging blocks 31 and 18
Merging blocks 12 and 33
s443 ()
{
  vector(4) float * vectp_a.4066;
  vector(4) float * vectp_a.4065;
  vector(4) float vect_cstore_46.4064;
  vector(4) float vect__42.4063;
  vector(4) float vect_powmult_41.4062;
  vector(4) float vect__45.4061;
  vector(4) float vect__44.4060;
  vector(4) float vect__43.4059;
  vector(4) float * vectp_c.4058;
  vector(4) float * vectp_c.4057;
  vector(4) float vect_pretmp_40.4056;
  vector(4) float * vectp_b.4055;
  vector(4) float * vectp_b.4054;
  vector(4) float vect_pretmp_31.4053;
  vector(4) float * vectp_a.4052;
  vector(4) float * vectp_a.4051;
  vector(4) float vect__3.4050;
  vector(4) float * vectp_d.4049;
  vector(4) float * vectp_d.4048;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  unsigned int ivtmp_2;
  float _3;
  unsigned int ivtmp_7;
  _Bool _12;
  float pretmp_31;
  float pretmp_40;
  float powmult_41;
  float _42;
  float _43;
  float _44;
  float _45;
  float cstore_46;
  unsigned int ivtmp_49;
  unsigned int ivtmp_52;
  _Bool _54;
  vector(4) float vect_cst__89;
  unsigned int ivtmp_94;
  unsigned int ivtmp_95;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("s443 ");
  start_t_19 = mysecond ();
  _12 = 0;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       19
;;                2
  # nl_21 = PHI <nl_51(19), 0(2)>
  # ivtmp_7 = PHI <ivtmp_52(19), 20000(2)>
  _54 = 1;
  vect_cst__89 = { 0.0, 0.0, 0.0, 0.0 };
;;    succ:       13

;;   basic block 13, loop depth 2
;;    pred:       17
;;                12
  # i_8 = PHI <i_48(17), 0(12)>
  # ivtmp_2 = PHI <ivtmp_49(17), 32000(12)>
  # vectp_d.4048_73 = PHI <vectp_d.4048_74(17), &d(12)>
  # vectp_a.4051_76 = PHI <vectp_a.4051_77(17), &a(12)>
  # vectp_b.4054_79 = PHI <vectp_b.4054_80(17), &b(12)>
  # vectp_c.4057_82 = PHI <vectp_c.4057_83(17), &c(12)>
  # vectp_a.4065_91 = PHI <vectp_a.4065_92(17), &a(12)>
  # ivtmp_94 = PHI <ivtmp_95(17), 0(12)>
  vect__3.4050_75 = MEM[(float *)vectp_d.4048_73];
  _3 = d[i_8];
  vect_pretmp_31.4053_78 = MEM[(float *)vectp_a.4051_76];
  pretmp_31 = a[i_8];
  vect_pretmp_40.4056_81 = MEM[(float *)vectp_b.4054_79];
  pretmp_40 = b[i_8];
  vect__43.4059_84 = MEM[(float *)vectp_c.4057_82];
  _43 = c[i_8];
  vect__44.4060_85 = vect__43.4059_84 * vect_pretmp_40.4056_81;
  _44 = _43 * pretmp_40;
  vect__45.4061_86 = vect__44.4060_85 + vect_pretmp_31.4053_78;
  _45 = _44 + pretmp_31;
  vect_powmult_41.4062_87 = vect_pretmp_40.4056_81 * vect_pretmp_40.4056_81;
  powmult_41 = pretmp_40 * pretmp_40;
  vect__42.4063_88 = vect_powmult_41.4062_87 + vect_pretmp_31.4053_78;
  _42 = powmult_41 + pretmp_31;
  vect_cstore_46.4064_90 = VEC_COND_EXPR <vect__3.4050_75 > vect_cst__89, vect__42.4063_88, vect__45.4061_86>;
  cstore_46 = _3 > 0.0 ? _42 : _45;
  MEM[(float *)vectp_a.4065_91] = vect_cstore_46.4064_90;
  i_48 = i_8 + 1;
  ivtmp_49 = ivtmp_2 - 1;
  vectp_d.4048_74 = vectp_d.4048_73 + 16;
  vectp_a.4051_77 = vectp_a.4051_76 + 16;
  vectp_b.4054_80 = vectp_b.4054_79 + 16;
  vectp_c.4057_83 = vectp_c.4057_82 + 16;
  vectp_a.4065_92 = vectp_a.4065_91 + 16;
  ivtmp_95 = ivtmp_94 + 1;
  if (ivtmp_95 < 8000)
    goto <bb 17>; [96.00%]
  else
    goto <bb 31>; [4.00%]
;;    succ:       17
;;                31

;;   basic block 17, loop depth 2
;;    pred:       13
  goto <bb 13>; [100.00%]
;;    succ:       13

;;   basic block 31, loop depth 1
;;    pred:       13
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_51 = nl_21 + 1;
  ivtmp_52 = ivtmp_7 - 1;
  if (ivtmp_52 != 0)
    goto <bb 19>; [98.99%]
  else
    goto <bb 9>; [1.01%]
;;    succ:       19
;;                9

;;   basic block 19, loop depth 1
;;    pred:       31
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 9, loop depth 0
;;    pred:       31
  end_t_26 = mysecond ();
  clock_dif_27 = end_t_26 - start_t_19;
  printf ("S443\t %.3f \t\t", clock_dif_27);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s451 (s451, funcdef_no=698, decl_uid=10670, cgraph_uid=698, symbol_order=719)

s451 ()
{
  int i;
  int D.19647;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_42;
  unsigned int ivtmp_44;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s451 ");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_28 = PHI <0(5), i_15(8)>
  # ivtmp_44 = PHI <32000(5), ivtmp_42(8)>
  _1 = b[i_28];
  _2 = sinf (_1);
  _3 = c[i_28];
  _4 = cosf (_3);
  _5 = _2 + _4;
  a[i_28] = _5;
  i_15 = i_28 + 1;
  ivtmp_42 = ivtmp_44 - 1;
  if (ivtmp_42 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  if (ivtmp_39 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_40 = PHI <2000(2), ivtmp_39(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_13;
  printf ("S451\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s452 (s452, funcdef_no=699, decl_uid=10683, cgraph_uid=699, symbol_order=720)

Merging blocks 5 and 9
s452 ()
{
  vector(4) float * vectp_a.4111;
  vector(4) float * vectp_a.4110;
  vector(4) float vect__6.4109;
  vector(4) float vect__5.4108;
  vector(4) float vect__4.4107;
  vector(4) int vect__3.4106;
  vector(4) float vect__2.4105;
  vector(4) float * vectp_c.4104;
  vector(4) float * vectp_c.4103;
  vector(4) float vect__1.4102;
  vector(4) float * vectp_b.4101;
  vector(4) float * vectp_b.4100;
  vector(4) int vect_vec_iv_.4099;
  int i;
  int D.19668;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  int _3;
  float _4;
  float _5;
  float _6;
  vector(4) int vect_cst__8;
  vector(4) int vect_cst__35;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s452 ");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_28 = PHI <_3(8), 0(5)>
  # ivtmp_41 = PHI <ivtmp_40(8), 32000(5)>
  # vect_vec_iv_.4099_34 = PHI <vect_vec_iv_.4099_33(8), { 0, 1, 2, 3 }(5)>
  # vectp_b.4100_30 = PHI <vectp_b.4100_26(8), &b(5)>
  # vectp_c.4103_24 = PHI <vectp_c.4103_10(8), &c(5)>
  # vectp_a.4110_23 = PHI <vectp_a.4110_42(8), &a(5)>
  # ivtmp_44 = PHI <ivtmp_45(8), 0(5)>
  vect_vec_iv_.4099_33 = vect_vec_iv_.4099_34 + vect_cst__35;
  vect__1.4102_25 = MEM[(float *)vectp_b.4100_30];
  _1 = b[i_28];
  vect__2.4105_9 = MEM[(float *)vectp_c.4103_24];
  _2 = c[i_28];
  vect__3.4106_7 = vect_vec_iv_.4099_34 + vect_cst__8;
  _3 = i_28 + 1;
  vect__4.4107_39 = (vector(4) float) vect__3.4106_7;
  _4 = (float) _3;
  vect__5.4108_31 = vect__2.4105_9 * vect__4.4107_39;
  _5 = _2 * _4;
  vect__6.4109_32 = vect__1.4102_25 + vect__5.4108_31;
  _6 = _1 + _5;
  MEM[(float *)vectp_a.4110_23] = vect__6.4109_32;
  ivtmp_40 = ivtmp_41 - 1;
  vectp_b.4100_26 = vectp_b.4100_30 + 16;
  vectp_c.4103_10 = vectp_c.4103_24 + 16;
  vectp_a.4110_42 = vectp_a.4110_23 + 16;
  ivtmp_45 = ivtmp_44 + 1;
  if (ivtmp_45 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_36 = ivtmp_37 - 1;
  if (ivtmp_36 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_37 = PHI <40000(2), ivtmp_36(7)>
  vect_cst__35 = { 4, 4, 4, 4 };
  vect_cst__8 = { 1, 1, 1, 1 };
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_14;
  printf ("S452\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s453 (s453, funcdef_no=700, decl_uid=10696, cgraph_uid=700, symbol_order=721)

Merging blocks 5 and 9
s453 ()
{
  vector(4) float * vectp_a.4134;
  vector(4) float * vectp_a.4133;
  vector(4) float vect__2.4132;
  vector(4) float vect__1.4131;
  vector(4) float * vectp_b.4130;
  vector(4) float * vectp_b.4129;
  vector(4) float vect_s_12.4128;
  vector(4) float vect_vec_iv_.4127;
  int i;
  int D.19702;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float s;
  float _1;
  float _2;
  vector(4) float vect_cst__4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_7;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  vector(4) float vect_cst__26;
  unsigned int ivtmp_33;
  unsigned int ivtmp_40;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s453 ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # s_27 = PHI <s_12(8), 0.0(5)>
  # i_28 = PHI <i_14(8), 0(5)>
  # ivtmp_24 = PHI <ivtmp_23(8), 32000(5)>
  # vect_vec_iv_.4127_3 = PHI <vect_vec_iv_.4127_36(8), { 0.0, 2.0e+0, 4.0e+0, 6.0e+0 }(5)>
  # vectp_b.4129_6 = PHI <vectp_b.4129_35(8), &b(5)>
  # vectp_a.4133_31 = PHI <vectp_a.4133_39(8), &a(5)>
  # ivtmp_33 = PHI <ivtmp_40(8), 0(5)>
  vect_vec_iv_.4127_36 = vect_vec_iv_.4127_3 + vect_cst__4;
  vect_s_12.4128_25 = vect_vec_iv_.4127_3 + vect_cst__26;
  s_12 = s_27 + 2.0e+0;
  vect__1.4131_34 = MEM[(float *)vectp_b.4129_6];
  _1 = b[i_28];
  vect__2.4132_30 = vect__1.4131_34 * vect_s_12.4128_25;
  _2 = _1 * s_12;
  MEM[(float *)vectp_a.4133_31] = vect__2.4132_30;
  i_14 = i_28 + 1;
  ivtmp_23 = ivtmp_24 - 1;
  vectp_b.4129_35 = vectp_b.4129_6 + 16;
  vectp_a.4133_39 = vectp_a.4133_31 + 16;
  ivtmp_40 = ivtmp_33 + 1;
  if (ivtmp_40 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_16 = nl_37 + 1;
  ivtmp_5 = ivtmp_7 - 1;
  if (ivtmp_5 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_37 = PHI <0(2), nl_16(7)>
  # ivtmp_7 = PHI <20000(2), ivtmp_5(7)>
  vect_cst__4 = { 8.0e+0, 8.0e+0, 8.0e+0, 8.0e+0 };
  vect_cst__26 = { 2.0e+0, 2.0e+0, 2.0e+0, 2.0e+0 };
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_18 = mysecond ();
  clock_dif_19 = end_t_18 - start_t_11;
  printf ("S453\t %.3f \t\t", clock_dif_19);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s471 (s471, funcdef_no=701, decl_uid=10710, cgraph_uid=701, symbol_order=722)

Merging blocks 7 and 16
Merging blocks 8 and 15
s471 ()
{
  vector(4) float * vectp_b.4175;
  vector(4) float * vectp_b.4174;
  vector(4) float vect__8.4173;
  vector(4) float vect__7.4172;
  vector(4) float vect__6.4171;
  vector(4) float * vectp_e.4170;
  vector(4) float * vectp_e.4169;
  vector(4) float vect__5.4168;
  vector(4) float * vectp_c.4167;
  vector(4) float * vectp_c.4166;
  vector(4) float * vectp_x.4165;
  vector(4) float * vectp_x.4164;
  vector(4) float vect__4.4163;
  vector(4) float vect_powmult_3.4162;
  vector(4) float vect__2.4161;
  vector(4) float * vectp_d.4160;
  vector(4) float * vectp_d.4159;
  vector(4) float vect__1.4158;
  vector(4) float * vectp_b.4157;
  vector(4) float * vectp_b.4156;
  float vect__11.4155;
  float stmp__11.4154;
  vector(4) float vect__11.4153;
  vector(4) float vect__9.4152;
  vector(4) float * vectp_x.4151;
  vector(4) float * vectp_x.4150;
  vector(4) float vect__11.4149;
  float temp_lsm.4148;
  int i;
  int i;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float powmult_3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _11;
  unsigned int ivtmp_15;
  unsigned int ivtmp_70;
  unsigned int ivtmp_72;
  unsigned int ivtmp_74;
  unsigned int ivtmp_79;
  unsigned int ivtmp_82;
  unsigned int ivtmp_83;
  unsigned int ivtmp_84;
  unsigned int ivtmp_85;
  unsigned int ivtmp_86;
  float _87;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __builtin_memset (&x, 0, 128000);
  init ("s471 ");
  start_t_21 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 13, loop depth 2
;;    pred:       5
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       13
;;                7
  # i_55 = PHI <i_24(13), 0(7)>
  # ivtmp_83 = PHI <ivtmp_82(13), 32000(7)>
  # vectp_b.4156_69 = PHI <vectp_b.4156_68(13), &b(7)>
  # vectp_d.4159_66 = PHI <vectp_d.4159_65(13), &d(7)>
  # vectp_x.4164_53 = PHI <vectp_x.4164_52(13), &x(7)>
  # vectp_c.4166_49 = PHI <vectp_c.4166_47(13), &c(7)>
  # vectp_e.4169_44 = PHI <vectp_e.4169_43(13), &e(7)>
  # vectp_b.4174_32 = PHI <vectp_b.4174_17(13), &b(7)>
  # ivtmp_15 = PHI <ivtmp_86(13), 0(7)>
  vect__1.4158_67 = MEM[(float *)vectp_b.4156_69];
  _1 = b[i_55];
  vect__2.4161_64 = MEM[(float *)vectp_d.4159_66];
  _2 = d[i_55];
  vect_powmult_3.4162_63 = vect__2.4161_64 * vect__2.4161_64;
  powmult_3 = _2 * _2;
  vect__4.4163_62 = vect__1.4158_67 + vect_powmult_3.4162_63;
  _4 = _1 + powmult_3;
  MEM[(float *)vectp_x.4164_53] = vect__4.4163_62;
  vect__5.4168_45 = MEM[(float *)vectp_c.4166_49];
  _5 = c[i_55];
  vect__6.4171_42 = MEM[(float *)vectp_e.4169_44];
  _6 = e[i_55];
  vect__7.4172_40 = vect__2.4161_64 * vect__6.4171_42;
  _7 = _2 * _6;
  vect__8.4173_35 = vect__5.4168_45 + vect__7.4172_40;
  _8 = _5 + _7;
  MEM[(float *)vectp_b.4174_32] = vect__8.4173_35;
  i_24 = i_55 + 1;
  ivtmp_82 = ivtmp_83 - 1;
  vectp_b.4156_68 = vectp_b.4156_69 + 16;
  vectp_d.4159_65 = vectp_d.4159_66 + 16;
  vectp_x.4164_52 = vectp_x.4164_53 + 16;
  vectp_c.4166_47 = vectp_c.4166_49 + 16;
  vectp_e.4169_43 = vectp_e.4169_44 + 16;
  vectp_b.4174_17 = vectp_b.4174_32 + 16;
  ivtmp_86 = ivtmp_15 + 1;
  if (ivtmp_86 < 8000)
    goto <bb 13>; [96.00%]
  else
    goto <bb 6>; [4.00%]
;;    succ:       13
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_26 = nl_54 + 1;
  ivtmp_74 = ivtmp_79 - 1;
  if (ivtmp_74 != 0)
    goto <bb 12>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       12
;;                8

;;   basic block 12, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                12
  # nl_54 = PHI <0(2), nl_26(12)>
  # ivtmp_79 = PHI <5000(2), ivtmp_74(12)>
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_28 = mysecond ();
  clock_dif_29 = end_t_28 - start_t_21;
  printf ("S471\t %.3f \t\t", clock_dif_29);
  temp = 0.0;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       11
;;                8
  # i_56 = PHI <i_33(11), 0(8)>
  # temp_lsm.4148_46 = PHI <_11(11), 0.0(8)>
  # ivtmp_85 = PHI <ivtmp_84(11), 32000(8)>
  # vect__11.4149_73 = PHI <vect__11.4153_37(11), { 0.0, 0.0, 0.0, 0.0 }(8)>
  # vectp_x.4150_61 = PHI <vectp_x.4150_60(11), &x(8)>
  # ivtmp_72 = PHI <ivtmp_70(11), 0(8)>
  vect__9.4152_36 = MEM[(float *)vectp_x.4150_61];
  _9 = x[i_56];
  vect__11.4153_37 = vect__9.4152_36 + vect__11.4149_73;
  _11 = _9 + temp_lsm.4148_46;
  i_33 = i_56 + 1;
  ivtmp_84 = ivtmp_85 - 1;
  vectp_x.4150_60 = vectp_x.4150_61 + 16;
  ivtmp_70 = ivtmp_72 + 1;
  if (ivtmp_70 < 8000)
    goto <bb 11>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       11
;;                10

;;   basic block 11, loop depth 1
;;    pred:       9
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 10, loop depth 0
;;    pred:       9
  # _87 = PHI <_11(9)>
  # vect__11.4153_38 = PHI <vect__11.4153_37(9)>
  stmp__11.4154_41 = REDUC_PLUS (vect__11.4153_38);
  vect__11.4155_39 = stmp__11.4154_41 + 0.0;
  temp = vect__11.4155_39;
  check (-12);
  return 0;
;;    succ:       EXIT

}



;; Function s481 (s481, funcdef_no=702, decl_uid=10728, cgraph_uid=702, symbol_order=723)

s481 ()
{
  int i;
  int D.19787;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_7;
  unsigned int ivtmp_8;
  unsigned int ivtmp_26;
  unsigned int ivtmp_28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s481 ");
  start_t_14 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_30 = PHI <0(7), i_17(10)>
  # ivtmp_28 = PHI <32000(7), ivtmp_26(10)>
  _1 = d[i_30];
  if (_1 < 0.0)
    goto <bb 4>; [5.50%]
  else
    goto <bb 5>; [94.50%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  exit (0);
;;    succ:      

;;   basic block 5, loop depth 2
;;    pred:       3
  _2 = a[i_30];
  _3 = b[i_30];
  _4 = c[i_30];
  _5 = _3 * _4;
  _6 = _2 + _5;
  a[i_30] = _6;
  i_17 = i_30 + 1;
  ivtmp_26 = ivtmp_28 - 1;
  if (ivtmp_26 != 0)
    goto <bb 10>; [98.93%]
  else
    goto <bb 6>; [1.07%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_19 = nl_29 + 1;
  ivtmp_7 = ivtmp_8 - 1;
  if (ivtmp_7 != 0)
    goto <bb 9>; [93.49%]
  else
    goto <bb 8>; [6.51%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_29 = PHI <0(2), nl_19(9)>
  # ivtmp_8 = PHI <10000(2), ivtmp_7(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_21 = mysecond ();
  clock_dif_22 = end_t_21 - start_t_14;
  printf ("S481\t %.3f \t\t", clock_dif_22);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s482 (s482, funcdef_no=703, decl_uid=10741, cgraph_uid=703, symbol_order=724)

s482 ()
{
  int i;
  int D.19809;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_38;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s482 ");
  start_t_14 = mysecond ();
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 9, loop depth 2
;;    pred:       4
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       6
;;                9
  # i_29 = PHI <0(6), i_16(9)>
  # ivtmp_42 = PHI <32000(6), ivtmp_41(9)>
  _1 = a[i_29];
  _2 = b[i_29];
  _3 = c[i_29];
  _4 = _2 * _3;
  _5 = _1 + _4;
  a[i_29] = _5;
  if (_2 < _3)
    goto <bb 5>; [5.50%]
  else
    goto <bb 4>; [94.50%]
;;    succ:       5
;;                4

;;   basic block 4, loop depth 2
;;    pred:       3
  i_16 = i_29 + 1;
  ivtmp_41 = ivtmp_42 - 1;
  if (ivtmp_41 != 0)
    goto <bb 9>; [98.93%]
  else
    goto <bb 5>; [1.07%]
;;    succ:       9
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
;;                3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_38 = ivtmp_40 - 1;
  if (ivtmp_38 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 7>; [1.01%]
;;    succ:       8
;;                7

;;   basic block 8, loop depth 1
;;    pred:       5
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       2
;;                8
  # nl_28 = PHI <0(2), nl_18(8)>
  # ivtmp_40 = PHI <10000(2), ivtmp_38(8)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 7, loop depth 0
;;    pred:       5
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S482\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s491 (s491, funcdef_no=705, decl_uid=10759, cgraph_uid=705, symbol_order=726)

s491 (int * restrict ip)
{
  int i;
  int D.19832;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  long unsigned int _5;
  long unsigned int _6;
  int * _7;
  int _8;
  float _9;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s491 ");
  start_t_17 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_33 = PHI <0(5), i_20(8)>
  # ivtmp_57 = PHI <32000(5), ivtmp_56(8)>
  _1 = b[i_33];
  _2 = c[i_33];
  _3 = d[i_33];
  _4 = _2 * _3;
  _5 = (long unsigned int) i_33;
  _6 = _5 * 4;
  _7 = ip_18(D) + _6;
  _8 = *_7;
  _9 = _1 + _4;
  a[_8] = _9;
  i_20 = i_33 + 1;
  ivtmp_56 = ivtmp_57 - 1;
  if (ivtmp_56 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_54 = ivtmp_55 - 1;
  if (ivtmp_54 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_22(7)>
  # ivtmp_55 = PHI <10000(2), ivtmp_54(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_17;
  printf ("S491\t %.3f \t\t", clock_dif_25);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s4112 (s4112, funcdef_no=706, decl_uid=10774, cgraph_uid=706, symbol_order=727)

s4112 (int * restrict ip, float s)
{
  int i;
  int D.19856;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  long unsigned int _2;
  long unsigned int _3;
  int * _4;
  int _5;
  float _6;
  float _7;
  float _8;
  unsigned int ivtmp_52;
  unsigned int ivtmp_53;
  unsigned int ivtmp_54;
  unsigned int ivtmp_55;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4112");
  start_t_16 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_33 = PHI <0(5), i_20(8)>
  # ivtmp_55 = PHI <32000(5), ivtmp_54(8)>
  _1 = a[i_33];
  _2 = (long unsigned int) i_33;
  _3 = _2 * 4;
  _4 = ip_17(D) + _3;
  _5 = *_4;
  _6 = b[_5];
  _7 = _6 * s_18(D);
  _8 = _1 + _7;
  a[i_33] = _8;
  i_20 = i_33 + 1;
  ivtmp_54 = ivtmp_55 - 1;
  if (ivtmp_54 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_22 = nl_32 + 1;
  ivtmp_52 = ivtmp_53 - 1;
  if (ivtmp_52 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_32 = PHI <0(2), nl_22(7)>
  # ivtmp_53 = PHI <10000(2), ivtmp_52(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_24 = mysecond ();
  clock_dif_25 = end_t_24 - start_t_16;
  printf ("S4112\t %.3f \t\t", clock_dif_25);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s4113 (s4113, funcdef_no=707, decl_uid=10788, cgraph_uid=707, symbol_order=728)

s4113 (int * restrict ip)
{
  int i;
  int D.19878;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  long unsigned int _1;
  long unsigned int _2;
  int * _3;
  int _4;
  float _5;
  float _6;
  float _7;
  unsigned int ivtmp_47;
  unsigned int ivtmp_48;
  unsigned int ivtmp_49;
  unsigned int ivtmp_50;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4113");
  start_t_15 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_31 = PHI <0(5), i_18(8)>
  # ivtmp_50 = PHI <32000(5), ivtmp_49(8)>
  _1 = (long unsigned int) i_31;
  _2 = _1 * 4;
  _3 = ip_16(D) + _2;
  _4 = *_3;
  _5 = b[_4];
  _6 = c[i_31];
  _7 = _5 + _6;
  a[_4] = _7;
  i_18 = i_31 + 1;
  ivtmp_49 = ivtmp_50 - 1;
  if (ivtmp_49 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_20 = nl_30 + 1;
  ivtmp_47 = ivtmp_48 - 1;
  if (ivtmp_47 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_30 = PHI <0(2), nl_20(7)>
  # ivtmp_48 = PHI <10000(2), ivtmp_47(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_22 = mysecond ();
  clock_dif_23 = end_t_22 - start_t_15;
  printf ("S4113\t %.3f \t\t", clock_dif_23);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s4114 (s4114, funcdef_no=708, decl_uid=10803, cgraph_uid=708, symbol_order=729)

s4114 (int * ip, int n1)
{
  int i;
  int D.19900;
  int i;
  int nl;
  int k;
  double clock_dif;
  double end_t;
  double start_t;
  long unsigned int _1;
  long unsigned int _2;
  int * _3;
  float _4;
  int _5;
  float _6;
  float _7;
  float _8;
  float _9;
  unsigned int ivtmp_43;
  unsigned int ivtmp_66;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4114");
  start_t_17 = mysecond ();
  i_19 = n1_18(D) + -1;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                8
  # nl_34 = PHI <0(2), nl_25(8)>
  # ivtmp_43 = PHI <10000(2), ivtmp_66(8)>
  if (i_19 <= 31999)
    goto <bb 7>; [89.00%]
  else
    goto <bb 5>; [11.00%]
;;    succ:       7
;;                5

;;   basic block 7, loop depth 1
;;    pred:       3
;;    succ:       4

;;   basic block 4, loop depth 2
;;    pred:       7
;;                9
  # i_33 = PHI <i_19(7), i_23(9)>
  _1 = (long unsigned int) i_33;
  _2 = _1 * 4;
  _3 = ip_20(D) + _2;
  k_21 = *_3;
  _4 = b[i_33];
  _5 = 31999 - k_21;
  _6 = c[_5];
  _7 = d[i_33];
  _8 = _6 * _7;
  _9 = _4 + _8;
  a[i_33] = _9;
  i_23 = i_33 + 1;
  if (i_23 <= 31999)
    goto <bb 9>; [89.00%]
  else
    goto <bb 5>; [11.00%]
;;    succ:       9
;;                5

;;   basic block 9, loop depth 2
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 5, loop depth 1
;;    pred:       3
;;                4
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_25 = nl_34 + 1;
  ivtmp_66 = ivtmp_43 - 1;
  if (ivtmp_66 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       8
;;                6

;;   basic block 8, loop depth 1
;;    pred:       5
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       5
  end_t_27 = mysecond ();
  clock_dif_28 = end_t_27 - start_t_17;
  printf ("S4114\t %.3f \t\t", clock_dif_28);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s4115 (s4115, funcdef_no=709, decl_uid=10818, cgraph_uid=709, symbol_order=730)

s4115 (int * restrict ip)
{
  int i;
  int D.19926;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  long unsigned int _2;
  long unsigned int _3;
  int * _4;
  int _5;
  float _6;
  float _7;
  unsigned int ivtmp_46;
  unsigned int ivtmp_48;
  unsigned int ivtmp_52;
  unsigned int ivtmp_53;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4115");
  start_t_16 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # sum_37 = PHI <0.0(5), sum_20(8)>
  # i_47 = PHI <0(5), i_21(8)>
  # ivtmp_53 = PHI <32000(5), ivtmp_52(8)>
  _1 = a[i_47];
  _2 = (long unsigned int) i_47;
  _3 = _2 * 4;
  _4 = ip_19(D) + _3;
  _5 = *_4;
  _6 = b[_5];
  _7 = _1 * _6;
  sum_20 = _7 + sum_37;
  i_21 = i_47 + 1;
  ivtmp_52 = ivtmp_53 - 1;
  if (ivtmp_52 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # sum_55 = PHI <sum_20(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_23 = nl_38 + 1;
  ivtmp_46 = ivtmp_48 - 1;
  if (ivtmp_46 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_38 = PHI <0(2), nl_23(7)>
  # ivtmp_48 = PHI <10000(2), ivtmp_46(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # sum_54 = PHI <sum_55(4)>
  end_t_25 = mysecond ();
  clock_dif_26 = end_t_25 - start_t_16;
  printf ("S4115\t %.3f \t\t", clock_dif_26);
  temp = sum_54;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s4116 (s4116, funcdef_no=710, decl_uid=10835, cgraph_uid=710, symbol_order=731)

s4116 (int * restrict ip, int j, int inc)
{
  int i;
  int D.19948;
  int i;
  int nl;
  int off;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  long unsigned int _3;
  long unsigned int _4;
  int * _5;
  int _6;
  float _7;
  float _8;
  int _53;
  unsigned int ivtmp_59;
  unsigned int ivtmp_60;
  unsigned int ivtmp_61;
  unsigned int ivtmp_62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4116");
  start_t_17 = mysecond ();
  _53 = j_22(D) + -1;
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # sum_41 = PHI <0.0(5), sum_24(8)>
  # i_51 = PHI <0(5), i_25(8)>
  # ivtmp_62 = PHI <255(5), ivtmp_61(8)>
  off_21 = inc_20(D) + i_51;
  _1 = a[off_21];
  _3 = (long unsigned int) i_51;
  _4 = _3 * 4;
  _5 = ip_23(D) + _4;
  _6 = *_5;
  _7 = aa[_53][_6];
  _8 = _1 * _7;
  sum_24 = _8 + sum_41;
  i_25 = i_51 + 1;
  ivtmp_61 = ivtmp_62 - 1;
  if (ivtmp_61 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # sum_64 = PHI <sum_24(3)>
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_27 = nl_42 + 1;
  ivtmp_59 = ivtmp_60 - 1;
  if (ivtmp_59 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_42 = PHI <0(2), nl_27(7)>
  # ivtmp_60 = PHI <1000000(2), ivtmp_59(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # sum_63 = PHI <sum_64(4)>
  end_t_29 = mysecond ();
  clock_dif_30 = end_t_29 - start_t_17;
  printf ("S4116\t %.3f \t\t", clock_dif_30);
  temp = sum_63;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function s4117 (s4117, funcdef_no=711, decl_uid=10850, cgraph_uid=711, symbol_order=732)

s4117 ()
{
  int i;
  int D.19970;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  int _2;
  float _3;
  float _4;
  float _5;
  float _6;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_45;
  unsigned int ivtmp_46;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4117");
  start_t_14 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_29 = PHI <0(5), i_16(8)>
  # ivtmp_46 = PHI <32000(5), ivtmp_45(8)>
  _1 = b[i_29];
  _2 = i_29 >> 1;
  _3 = c[_2];
  _4 = d[i_29];
  _5 = _3 * _4;
  _6 = _1 + _5;
  a[i_29] = _6;
  i_16 = i_29 + 1;
  ivtmp_45 = ivtmp_46 - 1;
  if (ivtmp_45 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_40 = ivtmp_41 - 1;
  if (ivtmp_40 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_41 = PHI <10000(2), ivtmp_40(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_14;
  printf ("S4117\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function s4121 (s4121, funcdef_no=712, decl_uid=10863, cgraph_uid=712, symbol_order=733)

Merging blocks 5 and 9
s4121 ()
{
  vector(4) float * vectp_a.4351;
  vector(4) float * vectp_a.4350;
  vector(4) float vect__4.4349;
  vector(4) float vect__3.4348;
  vector(4) float * vectp_a.4347;
  vector(4) float * vectp_a.4346;
  vector(4) float vect__13.4345;
  vector(4) float vect__2.4344;
  vector(4) float * vectp_b.4343;
  vector(4) float * vectp_b.4342;
  vector(4) float vect__1.4341;
  vector(4) float * vectp_c.4340;
  vector(4) float * vectp_c.4339;
  int i;
  int D.19991;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _13;
  unsigned int ivtmp_34;
  unsigned int ivtmp_37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("s4121");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_28 = PHI <i_15(8), 0(5)>
  # ivtmp_42 = PHI <ivtmp_40(8), 32000(5)>
  # vectp_c.4339_36 = PHI <vectp_c.4339_35(8), &c(5)>
  # vectp_b.4342_32 = PHI <vectp_b.4342_31(8), &b(5)>
  # vectp_a.4346_25 = PHI <vectp_a.4346_24(8), &a(5)>
  # vectp_a.4350_7 = PHI <vectp_a.4350_6(8), &a(5)>
  # ivtmp_41 = PHI <ivtmp_34(8), 0(5)>
  vect__1.4341_33 = MEM[(float *)vectp_c.4339_36];
  _1 = c[i_28];
  vect__2.4344_30 = MEM[(float *)vectp_b.4342_32];
  _2 = b[i_28];
  vect__13.4345_26 = vect__1.4341_33 * vect__2.4344_30;
  _13 = _1 * _2;
  vect__3.4348_23 = MEM[(float *)vectp_a.4346_25];
  _3 = a[i_28];
  vect__4.4349_8 = vect__3.4348_23 + vect__13.4345_26;
  _4 = _3 + _13;
  MEM[(float *)vectp_a.4350_7] = vect__4.4349_8;
  i_15 = i_28 + 1;
  ivtmp_40 = ivtmp_42 - 1;
  vectp_c.4339_35 = vectp_c.4339_36 + 16;
  vectp_b.4342_31 = vectp_b.4342_32 + 16;
  vectp_a.4346_24 = vectp_a.4346_25 + 16;
  vectp_a.4350_6 = vectp_a.4350_7 + 16;
  ivtmp_34 = ivtmp_41 + 1;
  if (ivtmp_34 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_37 = ivtmp_39 - 1;
  if (ivtmp_37 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_39 = PHI <10000(2), ivtmp_37(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_12;
  printf ("S4121\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function va (va, funcdef_no=713, decl_uid=10876, cgraph_uid=713, symbol_order=734)

Merging blocks 5 and 9
va ()
{
  vector(4) float * vectp_a.4371;
  vector(4) float * vectp_a.4370;
  vector(4) float vect__1.4369;
  vector(4) float * vectp_b.4368;
  vector(4) float * vectp_b.4367;
  int i;
  int D.20025;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_20;
  unsigned int ivtmp_22;
  unsigned int ivtmp_26;
  unsigned int ivtmp_35;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("va\t");
  start_t_9 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_24 = PHI <i_11(8), 0(5)>
  # ivtmp_20 = PHI <ivtmp_2(8), 32000(5)>
  # vectp_b.4367_33 = PHI <vectp_b.4367_21(8), &b(5)>
  # vectp_a.4370_4 = PHI <vectp_a.4370_32(8), &a(5)>
  # ivtmp_26 = PHI <ivtmp_35(8), 0(5)>
  vect__1.4369_5 = MEM[(float *)vectp_b.4367_33];
  _1 = b[i_24];
  MEM[(float *)vectp_a.4370_4] = vect__1.4369_5;
  i_11 = i_24 + 1;
  ivtmp_2 = ivtmp_20 - 1;
  vectp_b.4367_21 = vectp_b.4367_33 + 16;
  vectp_a.4370_32 = vectp_a.4370_4 + 16;
  ivtmp_35 = ivtmp_26 + 1;
  if (ivtmp_35 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_13 = nl_23 + 1;
  ivtmp_22 = ivtmp_3 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_23 = PHI <0(2), nl_13(7)>
  # ivtmp_3 = PHI <100000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_15 = mysecond ();
  clock_dif_16 = end_t_15 - start_t_9;
  printf ("va\t %.3f \t\t", clock_dif_16);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vag (vag, funcdef_no=714, decl_uid=10890, cgraph_uid=714, symbol_order=735)

vag (int * restrict ip)
{
  int i;
  int D.20050;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  long unsigned int _1;
  long unsigned int _2;
  int * _3;
  int _4;
  float _5;
  unsigned int ivtmp_32;
  unsigned int ivtmp_33;
  unsigned int ivtmp_38;
  unsigned int ivtmp_41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vag  ");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_29 = PHI <0(5), i_16(8)>
  # ivtmp_41 = PHI <32000(5), ivtmp_38(8)>
  _1 = (long unsigned int) i_29;
  _2 = _1 * 4;
  _3 = ip_14(D) + _2;
  _4 = *_3;
  _5 = b[_4];
  a[i_29] = _5;
  i_16 = i_29 + 1;
  ivtmp_38 = ivtmp_41 - 1;
  if (ivtmp_38 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_32 = ivtmp_33 - 1;
  if (ivtmp_32 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_33 = PHI <20000(2), ivtmp_32(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_13;
  printf ("vag\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vas (vas, funcdef_no=715, decl_uid=10904, cgraph_uid=715, symbol_order=736)

vas (int * restrict ip)
{
  int i;
  int D.20072;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  long unsigned int _1;
  long unsigned int _2;
  int * _3;
  int _4;
  float _5;
  unsigned int ivtmp_7;
  unsigned int ivtmp_25;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vas  ");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       5
;;                8
  # i_29 = PHI <0(5), i_16(8)>
  # ivtmp_37 = PHI <32000(5), ivtmp_36(8)>
  _1 = (long unsigned int) i_29;
  _2 = _1 * 4;
  _3 = ip_14(D) + _2;
  _4 = *_3;
  _5 = b[i_29];
  a[_4] = _5;
  i_16 = i_29 + 1;
  ivtmp_36 = ivtmp_37 - 1;
  if (ivtmp_36 != 0)
    goto <bb 8>; [98.99%]
  else
    goto <bb 4>; [1.01%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_18 = nl_28 + 1;
  ivtmp_7 = ivtmp_25 - 1;
  if (ivtmp_7 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_28 = PHI <0(2), nl_18(7)>
  # ivtmp_25 = PHI <20000(2), ivtmp_7(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_13;
  printf ("vas\t %.3f \t\t", clock_dif_21);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vif (vif, funcdef_no=716, decl_uid=10917, cgraph_uid=716, symbol_order=737)

vif ()
{
  int i;
  int D.20094;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_21;
  unsigned int ivtmp_23;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vif  ");
  start_t_10 = mysecond ();
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 10, loop depth 2
;;    pred:       5
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       7
;;                10
  # i_25 = PHI <0(7), i_12(10)>
  # ivtmp_21 = PHI <32000(7), ivtmp_2(10)>
  _1 = b[i_25];
  if (_1 > 0.0)
    goto <bb 4>; [59.00%]
  else
    goto <bb 5>; [41.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 2
;;    pred:       3
  a[i_25] = _1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                3
  i_12 = i_25 + 1;
  ivtmp_2 = ivtmp_21 - 1;
  if (ivtmp_2 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_14 = nl_24 + 1;
  ivtmp_23 = ivtmp_3 - 1;
  if (ivtmp_23 != 0)
    goto <bb 9>; [98.99%]
  else
    goto <bb 8>; [1.01%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       6
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       2
;;                9
  # nl_24 = PHI <0(2), nl_14(9)>
  # ivtmp_3 = PHI <10000(2), ivtmp_23(9)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       6
  end_t_16 = mysecond ();
  clock_dif_17 = end_t_16 - start_t_10;
  printf ("vif\t %.3f \t\t", clock_dif_17);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vpv (vpv, funcdef_no=717, decl_uid=10930, cgraph_uid=717, symbol_order=738)

Merging blocks 5 and 9
vpv ()
{
  vector(4) float * vectp_a.4435;
  vector(4) float * vectp_a.4434;
  vector(4) float vect__3.4433;
  vector(4) float vect__2.4432;
  vector(4) float * vectp_b.4431;
  vector(4) float * vectp_b.4430;
  vector(4) float vect__1.4429;
  vector(4) float * vectp_a.4428;
  vector(4) float * vectp_a.4427;
  int i;
  int D.20114;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_31;
  unsigned int ivtmp_35;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vpv  ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_26 = PHI <i_13(8), 0(5)>
  # ivtmp_35 = PHI <ivtmp_24(8), 32000(5)>
  # vectp_a.4427_7 = PHI <vectp_a.4427_6(8), &a(5)>
  # vectp_b.4430_4 = PHI <vectp_b.4430_34(8), &b(5)>
  # vectp_a.4434_37 = PHI <vectp_a.4434_29(8), &a(5)>
  # ivtmp_38 = PHI <ivtmp_31(8), 0(5)>
  vect__1.4429_5 = MEM[(float *)vectp_a.4427_7];
  _1 = a[i_26];
  vect__2.4432_33 = MEM[(float *)vectp_b.4430_4];
  _2 = b[i_26];
  vect__3.4433_28 = vect__1.4429_5 + vect__2.4432_33;
  _3 = _1 + _2;
  MEM[(float *)vectp_a.4434_37] = vect__3.4433_28;
  i_13 = i_26 + 1;
  ivtmp_24 = ivtmp_35 - 1;
  vectp_a.4427_6 = vectp_a.4427_7 + 16;
  vectp_b.4430_34 = vectp_b.4430_4 + 16;
  vectp_a.4434_29 = vectp_a.4434_37 + 16;
  ivtmp_31 = ivtmp_38 + 1;
  if (ivtmp_31 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_22 = ivtmp_23 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_23 = PHI <100000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("vpv\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vtv (vtv, funcdef_no=718, decl_uid=10943, cgraph_uid=718, symbol_order=739)

Merging blocks 5 and 9
vtv ()
{
  vector(4) float * vectp_a.4457;
  vector(4) float * vectp_a.4456;
  vector(4) float vect__3.4455;
  vector(4) float vect__2.4454;
  vector(4) float * vectp_b.4453;
  vector(4) float * vectp_b.4452;
  vector(4) float vect__1.4451;
  vector(4) float * vectp_a.4450;
  vector(4) float * vectp_a.4449;
  int i;
  int D.20142;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_31;
  unsigned int ivtmp_35;
  unsigned int ivtmp_38;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vtv  ");
  start_t_11 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_26 = PHI <i_13(8), 0(5)>
  # ivtmp_35 = PHI <ivtmp_24(8), 32000(5)>
  # vectp_a.4449_7 = PHI <vectp_a.4449_6(8), &a(5)>
  # vectp_b.4452_4 = PHI <vectp_b.4452_34(8), &b(5)>
  # vectp_a.4456_37 = PHI <vectp_a.4456_29(8), &a(5)>
  # ivtmp_38 = PHI <ivtmp_31(8), 0(5)>
  vect__1.4451_5 = MEM[(float *)vectp_a.4449_7];
  _1 = a[i_26];
  vect__2.4454_33 = MEM[(float *)vectp_b.4452_4];
  _2 = b[i_26];
  vect__3.4455_28 = vect__1.4451_5 * vect__2.4454_33;
  _3 = _1 * _2;
  MEM[(float *)vectp_a.4456_37] = vect__3.4455_28;
  i_13 = i_26 + 1;
  ivtmp_24 = ivtmp_35 - 1;
  vectp_a.4449_6 = vectp_a.4449_7 + 16;
  vectp_b.4452_34 = vectp_b.4452_4 + 16;
  vectp_a.4456_29 = vectp_a.4456_37 + 16;
  ivtmp_31 = ivtmp_38 + 1;
  if (ivtmp_31 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_15 = nl_25 + 1;
  ivtmp_22 = ivtmp_23 - 1;
  if (ivtmp_22 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_25 = PHI <0(2), nl_15(7)>
  # ivtmp_23 = PHI <100000(2), ivtmp_22(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_17 = mysecond ();
  clock_dif_18 = end_t_17 - start_t_11;
  printf ("vtv\t %.3f \t\t", clock_dif_18);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vpvtv (vpvtv, funcdef_no=719, decl_uid=10956, cgraph_uid=719, symbol_order=740)

Merging blocks 5 and 9
vpvtv ()
{
  vector(4) float * vectp_a.4483;
  vector(4) float * vectp_a.4482;
  vector(4) float vect__5.4481;
  vector(4) float vect__4.4480;
  vector(4) float vect__3.4479;
  vector(4) float * vectp_c.4478;
  vector(4) float * vectp_c.4477;
  vector(4) float vect__2.4476;
  vector(4) float * vectp_b.4475;
  vector(4) float * vectp_b.4474;
  vector(4) float vect__1.4473;
  vector(4) float * vectp_a.4472;
  vector(4) float * vectp_a.4471;
  int i;
  int D.20170;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_34;
  unsigned int ivtmp_37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vpvtv");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_28 = PHI <i_15(8), 0(5)>
  # ivtmp_42 = PHI <ivtmp_40(8), 32000(5)>
  # vectp_a.4471_36 = PHI <vectp_a.4471_35(8), &a(5)>
  # vectp_b.4474_32 = PHI <vectp_b.4474_31(8), &b(5)>
  # vectp_c.4477_26 = PHI <vectp_c.4477_25(8), &c(5)>
  # vectp_a.4482_8 = PHI <vectp_a.4482_7(8), &a(5)>
  # ivtmp_41 = PHI <ivtmp_34(8), 0(5)>
  vect__1.4473_33 = MEM[(float *)vectp_a.4471_36];
  _1 = a[i_28];
  vect__2.4476_30 = MEM[(float *)vectp_b.4474_32];
  _2 = b[i_28];
  vect__3.4479_24 = MEM[(float *)vectp_c.4477_26];
  _3 = c[i_28];
  vect__4.4480_23 = vect__2.4476_30 * vect__3.4479_24;
  _4 = _2 * _3;
  vect__5.4481_9 = vect__1.4473_33 + vect__4.4480_23;
  _5 = _1 + _4;
  MEM[(float *)vectp_a.4482_8] = vect__5.4481_9;
  i_15 = i_28 + 1;
  ivtmp_40 = ivtmp_42 - 1;
  vectp_a.4471_35 = vectp_a.4471_36 + 16;
  vectp_b.4474_31 = vectp_b.4474_32 + 16;
  vectp_c.4477_25 = vectp_c.4477_26 + 16;
  vectp_a.4482_7 = vectp_a.4482_8 + 16;
  ivtmp_34 = ivtmp_41 + 1;
  if (ivtmp_34 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_37 = ivtmp_39 - 1;
  if (ivtmp_37 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_39 = PHI <40000(2), ivtmp_37(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_13;
  printf ("vpvtv\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vpvts (vpvts, funcdef_no=720, decl_uid=10970, cgraph_uid=720, symbol_order=741)

Merging blocks 5 and 9
vpvts (float s)
{
  vector(4) float * vectp_a.4508;
  vector(4) float * vectp_a.4507;
  vector(4) float vect__4.4506;
  vector(4) float vect__3.4505;
  vector(4) float vect__2.4504;
  vector(4) float * vectp_b.4503;
  vector(4) float * vectp_b.4502;
  vector(4) float vect__1.4501;
  vector(4) float * vectp_a.4500;
  vector(4) float * vectp_a.4499;
  int i;
  int D.20204;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  vector(4) float vect_cst__7;
  unsigned int ivtmp_34;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vpvts");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_28 = PHI <i_15(8), 0(5)>
  # ivtmp_40 = PHI <ivtmp_39(8), 32000(5)>
  # vectp_a.4499_35 = PHI <vectp_a.4499_30(8), &a(5)>
  # vectp_b.4502_25 = PHI <vectp_b.4502_24(8), &b(5)>
  # vectp_a.4507_32 = PHI <vectp_a.4507_31(8), &a(5)>
  # ivtmp_34 = PHI <ivtmp_41(8), 0(5)>
  vect__1.4501_26 = MEM[(float *)vectp_a.4499_35];
  _1 = a[i_28];
  vect__2.4504_8 = MEM[(float *)vectp_b.4502_25];
  _2 = b[i_28];
  vect__3.4505_6 = vect__2.4504_8 * vect_cst__7;
  _3 = _2 * s_13(D);
  vect__4.4506_5 = vect__1.4501_26 + vect__3.4505_6;
  _4 = _1 + _3;
  MEM[(float *)vectp_a.4507_32] = vect__4.4506_5;
  i_15 = i_28 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  vectp_a.4499_30 = vectp_a.4499_35 + 16;
  vectp_b.4502_24 = vectp_b.4502_25 + 16;
  vectp_a.4507_31 = vectp_a.4507_32 + 16;
  ivtmp_41 = ivtmp_34 + 1;
  if (ivtmp_41 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_36 = ivtmp_37 - 1;
  if (ivtmp_36 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_37 = PHI <10000(2), ivtmp_36(7)>
  vect_cst__7 = {s_13(D), s_13(D), s_13(D), s_13(D)};
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_12;
  printf ("vpvts\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vpvpv (vpvpv, funcdef_no=721, decl_uid=10983, cgraph_uid=721, symbol_order=742)

Merging blocks 5 and 9
vpvpv ()
{
  vector(4) float * vectp_a.4534;
  vector(4) float * vectp_a.4533;
  vector(4) float vect__5.4532;
  vector(4) float vect__24.4531;
  vector(4) float vect__3.4530;
  vector(4) float * vectp_c.4529;
  vector(4) float * vectp_c.4528;
  vector(4) float vect__2.4527;
  vector(4) float * vectp_b.4526;
  vector(4) float * vectp_b.4525;
  vector(4) float vect__1.4524;
  vector(4) float * vectp_a.4523;
  vector(4) float * vectp_a.4522;
  int i;
  int D.20233;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _5;
  unsigned int ivtmp_23;
  float _24;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vpvpv");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_28 = PHI <i_15(8), 0(5)>
  # ivtmp_40 = PHI <ivtmp_39(8), 32000(5)>
  # vectp_a.4522_35 = PHI <vectp_a.4522_33(8), &a(5)>
  # vectp_b.4525_31 = PHI <vectp_b.4525_30(8), &b(5)>
  # vectp_c.4528_25 = PHI <vectp_c.4528_9(8), &c(5)>
  # vectp_a.4533_4 = PHI <vectp_a.4533_41(8), &a(5)>
  # ivtmp_23 = PHI <ivtmp_42(8), 0(5)>
  vect__1.4524_32 = MEM[(float *)vectp_a.4522_35];
  _1 = a[i_28];
  vect__2.4527_26 = MEM[(float *)vectp_b.4525_31];
  _2 = b[i_28];
  vect__3.4530_8 = MEM[(float *)vectp_c.4528_25];
  _3 = c[i_28];
  vect__24.4531_7 = vect__1.4524_32 + vect__2.4527_26;
  _24 = _1 + _2;
  vect__5.4532_6 = vect__3.4530_8 + vect__24.4531_7;
  _5 = _3 + _24;
  MEM[(float *)vectp_a.4533_4] = vect__5.4532_6;
  i_15 = i_28 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  vectp_a.4522_33 = vectp_a.4522_35 + 16;
  vectp_b.4525_30 = vectp_b.4525_31 + 16;
  vectp_c.4528_9 = vectp_c.4528_25 + 16;
  vectp_a.4533_41 = vectp_a.4533_4 + 16;
  ivtmp_42 = ivtmp_23 + 1;
  if (ivtmp_42 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_36 = ivtmp_37 - 1;
  if (ivtmp_36 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_37 = PHI <40000(2), ivtmp_36(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_13;
  printf ("vpvpv\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vtvtv (vtvtv, funcdef_no=722, decl_uid=10996, cgraph_uid=722, symbol_order=743)

Merging blocks 5 and 9
vtvtv ()
{
  vector(4) float * vectp_a.4562;
  vector(4) float * vectp_a.4561;
  vector(4) float vect__5.4560;
  vector(4) float vect__4.4559;
  vector(4) float * vectp_c.4558;
  vector(4) float * vectp_c.4557;
  vector(4) float vect__3.4556;
  vector(4) float vect__2.4555;
  vector(4) float * vectp_b.4554;
  vector(4) float * vectp_b.4553;
  vector(4) float vect__1.4552;
  vector(4) float * vectp_a.4551;
  vector(4) float * vectp_a.4550;
  int i;
  int D.20267;
  int i;
  int nl;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  float _4;
  float _5;
  unsigned int ivtmp_23;
  unsigned int ivtmp_36;
  unsigned int ivtmp_37;
  unsigned int ivtmp_39;
  unsigned int ivtmp_40;
  unsigned int ivtmp_42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vtvtv");
  start_t_13 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # i_28 = PHI <i_15(8), 0(5)>
  # ivtmp_40 = PHI <ivtmp_39(8), 32000(5)>
  # vectp_a.4550_35 = PHI <vectp_a.4550_33(8), &a(5)>
  # vectp_b.4553_31 = PHI <vectp_b.4553_30(8), &b(5)>
  # vectp_c.4557_24 = PHI <vectp_c.4557_9(8), &c(5)>
  # vectp_a.4561_6 = PHI <vectp_a.4561_41(8), &a(5)>
  # ivtmp_23 = PHI <ivtmp_42(8), 0(5)>
  vect__1.4552_32 = MEM[(float *)vectp_a.4550_35];
  _1 = a[i_28];
  vect__2.4555_26 = MEM[(float *)vectp_b.4553_31];
  _2 = b[i_28];
  vect__3.4556_25 = vect__1.4552_32 * vect__2.4555_26;
  _3 = _1 * _2;
  vect__4.4559_8 = MEM[(float *)vectp_c.4557_24];
  _4 = c[i_28];
  vect__5.4560_7 = vect__3.4556_25 * vect__4.4559_8;
  _5 = _3 * _4;
  MEM[(float *)vectp_a.4561_6] = vect__5.4560_7;
  i_15 = i_28 + 1;
  ivtmp_39 = ivtmp_40 - 1;
  vectp_a.4550_33 = vectp_a.4550_35 + 16;
  vectp_b.4553_30 = vectp_b.4553_31 + 16;
  vectp_c.4557_9 = vectp_c.4557_24 + 16;
  vectp_a.4561_41 = vectp_a.4561_6 + 16;
  ivtmp_42 = ivtmp_23 + 1;
  if (ivtmp_42 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_17 = nl_27 + 1;
  ivtmp_36 = ivtmp_37 - 1;
  if (ivtmp_36 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_27 = PHI <0(2), nl_17(7)>
  # ivtmp_37 = PHI <40000(2), ivtmp_36(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_19 = mysecond ();
  clock_dif_20 = end_t_19 - start_t_13;
  printf ("vtvtv\t %.3f \t\t", clock_dif_20);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vsumr (vsumr, funcdef_no=723, decl_uid=11009, cgraph_uid=723, symbol_order=744)

Merging blocks 5 and 9
vsumr ()
{
  float vect_sum_11.4584;
  float stmp_sum_11.4583;
  vector(4) float vect_sum_11.4582;
  vector(4) float vect__1.4581;
  vector(4) float * vectp_a.4580;
  vector(4) float * vectp_a.4579;
  vector(4) float vect_sum_11.4578;
  int i;
  int D.20301;
  int i;
  int nl;
  float sum;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  unsigned int ivtmp_3;
  unsigned int ivtmp_4;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_29;
  unsigned int ivtmp_37;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vsumr");
  start_t_9 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # sum_25 = PHI <sum_11(8), 0.0(5)>
  # i_26 = PHI <i_12(8), 0(5)>
  # ivtmp_23 = PHI <ivtmp_4(8), 32000(5)>
  # vect_sum_11.4578_2 = PHI <vect_sum_11.4582_32(8), { 0.0, 0.0, 0.0, 0.0 }(5)>
  # vectp_a.4579_34 = PHI <vectp_a.4579_24(8), &a(5)>
  # ivtmp_29 = PHI <ivtmp_37(8), 0(5)>
  vect__1.4581_5 = MEM[(float *)vectp_a.4579_34];
  _1 = a[i_26];
  vect_sum_11.4582_32 = vect__1.4581_5 + vect_sum_11.4578_2;
  sum_11 = _1 + sum_25;
  i_12 = i_26 + 1;
  ivtmp_4 = ivtmp_23 - 1;
  vectp_a.4579_24 = vectp_a.4579_34 + 16;
  ivtmp_37 = ivtmp_29 + 1;
  if (ivtmp_37 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # sum_33 = PHI <sum_11(3)>
  # vect_sum_11.4582_21 = PHI <vect_sum_11.4582_32(3)>
  stmp_sum_11.4583_36 = REDUC_PLUS (vect_sum_11.4582_21);
  vect_sum_11.4584_28 = stmp_sum_11.4583_36 + 0.0;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, vect_sum_11.4584_28);
  nl_14 = nl_35 + 1;
  ivtmp_3 = ivtmp_22 - 1;
  if (ivtmp_3 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_35 = PHI <0(2), nl_14(7)>
  # ivtmp_22 = PHI <100000(2), ivtmp_3(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_16 = mysecond ();
  clock_dif_17 = end_t_16 - start_t_9;
  printf ("vsumr\t %.3f \t\t", clock_dif_17);
  check (1);
  return 0;
;;    succ:       EXIT

}



;; Function vdotr (vdotr, funcdef_no=724, decl_uid=11023, cgraph_uid=724, symbol_order=745)

Merging blocks 5 and 9
vdotr ()
{
  float vect_dot_15.4606;
  float stmp_dot_15.4605;
  vector(4) float vect_dot_15.4604;
  vector(4) float vect__3.4603;
  vector(4) float vect__2.4602;
  vector(4) float * vectp_b.4601;
  vector(4) float * vectp_b.4600;
  vector(4) float vect__1.4599;
  vector(4) float * vectp_a.4598;
  vector(4) float * vectp_a.4597;
  vector(4) float vect_dot_15.4596;
  int i;
  int D.20325;
  int i;
  int nl;
  float dot;
  double clock_dif;
  double end_t;
  double start_t;
  float _1;
  float _2;
  float _3;
  unsigned int ivtmp_26;
  unsigned int ivtmp_31;
  unsigned int ivtmp_35;
  unsigned int ivtmp_38;
  unsigned int ivtmp_39;
  unsigned int ivtmp_44;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init.part.3 ("vdotr");
  start_t_12 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 8, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       8
;;                5
  # dot_32 = PHI <dot_15(8), 0.0(5)>
  # i_42 = PHI <i_16(8), 0(5)>
  # ivtmp_39 = PHI <ivtmp_38(8), 32000(5)>
  # vect_dot_15.4596_29 = PHI <vect_dot_15.4604_8(8), { 0.0, 0.0, 0.0, 0.0 }(5)>
  # vectp_a.4597_28 = PHI <vectp_a.4597_27(8), &a(5)>
  # vectp_b.4600_6 = PHI <vectp_b.4600_5(8), &b(5)>
  # ivtmp_44 = PHI <ivtmp_26(8), 0(5)>
  vect__1.4599_7 = MEM[(float *)vectp_a.4597_28];
  _1 = a[i_42];
  vect__2.4602_4 = MEM[(float *)vectp_b.4600_6];
  _2 = b[i_42];
  vect__3.4603_30 = vect__1.4599_7 * vect__2.4602_4;
  _3 = _1 * _2;
  vect_dot_15.4604_8 = vect__3.4603_30 + vect_dot_15.4596_29;
  dot_15 = _3 + dot_32;
  i_16 = i_42 + 1;
  ivtmp_38 = ivtmp_39 - 1;
  vectp_a.4597_27 = vectp_a.4597_28 + 16;
  vectp_b.4600_5 = vectp_b.4600_6 + 16;
  ivtmp_26 = ivtmp_44 + 1;
  if (ivtmp_26 < 8000)
    goto <bb 8>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  # dot_41 = PHI <dot_15(3)>
  # vect_dot_15.4604_43 = PHI <vect_dot_15.4604_8(3)>
  stmp_dot_15.4605_36 = REDUC_PLUS (vect_dot_15.4604_43);
  vect_dot_15.4606_37 = stmp_dot_15.4605_36 + 0.0;
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, vect_dot_15.4606_37);
  nl_18 = nl_33 + 1;
  ivtmp_31 = ivtmp_35 - 1;
  if (ivtmp_31 != 0)
    goto <bb 7>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       7
;;                6

;;   basic block 7, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                7
  # nl_33 = PHI <0(2), nl_18(7)>
  # ivtmp_35 = PHI <100000(2), ivtmp_31(7)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  # dot_40 = PHI <vect_dot_15.4606_37(4)>
  end_t_20 = mysecond ();
  clock_dif_21 = end_t_20 - start_t_12;
  printf ("vdotr\t %.3f \t\t", clock_dif_21);
  temp = dot_40;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function vbor (vbor, funcdef_no=725, decl_uid=11037, cgraph_uid=725, symbol_order=746)

Merging blocks 5 and 13
Merging blocks 6 and 12
vbor ()
{
  vector(4) float * vectp_x.4679;
  vector(4) float * vectp_x.4678;
  vector(4) float vect__39.4677;
  vector(4) float vect__44.4676;
  vector(4) float vect__79.4675;
  vector(4) float vect__77.4674;
  vector(4) float vect__46.4673;
  vector(4) float vect__47.4672;
  vector(4) float vect__82.4671;
  vector(4) float vect_b1_60.4670;
  vector(4) float vect__93.4669;
  vector(4) float vect__92.4668;
  vector(4) float vect__91.4667;
  vector(4) float vect__76.4666;
  vector(4) float vect__24.4665;
  vector(4) float vect__90.4664;
  vector(4) float vect_a1_59.4663;
  vector(4) float vect__99.4662;
  vector(4) float vect__98.4661;
  vector(4) float vect__97.4660;
  vector(4) float vect__18.4659;
  vector(4) float vect__100.4658;
  vector(4) float vect__14.4657;
  vector(4) float vect__13.4656;
  vector(4) float vect__96.4655;
  vector(4) float vect__6.4654;
  vector(4) float vect__5.4653;
  vector(4) float vect__4.4652;
  vector(4) float vect__3.4651;
  vector(4) float vect__95.4650;
  vector(4) float vect__103.4649;
  vector(4) float vect__102.4648;
  vector(4) float vect_f1_58.4647;
  vector(4) float * vectp_aa.4646;
  vector(4) float * vectp_aa.4645;
  vector(4) float vect__81.4644;
  vector(4) float vect_e1_57.4643;
  vector(4) float * vectp_e.4642;
  vector(4) float * vectp_e.4641;
  vector(4) float vect__101.4640;
  vector(4) float vect_d1_56.4639;
  vector(4) float * vectp_d.4638;
  vector(4) float * vectp_d.4637;
  vector(4) float vect_c1_55.4636;
  vector(4) float * vectp_c.4635;
  vector(4) float * vectp_c.4634;
  vector(4) float vect_b1_54.4633;
  vector(4) float * vectp_b.4632;
  vector(4) float * vectp_b.4631;
  vector(4) float vect_a1_53.4630;
  vector(4) float * vectp_a.4629;
  vector(4) float * vectp_a.4628;
  float vect__42.4627;
  float stmp__42.4626;
  vector(4) float vect__42.4625;
  vector(4) float vect__40.4624;
  vector(4) float * vectp_x.4623;
  vector(4) float * vectp_x.4622;
  vector(4) float vect__42.4621;
  float temp_lsm.4620;
  int i;
  int i;
  int nl;
  float f1;
  float e1;
  float d1;
  float c1;
  float b1;
  float a1;
  double clock_dif;
  double end_t;
  double start_t;
  float _3;
  float _4;
  float _5;
  float _6;
  float _13;
  float _14;
  float _18;
  float _23;
  float _24;
  float _30;
  float _33;
  float _35;
  float _39;
  float _40;
  float _42;
  float _44;
  float _46;
  float _47;
  float _76;
  float _77;
  float _79;
  float _81;
  float _82;
  float _90;
  float _91;
  float _92;
  float _93;
  float _95;
  float _96;
  float _97;
  float _98;
  float _99;
  float _100;
  float _101;
  float _102;
  float _103;
  unsigned int ivtmp_193;
  unsigned int ivtmp_194;
  unsigned int ivtmp_250;
  unsigned int ivtmp_251;
  unsigned int ivtmp_260;
  unsigned int ivtmp_261;
  unsigned int ivtmp_262;
  unsigned int ivtmp_263;
  unsigned int ivtmp_264;
  unsigned int ivtmp_265;
  float _267;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init ("vbor ");
  start_t_52 = mysecond ();
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 11, loop depth 2
;;    pred:       3
;;    succ:       3

;;   basic block 3, loop depth 2
;;    pred:       11
;;                5
  # i_85 = PHI <i_64(11), 0(5)>
  # ivtmp_263 = PHI <ivtmp_262(11), 256(5)>
  # vectp_a.4628_249 = PHI <vectp_a.4628_248(11), &a(5)>
  # vectp_b.4631_246 = PHI <vectp_b.4631_245(11), &b(5)>
  # vectp_c.4634_243 = PHI <vectp_c.4634_242(11), &c(5)>
  # vectp_d.4637_240 = PHI <vectp_d.4637_239(11), &d(5)>
  # vectp_e.4641_236 = PHI <vectp_e.4641_235(11), &e(5)>
  # vectp_aa.4645_232 = PHI <vectp_aa.4645_231(11), &aa(5)>
  # vectp_x.4678_197 = PHI <vectp_x.4678_196(11), &x(5)>
  # ivtmp_194 = PHI <ivtmp_193(11), 0(5)>
  vect_a1_53.4630_247 = MEM[(float *)vectp_a.4628_249];
  a1_53 = a[i_85];
  vect_b1_54.4633_244 = MEM[(float *)vectp_b.4631_246];
  b1_54 = b[i_85];
  vect_c1_55.4636_241 = MEM[(float *)vectp_c.4634_243];
  c1_55 = c[i_85];
  vect_d1_56.4639_238 = MEM[(float *)vectp_d.4637_240];
  d1_56 = d[i_85];
  vect__101.4640_237 = vect_c1_55.4636_241 + vect_d1_56.4639_238;
  _101 = c1_55 + d1_56;
  vect_e1_57.4643_234 = MEM[(float *)vectp_e.4641_236];
  e1_57 = e[i_85];
  vect__81.4644_233 = vect_d1_56.4639_238 * vect_e1_57.4643_234;
  _81 = d1_56 * e1_57;
  vect_f1_58.4647_230 = MEM[(float *)vectp_aa.4645_232];
  f1_58 = aa[0][i_85];
  vect__102.4648_229 = vect_e1_57.4643_234 + vect_f1_58.4647_230;
  _102 = e1_57 + f1_58;
  vect__103.4649_226 = vect_d1_56.4639_238 + vect_e1_57.4643_234;
  _103 = d1_56 + e1_57;
  vect__95.4650_225 = vect_f1_58.4647_230 + vect__103.4649_226;
  _95 = f1_58 + _103;
  vect__3.4651_224 = vect__101.4640_237 + vect__102.4648_229;
  _3 = _101 + _102;
  vect__4.4652_223 = vect_a1_53.4630_247 * vect_b1_54.4633_244;
  _4 = a1_53 * b1_54;
  vect__5.4653_222 = vect__3.4651_224 * vect__4.4652_223;
  _5 = _3 * _4;
  vect__6.4654_221 = vect_a1_53.4630_247 * vect_c1_55.4636_241;
  _6 = a1_53 * c1_55;
  vect__96.4655_220 = vect__6.4654_221 * vect__95.4650_225;
  _96 = _6 * _95;
  vect__13.4656_219 = vect_a1_53.4630_247 * vect_d1_56.4639_238;
  _13 = a1_53 * d1_56;
  vect__14.4657_218 = vect__13.4656_219 * vect_e1_57.4643_234;
  _14 = _13 * e1_57;
  vect__100.4658_217 = vect__5.4653_222 + vect__14.4657_218;
  _100 = _5 + _14;
  vect__18.4659_216 = vect_a1_53.4630_247 * vect_e1_57.4643_234;
  _18 = a1_53 * e1_57;
  vect__97.4660_215 = vect__13.4656_219 + vect__18.4659_216;
  _97 = _13 + _18;
  vect__98.4661_214 = vect_f1_58.4647_230 * vect__97.4660_215;
  _98 = f1_58 * _97;
  vect__99.4662_213 = vect__96.4655_220 + vect__98.4661_214;
  _99 = _96 + _98;
  vect_a1_59.4663_212 = vect__99.4662_213 + vect__100.4658_217;
  a1_59 = _99 + _100;
  vect__90.4664_211 = vect_c1_55.4636_241 * vect__95.4650_225;
  _90 = c1_55 * _95;
  vect__24.4665_210 = vect_b1_54.4633_244 * vect_d1_56.4639_238;
  _24 = b1_54 * d1_56;
  vect__76.4666_209 = vect__24.4665_210 * vect__102.4648_229;
  _76 = _24 * _102;
  vect__91.4667_208 = vect_e1_57.4643_234 * vect_f1_58.4647_230;
  _91 = e1_57 * f1_58;
  vect__92.4668_207 = vect__90.4664_211 + vect__91.4667_208;
  _92 = _90 + _91;
  vect__93.4669_206 = vect_b1_54.4633_244 * vect__92.4668_207;
  _93 = b1_54 * _92;
  vect_b1_60.4670_205 = vect__76.4666_209 + vect__93.4669_206;
  b1_60 = _76 + _93;
  vect__82.4671_204 = vect_a1_59.4663_212 * vect_b1_60.4670_205;
  _82 = a1_59 * b1_60;
  vect__47.4672_203 = vect_d1_56.4639_238 * vect__102.4648_229;
  _47 = d1_56 * _102;
  vect__46.4673_202 = vect__47.4672_203 + vect__91.4667_208;
  _46 = _47 + _91;
  vect__77.4674_201 = vect__46.4673_202 * vect_c1_55.4636_241;
  _77 = _46 * c1_55;
  vect__79.4675_200 = vect_f1_58.4647_230 * vect__77.4674_201;
  _79 = f1_58 * _77;
  vect__44.4676_199 = vect__79.4675_200 * vect__81.4644_233;
  _44 = _79 * _81;
  vect__39.4677_198 = vect__44.4676_199 * vect__82.4671_204;
  _39 = _44 * _82;
  MEM[(float *)vectp_x.4678_197] = vect__39.4677_198;
  i_64 = i_85 + 1;
  ivtmp_262 = ivtmp_263 - 1;
  vectp_a.4628_248 = vectp_a.4628_249 + 16;
  vectp_b.4631_245 = vectp_b.4631_246 + 16;
  vectp_c.4634_242 = vectp_c.4634_243 + 16;
  vectp_d.4637_239 = vectp_d.4637_240 + 16;
  vectp_e.4641_235 = vectp_e.4641_236 + 16;
  vectp_aa.4645_231 = vectp_aa.4645_232 + 16;
  vectp_x.4678_196 = vectp_x.4678_197 + 16;
  ivtmp_193 = ivtmp_194 + 1;
  if (ivtmp_193 < 64)
    goto <bb 11>; [96.00%]
  else
    goto <bb 4>; [4.00%]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  dummy (&a, &b, &c, &d, &e, &aa, &bb, &cc, 0.0);
  nl_66 = nl_84 + 1;
  ivtmp_260 = ivtmp_261 - 1;
  if (ivtmp_260 != 0)
    goto <bb 10>; [98.99%]
  else
    goto <bb 6>; [1.01%]
;;    succ:       10
;;                6

;;   basic block 10, loop depth 1
;;    pred:       4
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       2
;;                10
  # nl_84 = PHI <0(2), nl_66(10)>
  # ivtmp_261 = PHI <100000(2), ivtmp_260(10)>
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
  end_t_68 = mysecond ();
  clock_dif_69 = end_t_68 - start_t_52;
  printf ("vbor\t %.3f \t\t", clock_dif_69);
  temp = 0.0;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       9
;;                6
  # i_86 = PHI <i_73(9), 0(6)>
  # temp_lsm.4620_61 = PHI <_42(9), 0.0(6)>
  # ivtmp_265 = PHI <ivtmp_264(9), 32000(6)>
  # vect__42.4621_259 = PHI <vect__42.4625_255(9), { 0.0, 0.0, 0.0, 0.0 }(6)>
  # vectp_x.4622_258 = PHI <vectp_x.4622_257(9), &x(6)>
  # ivtmp_251 = PHI <ivtmp_250(9), 0(6)>
  vect__40.4624_256 = MEM[(float *)vectp_x.4622_258];
  _40 = x[i_86];
  vect__42.4625_255 = vect__40.4624_256 + vect__42.4621_259;
  _42 = _40 + temp_lsm.4620_61;
  i_73 = i_86 + 1;
  ivtmp_264 = ivtmp_265 - 1;
  vectp_x.4622_257 = vectp_x.4622_258 + 16;
  ivtmp_250 = ivtmp_251 + 1;
  if (ivtmp_250 < 8000)
    goto <bb 9>; [96.00%]
  else
    goto <bb 8>; [4.00%]
;;    succ:       9
;;                8

;;   basic block 9, loop depth 1
;;    pred:       7
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 8, loop depth 0
;;    pred:       7
  # _267 = PHI <_42(7)>
  # vect__42.4625_254 = PHI <vect__42.4625_255(7)>
  stmp__42.4626_253 = REDUC_PLUS (vect__42.4625_254);
  vect__42.4627_252 = stmp__42.4626_253 + 0.0;
  temp = vect__42.4627_252;
  check (-1);
  return 0;
;;    succ:       EXIT

}



;; Function set (set, funcdef_no=726, decl_uid=11063, cgraph_uid=726, symbol_order=747)

Merging blocks 11 and 45
Merging blocks 14 and 44
Merging blocks 17 and 43
Removing basic block 20
Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 27
Removing basic block 28
set (int * ip, float * s1, float * s2)
{
  vector(4) float * vectp_a.4730;
  vector(4) float * vectp_a.4729;
  vector(4) float * vectp_b.4728;
  vector(4) float * vectp_b.4727;
  vector(4) float * vectp_c.4726;
  vector(4) float * vectp_c.4725;
  vector(4) float * vectp_d.4724;
  vector(4) float * vectp_d.4723;
  vector(4) float * vectp_e.4722;
  vector(4) float * vectp_e.4721;
  vector(4) float * vectp.4720;
  vector(4) float * vectp.4719;
  vector(4) float * vectp.4718;
  vector(4) float * vectp.4717;
  vector(4) float * vectp.4716;
  vector(4) float * vectp.4715;
  vector(4) int * vectp_indx.4714;
  vector(4) int * vectp_indx.4713;
  vector(4) int vect__23.4712;
  vector(4) int vect__22.4711;
  vector(4) int vect__21.4710;
  vector(4) int vect_vec_iv_.4709;
  int i;
  int j;
  int D.20471;
  int i;
  int j;
  int D.20462;
  int i;
  int j;
  int D.20453;
  int i;
  int i;
  int i;
  int i;
  int i;
  int i;
  int i;
  void * _1;
  long unsigned int _2;
  long unsigned int _3;
  int * _4;
  int _5;
  sizetype _6;
  sizetype _7;
  int * _8;
  int _9;
  sizetype _10;
  sizetype _11;
  int * _12;
  sizetype _13;
  sizetype _14;
  int * _15;
  int _16;
  sizetype _17;
  sizetype _18;
  int * _19;
  int _20;
  int _21;
  int _22;
  int _23;
  long unsigned int _26;
  long unsigned int _39;
  vector(4) float vect_cst__47;
  long unsigned int _48;
  long unsigned int _49;
  float * _50;
  unsigned int ivtmp_52;
  long unsigned int _53;
  long unsigned int _54;
  float * _55;
  unsigned int ivtmp_57;
  long unsigned int _58;
  long unsigned int _59;
  float * _60;
  long unsigned int _63;
  long unsigned int _64;
  float * _65;
  long unsigned int _68;
  long unsigned int _69;
  float * _70;
  vector(4) int vect_cst__74;
  vector(4) int vect_cst__82;
  int _83;
  float _84;
  long unsigned int _85;
  long unsigned int _86;
  float[256] * _87;
  float _88;
  vector(4) int vect_cst__91;
  unsigned int ivtmp_96;
  unsigned int ivtmp_98;
  vector(4) int vect_cst__100;
  int _101;
  float _102;
  long unsigned int _103;
  long unsigned int _104;
  float[256] * _105;
  float _106;
  unsigned int ivtmp_107;
  unsigned int ivtmp_109;
  unsigned int ivtmp_111;
  unsigned int ivtmp_113;
  unsigned int ivtmp_114;
  vector(4) float vect_cst__117;
  unsigned int ivtmp_118;
  int _119;
  float _120;
  long unsigned int _121;
  long unsigned int _122;
  float[256] * _123;
  float _124;
  unsigned int ivtmp_125;
  unsigned int ivtmp_127;
  unsigned int ivtmp_128;
  unsigned int ivtmp_129;
  unsigned int ivtmp_130;
  unsigned int ivtmp_131;
  unsigned int ivtmp_132;
  unsigned int ivtmp_135;
  vector(4) float vect_cst__137;
  unsigned int ivtmp_138;
  unsigned int ivtmp_139;
  vector(4) float vect_cst__143;
  unsigned int ivtmp_148;
  unsigned int ivtmp_149;
  unsigned int ivtmp_150;
  unsigned int ivtmp_151;
  unsigned int ivtmp_152;
  unsigned int ivtmp_153;
  unsigned int ivtmp_154;
  unsigned int ivtmp_155;
  unsigned int ivtmp_156;
  unsigned int ivtmp_183;
  unsigned int ivtmp_184;
  unsigned int ivtmp_187;
  unsigned int ivtmp_189;
  unsigned int ivtmp_190;
  unsigned int ivtmp_191;
  vector(4) float vect_cst__192;
  unsigned int ivtmp_194;
  unsigned int ivtmp_196;
  vector(4) float vect_cst__197;
  unsigned int ivtmp_200;
  unsigned int ivtmp_202;
  vector(4) float vect_cst__203;
  long unsigned int _204;
  long unsigned int _205;
  unsigned int ivtmp_208;
  long unsigned int _210;
  long unsigned int _214;
  vector(4) float vect_cst__215;
  unsigned int ivtmp_217;
  unsigned int ivtmp_218;
  unsigned int ivtmp_219;
  unsigned int ivtmp_220;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = memalign (16, 128000);
  xx = _1;
  __builtin_putchar (10);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                41
  # i_157 = PHI <0(2), i_38(41)>
  # ivtmp_109 = PHI <6400(2), ivtmp_107(41)>
  _2 = (long unsigned int) i_157;
  _3 = _2 * 4;
  _4 = ip_32(D) + _3;
  _5 = i_157 + 4;
  *_4 = _5;
  _6 = _2 + 1;
  _7 = _6 * 4;
  _8 = ip_32(D) + _7;
  _9 = i_157 + 2;
  *_8 = _9;
  _10 = _2 + 2;
  _11 = _10 * 4;
  _12 = ip_32(D) + _11;
  *_12 = i_157;
  _13 = _2 + 3;
  _14 = _13 * 4;
  _15 = ip_32(D) + _14;
  _16 = i_157 + 3;
  *_15 = _16;
  _17 = _2 + 4;
  _18 = _17 * 4;
  _19 = ip_32(D) + _18;
  _20 = i_157 + 1;
  *_19 = _20;
  i_38 = i_157 + 5;
  ivtmp_107 = ivtmp_109 - 1;
  if (ivtmp_107 != 0)
    goto <bb 41>; [98.99%]
  else
    goto <bb 50>; [1.01%]
;;    succ:       41
;;                50

;;   basic block 41, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

;;   basic block 50, loop depth 0
;;    pred:       3
  vect_cst__137 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       40
;;                50
  # i_165 = PHI <i_71(40), 0(50)>
  # ivtmp_113 = PHI <ivtmp_111(40), 32000(50)>
  # vectp_a.4729_136 = PHI <vectp_a.4729_134(40), &a(50)>
  # ivtmp_130 = PHI <ivtmp_128(40), 0(50)>
  _68 = (long unsigned int) i_165;
  _69 = _68 * 4;
  _70 = &a + _69;
  MEM[(float *)vectp_a.4729_136] = vect_cst__137;
  i_71 = i_165 + 1;
  ivtmp_111 = ivtmp_113 - 1;
  vectp_a.4729_134 = vectp_a.4729_136 + 16;
  ivtmp_128 = ivtmp_130 + 1;
  if (ivtmp_128 < 8000)
    goto <bb 40>; [83.33%]
  else
    goto <bb 49>; [16.67%]
;;    succ:       40
;;                49

;;   basic block 40, loop depth 1
;;    pred:       4
  goto <bb 4>; [100.00%]
;;    succ:       4

;;   basic block 49, loop depth 0
;;    pred:       4
  vect_cst__143 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       39
;;                49
  # i_164 = PHI <i_66(39), 0(49)>
  # ivtmp_118 = PHI <ivtmp_114(39), 32000(49)>
  # vectp_b.4727_40 = PHI <vectp_b.4727_141(39), &b(49)>
  # ivtmp_139 = PHI <ivtmp_138(39), 0(49)>
  _63 = (long unsigned int) i_164;
  _64 = _63 * 4;
  _65 = &b + _64;
  MEM[(float *)vectp_b.4727_40] = vect_cst__143;
  i_66 = i_164 + 1;
  ivtmp_114 = ivtmp_118 - 1;
  vectp_b.4727_141 = vectp_b.4727_40 + 16;
  ivtmp_138 = ivtmp_139 + 1;
  if (ivtmp_138 < 8000)
    goto <bb 39>; [83.33%]
  else
    goto <bb 48>; [16.67%]
;;    succ:       39
;;                48

;;   basic block 39, loop depth 1
;;    pred:       5
  goto <bb 5>; [100.00%]
;;    succ:       5

;;   basic block 48, loop depth 0
;;    pred:       5
  vect_cst__117 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       38
;;                48
  # i_163 = PHI <i_61(38), 0(48)>
  # ivtmp_127 = PHI <ivtmp_125(38), 32000(48)>
  # vectp_c.4725_110 = PHI <vectp_c.4725_147(38), &c(48)>
  # ivtmp_96 = PHI <ivtmp_98(38), 0(48)>
  _58 = (long unsigned int) i_163;
  _59 = _58 * 4;
  _60 = &c + _59;
  MEM[(float *)vectp_c.4725_110] = vect_cst__117;
  i_61 = i_163 + 1;
  ivtmp_125 = ivtmp_127 - 1;
  vectp_c.4725_147 = vectp_c.4725_110 + 16;
  ivtmp_98 = ivtmp_96 + 1;
  if (ivtmp_98 < 8000)
    goto <bb 38>; [83.33%]
  else
    goto <bb 47>; [16.67%]
;;    succ:       38
;;                47

;;   basic block 38, loop depth 1
;;    pred:       6
  goto <bb 6>; [100.00%]
;;    succ:       6

;;   basic block 47, loop depth 0
;;    pred:       6
  vect_cst__192 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       37
;;                47
  # i_162 = PHI <i_56(37), 0(47)>
  # ivtmp_131 = PHI <ivtmp_129(37), 32000(47)>
  # vectp_d.4723_188 = PHI <vectp_d.4723_185(37), &d(47)>
  # ivtmp_187 = PHI <ivtmp_183(37), 0(47)>
  _53 = (long unsigned int) i_162;
  _54 = _53 * 4;
  _55 = &d + _54;
  MEM[(float *)vectp_d.4723_188] = vect_cst__192;
  i_56 = i_162 + 1;
  ivtmp_129 = ivtmp_131 - 1;
  vectp_d.4723_185 = vectp_d.4723_188 + 16;
  ivtmp_183 = ivtmp_187 + 1;
  if (ivtmp_183 < 8000)
    goto <bb 37>; [83.33%]
  else
    goto <bb 46>; [16.67%]
;;    succ:       37
;;                46

;;   basic block 37, loop depth 1
;;    pred:       7
  goto <bb 7>; [100.00%]
;;    succ:       7

;;   basic block 46, loop depth 0
;;    pred:       7
  vect_cst__197 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       36
;;                46
  # i_161 = PHI <i_51(36), 0(46)>
  # ivtmp_135 = PHI <ivtmp_132(36), 32000(46)>
  # vectp_e.4721_198 = PHI <vectp_e.4721_199(36), &e(46)>
  # ivtmp_190 = PHI <ivtmp_191(36), 0(46)>
  _48 = (long unsigned int) i_161;
  _49 = _48 * 4;
  _50 = &e + _49;
  MEM[(float *)vectp_e.4721_198] = vect_cst__197;
  i_51 = i_161 + 1;
  ivtmp_132 = ivtmp_135 - 1;
  vectp_e.4721_199 = vectp_e.4721_198 + 16;
  ivtmp_191 = ivtmp_190 + 1;
  if (ivtmp_191 < 8000)
    goto <bb 36>; [83.33%]
  else
    goto <bb 23>; [16.67%]
;;    succ:       36
;;                23

;;   basic block 36, loop depth 1
;;    pred:       8
  goto <bb 8>; [100.00%]
;;    succ:       8

;;   basic block 23, loop depth 0
;;    pred:       8
  goto <bb 11>; [100.00%]
;;    succ:       11

;;   basic block 35, loop depth 2
;;    pred:       9
;;    succ:       9

;;   basic block 9, loop depth 2
;;    pred:       35
;;                11
  # j_176 = PHI <j_126(35), 0(11)>
  # ivtmp_151 = PHI <ivtmp_150(35), 256(11)>
  # vectp.4719_206 = PHI <vectp.4719_201(35), vectp.4720_207(11)>
  # ivtmp_196 = PHI <ivtmp_200(35), 0(11)>
  MEM[(float *)vectp.4719_206] = vect_cst__203;
  j_126 = j_176 + 1;
  ivtmp_150 = ivtmp_151 - 1;
  vectp.4719_201 = vectp.4719_206 + 16;
  ivtmp_200 = ivtmp_196 + 1;
  if (ivtmp_200 < 64)
    goto <bb 35>; [96.00%]
  else
    goto <bb 10>; [4.00%]
;;    succ:       35
;;                10

;;   basic block 10, loop depth 1
;;    pred:       9
  ivtmp_148 = ivtmp_149 - 1;
  if (ivtmp_148 != 0)
    goto <bb 34>; [98.99%]
  else
    goto <bb 22>; [1.01%]
;;    succ:       34
;;                22

;;   basic block 34, loop depth 1
;;    pred:       10
;;    succ:       11

;;   basic block 11, loop depth 1
;;    pred:       23
;;                34
  # i_175 = PHI <0(23), _119(34)>
  # ivtmp_149 = PHI <256(23), ivtmp_148(34)>
  _119 = i_175 + 1;
  _120 = (float) _119;
  _121 = (long unsigned int) i_175;
  _122 = _121 * 1024;
  _123 = &aa + _122;
  _124 = 1.0e+0 / _120;
  vect_cst__203 = {_124, _124, _124, _124};
  _204 = (long unsigned int) i_175;
  _205 = _204 * 1024;
  vectp.4720_207 = &aa + _205;
  goto <bb 9>; [100.00%]
;;    succ:       9

;;   basic block 33, loop depth 2
;;    pred:       12
;;    succ:       12

;;   basic block 12, loop depth 2
;;    pred:       33
;;                14
  # j_174 = PHI <j_108(33), 0(14)>
  # ivtmp_155 = PHI <ivtmp_154(33), 256(14)>
  # vectp.4717_211 = PHI <vectp.4717_212(33), vectp.4718_209(14)>
  # ivtmp_208 = PHI <ivtmp_202(33), 0(14)>
  MEM[(float *)vectp.4717_211] = vect_cst__215;
  j_108 = j_174 + 1;
  ivtmp_154 = ivtmp_155 - 1;
  vectp.4717_212 = vectp.4717_211 + 16;
  ivtmp_202 = ivtmp_208 + 1;
  if (ivtmp_202 < 64)
    goto <bb 33>; [96.00%]
  else
    goto <bb 13>; [4.00%]
;;    succ:       33
;;                13

;;   basic block 13, loop depth 1
;;    pred:       12
  ivtmp_152 = ivtmp_153 - 1;
  if (ivtmp_152 != 0)
    goto <bb 32>; [98.99%]
  else
    goto <bb 21>; [1.01%]
;;    succ:       32
;;                21

;;   basic block 32, loop depth 1
;;    pred:       13
  goto <bb 14>; [100.00%]
;;    succ:       14

;;   basic block 21, loop depth 0
;;    pred:       13
  goto <bb 17>; [100.00%]
;;    succ:       17

;;   basic block 22, loop depth 0
;;    pred:       10
;;    succ:       14

;;   basic block 14, loop depth 1
;;    pred:       22
;;                32
  # i_173 = PHI <0(22), _101(32)>
  # ivtmp_153 = PHI <256(22), ivtmp_152(32)>
  _101 = i_173 + 1;
  _102 = (float) _101;
  _103 = (long unsigned int) i_173;
  _104 = _103 * 1024;
  _105 = &bb + _104;
  _106 = 1.0e+0 / _102;
  vect_cst__215 = {_106, _106, _106, _106};
  _210 = (long unsigned int) i_173;
  _214 = _210 * 1024;
  vectp.4718_209 = &bb + _214;
  goto <bb 12>; [100.00%]
;;    succ:       12

;;   basic block 31, loop depth 2
;;    pred:       15
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       31
;;                17
  # j_172 = PHI <j_90(31), 0(17)>
  # ivtmp_194 = PHI <ivtmp_189(31), 256(17)>
  # vectp.4715_25 = PHI <vectp.4715_24(31), vectp.4716_41(17)>
  # ivtmp_217 = PHI <ivtmp_218(31), 0(17)>
  MEM[(float *)vectp.4715_25] = vect_cst__47;
  j_90 = j_172 + 1;
  ivtmp_189 = ivtmp_194 - 1;
  vectp.4715_24 = vectp.4715_25 + 16;
  ivtmp_218 = ivtmp_217 + 1;
  if (ivtmp_218 < 64)
    goto <bb 31>; [96.00%]
  else
    goto <bb 16>; [4.00%]
;;    succ:       31
;;                16

;;   basic block 16, loop depth 1
;;    pred:       15
  ivtmp_156 = ivtmp_184 - 1;
  if (ivtmp_156 != 0)
    goto <bb 30>; [98.99%]
  else
    goto <bb 42>; [1.01%]
;;    succ:       30
;;                42

;;   basic block 30, loop depth 1
;;    pred:       16
;;    succ:       17

;;   basic block 17, loop depth 1
;;    pred:       21
;;                30
  # i_171 = PHI <0(21), _83(30)>
  # ivtmp_184 = PHI <256(21), ivtmp_156(30)>
  _83 = i_171 + 1;
  _84 = (float) _83;
  _85 = (long unsigned int) i_171;
  _86 = _85 * 1024;
  _87 = &cc + _86;
  _88 = 1.0e+0 / _84;
  vect_cst__47 = {_88, _88, _88, _88};
  _39 = (long unsigned int) i_171;
  _26 = _39 * 1024;
  vectp.4716_41 = &cc + _26;
  goto <bb 15>; [100.00%]
;;    succ:       15

;;   basic block 42, loop depth 0
;;    pred:       16
  vect_cst__100 = { 4, 4, 4, 4 };
  vect_cst__91 = { 1, 1, 1, 1 };
  vect_cst__82 = { 3, 3, 3, 3 };
  vect_cst__74 = { 1, 1, 1, 1 };
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       29
;;                42
  # i_158 = PHI <_21(29), 0(42)>
  # ivtmp_220 = PHI <ivtmp_219(29), 32000(42)>
  # vect_vec_iv_.4709_97 = PHI <vect_vec_iv_.4709_92(29), { 0, 1, 2, 3 }(42)>
  # vectp_indx.4713_72 = PHI <vectp_indx.4713_67(29), &indx(42)>
  # ivtmp_57 = PHI <ivtmp_52(29), 0(42)>
  vect_vec_iv_.4709_92 = vect_vec_iv_.4709_97 + vect_cst__100;
  vect__21.4710_89 = vect_vec_iv_.4709_97 + vect_cst__91;
  _21 = i_158 + 1;
  vect__22.4711_75 = vect__21.4710_89 & vect_cst__82;
  _22 = _21 & 3;
  vect__23.4712_73 = vect__22.4711_75 + vect_cst__74;
  _23 = _22 + 1;
  MEM[(int *)vectp_indx.4713_72] = vect__23.4712_73;
  ivtmp_219 = ivtmp_220 - 1;
  vectp_indx.4713_67 = vectp_indx.4713_72 + 16;
  ivtmp_52 = ivtmp_57 + 1;
  if (ivtmp_52 < 8000)
    goto <bb 29>; [96.00%]
  else
    goto <bb 19>; [4.00%]
;;    succ:       29
;;                19

;;   basic block 29, loop depth 1
;;    pred:       18
  goto <bb 18>; [100.00%]
;;    succ:       18

;;   basic block 19, loop depth 0
;;    pred:       18
  *s1_43(D) = 1.0e+0;
  *s2_45(D) = 2.0e+0;
  return;
;;    succ:       EXIT

}


